2025-04-02 09:39:02,580 - WafLogger - DEBUG - Testing debug message.
2025-04-02 09:39:02,582 - WafLogger - INFO - Testing info message.
2025-04-02 09:39:02,583 - WafLogger - WARNING - Testing warning message.
2025-04-02 09:39:02,584 - WafLogger - ERROR - Testing error message.
2025-04-02 09:39:02,584 - WafLogger - CRITICAL - Testing critical message.
2025-04-02 09:41:37,494 - WafLogger - DEBUG - Testing debug message. [logger_config.py:38]
2025-04-02 09:41:37,495 - WafLogger - INFO - Testing info message. [logger_config.py:39]
2025-04-02 09:41:37,495 - WafLogger - WARNING - Testing warning message. [logger_config.py:40]
2025-04-02 09:41:37,495 - WafLogger - ERROR - Testing error message. [logger_config.py:41]
2025-04-02 09:41:37,496 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:42]
2025-04-02 09:48:07,968 - WafLogger - DEBUG - Testing debug message. [logger_config.py:38]
2025-04-02 09:48:07,969 - WafLogger - INFO - Testing info message. [logger_config.py:39]
2025-04-02 09:48:07,969 - WafLogger - WARNING - Testing warning message. [logger_config.py:40]
2025-04-02 09:48:07,969 - WafLogger - ERROR - Testing error message. [logger_config.py:41]
2025-04-02 09:48:07,970 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:42]
2025-04-02 10:38:25,024 - WafLogger - ERROR - Testing error message. [logger_config.py:52]
2025-04-02 10:38:25,033 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:53]
2025-04-02 10:44:09,672 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:44:09,673 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 10:49:26,401 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:49:26,401 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 10:50:57,022 - WafLogger - DEBUG - Testing debug message. [logger_config.py:48]
2025-04-02 10:50:57,022 - WafLogger - INFO - Testing info message. [logger_config.py:49]
2025-04-02 10:50:57,023 - WafLogger - WARNING - Testing warning message. [logger_config.py:50]
2025-04-02 10:50:57,023 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:50:57,023 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 10:52:04,433 - WafLogger - DEBUG - Testing debug message. [logger_config.py:48]
2025-04-02 10:52:04,434 - WafLogger - INFO - Testing info message. [logger_config.py:49]
2025-04-02 10:52:04,434 - WafLogger - WARNING - Testing warning message. [logger_config.py:50]
2025-04-02 10:52:04,435 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:52:04,435 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 10:52:39,275 - WafLogger - DEBUG - Testing debug message. [logger_config.py:49]
2025-04-02 10:52:39,276 - WafLogger - INFO - Testing info message. [logger_config.py:50]
2025-04-02 10:52:39,277 - WafLogger - WARNING - Testing warning message. [logger_config.py:51]
2025-04-02 10:52:39,277 - WafLogger - ERROR - Testing error message. [logger_config.py:52]
2025-04-02 10:52:39,277 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:53]
2025-04-02 10:53:23,828 - WafLogger - DEBUG - Testing debug message. [logger_config.py:50]
2025-04-02 10:53:23,828 - WafLogger - INFO - Testing info message. [logger_config.py:51]
2025-04-02 10:53:23,829 - WafLogger - WARNING - Testing warning message. [logger_config.py:52]
2025-04-02 10:53:23,829 - WafLogger - ERROR - Testing error message. [logger_config.py:53]
2025-04-02 10:53:23,830 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:54]
2025-04-02 10:54:15,694 - WafLogger - DEBUG - Testing debug message. [logger_config.py:51]
2025-04-02 10:54:15,695 - WafLogger - INFO - Testing info message. [logger_config.py:52]
2025-04-02 10:54:15,695 - WafLogger - WARNING - Testing warning message. [logger_config.py:53]
2025-04-02 10:54:15,695 - WafLogger - ERROR - Testing error message. [logger_config.py:54]
2025-04-02 10:54:15,696 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:55]
2025-04-02 10:54:57,028 - WafLogger - ERROR - Testing error message. [logger_config.py:54]
2025-04-02 10:54:57,029 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:55]
2025-04-02 10:55:21,083 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:55:21,084 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 11:06:22,696 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 11:06:22,745 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 11:06:22,772 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 11:06:43,152 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 11:06:43,153 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 11:06:43,528 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:23:51,939 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:23:51,958 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:23:51,960 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:23:51,961 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:23:51,966 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:23:51,967 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:23:51,968 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:23:51,969 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:23:51,970 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:23:51,997 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:23:51,998 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:23:52,065 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:23:52,073 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:23:52,077 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:23:52,078 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:23:52,078 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,078 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:23:52,079 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,079 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:23:52,079 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,080 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:23:52,080 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,081 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:23:52,081 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,083 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:24:17,065 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:24:17,067 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:24:17,148 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:24:17,149 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:24:17,154 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:24:17,155 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:24:17,156 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:24:17,157 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:24:17,158 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:24:17,188 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:24:17,190 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:24:17,210 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:24:17,211 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:24:17,212 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:24:17,213 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:24:17,214 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,215 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:24:17,216 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,217 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:24:17,218 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,219 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:24:17,219 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,220 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:24:17,220 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,221 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:94]
2025-04-02 12:24:17,222 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,230 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:30:14,462 - WafLogger - DEBUG - Testing debug message. [logger_config.py:48]
2025-04-02 12:30:14,463 - WafLogger - INFO - Testing info message. [logger_config.py:49]
2025-04-02 12:30:14,463 - WafLogger - WARNING - Testing warning message. [logger_config.py:50]
2025-04-02 12:30:14,464 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 12:30:14,464 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 12:31:14,810 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:31:14,812 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:31:14,814 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:31:14,815 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:31:14,820 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:31:14,821 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:31:14,821 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:31:14,822 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:31:14,822 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:31:14,823 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:31:14,824 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:31:14,844 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:31:14,884 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:31:14,899 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:31:14,900 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:31:14,901 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,904 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:31:14,908 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,909 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:31:14,909 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,910 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:31:14,910 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,911 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:31:14,911 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,926 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:31:34,773 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:31:34,775 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:31:34,778 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:31:34,779 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:31:34,784 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:31:34,785 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:31:34,786 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:31:34,787 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:31:34,787 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:31:34,789 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:31:34,791 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:31:34,809 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:31:34,811 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:31:34,815 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:31:34,816 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:31:34,816 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,817 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:31:34,818 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,818 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:31:34,819 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,822 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:31:34,824 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,825 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:31:34,825 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,826 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:94]
2025-04-02 12:31:34,827 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,831 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:34:59,897 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:34:59,898 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:34:59,900 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:34:59,901 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:34:59,906 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:34:59,906 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:34:59,907 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:34:59,907 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:34:59,907 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:34:59,908 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:34:59,908 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:34:59,926 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:34:59,927 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:34:59,928 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:34:59,930 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:34:59,931 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,932 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:34:59,934 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,936 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:34:59,937 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,938 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:34:59,938 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,938 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:34:59,939 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,946 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:35:20,493 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:35:20,493 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:35:20,494 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:35:20,495 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:35:20,498 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:35:20,499 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:35:20,499 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:35:20,499 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:35:20,499 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:35:20,500 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:35:20,500 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:35:20,517 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:35:20,518 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:35:20,519 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:35:20,520 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:35:20,520 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,520 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:35:20,521 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,521 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:35:20,521 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,522 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:35:20,522 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,523 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:35:20,524 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,525 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:94]
2025-04-02 12:35:20,526 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,529 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:31:21,589 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 13:31:21,598 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 13:31:21,601 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 13:31:21,601 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 13:31:21,605 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 13:31:21,606 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 13:31:21,606 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 13:31:21,606 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 13:31:21,606 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 13:31:21,607 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 13:31:21,607 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 13:31:21,632 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 13:31:21,637 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 13:31:21,638 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 13:31:21,639 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 13:31:21,639 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,639 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,639 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 13:31:21,641 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,641 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,641 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 13:31:21,641 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 13:31:21,642 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,642 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,642 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 13:31:21,642 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 13:31:21,643 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 13:31:21,643 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,643 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,643 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 13:31:21,644 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 13:31:21,647 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 13:31:21,648 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 13:31:21,648 - WafLogger - DEBUG - Passing the keword 'tc_id' and input 'TC001' to the keword manager. [runner.py:177]
2025-04-02 13:31:21,649 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 13:31:21,649 - WafLogger - DEBUG - Passing the keword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keword manager. [runner.py:181]
2025-04-02 13:31:21,649 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 13:31:21,649 - WafLogger - DEBUG - Passing the keword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keword manager. [runner.py:185]
2025-04-02 13:31:21,650 - WafLogger - DEBUG - Passing the keword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keword manager. [runner.py:186]
2025-04-02 13:31:21,650 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:31:21,650 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 13:31:25,407 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 13:31:43,775 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 13:31:43,775 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 13:31:43,778 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 13:31:43,778 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 13:31:43,782 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 13:31:43,782 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 13:31:43,783 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 13:31:43,783 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 13:31:43,783 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 13:31:43,784 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 13:31:43,784 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 13:31:43,801 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 13:31:43,802 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 13:31:43,803 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 13:31:43,803 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 13:31:43,803 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 13:31:43,805 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 13:31:43,805 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,805 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,805 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 13:31:43,806 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 13:31:43,806 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,806 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,806 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 13:31:43,808 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 13:31:43,808 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,808 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,808 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 13:31:43,811 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 13:31:43,812 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 13:31:43,813 - WafLogger - DEBUG - Passing the keword 'tc_id' and input 'TC001' to the keword manager. [runner.py:177]
2025-04-02 13:31:43,813 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 13:31:43,813 - WafLogger - DEBUG - Passing the keword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keword manager. [runner.py:181]
2025-04-02 13:31:43,813 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 13:31:43,814 - WafLogger - DEBUG - Passing the keword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keword manager. [runner.py:185]
2025-04-02 13:31:43,814 - WafLogger - DEBUG - Passing the keword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keword manager. [runner.py:186]
2025-04-02 13:31:43,814 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:31:43,814 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 13:31:57,174 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 13:32:08,731 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 13:32:57,120 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 13:32:57,120 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 13:32:57,122 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 13:32:57,123 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 13:32:57,126 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 13:32:57,126 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 13:32:57,140 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 13:32:57,141 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 13:32:57,142 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 13:32:57,143 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 13:32:57,143 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,144 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,144 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 13:32:57,144 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 13:32:57,145 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,145 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,145 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 13:32:57,145 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 13:32:57,146 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,146 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,146 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 13:32:57,147 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 13:32:57,147 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,147 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,148 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 13:32:57,148 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 13:32:57,149 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 13:32:57,150 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,150 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,150 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 13:32:57,151 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 13:32:57,153 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 13:32:57,154 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 13:32:57,155 - WafLogger - DEBUG - Passing the keword 'tc_id' and input 'TC001' to the keword manager. [runner.py:177]
2025-04-02 13:32:57,155 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 13:32:57,155 - WafLogger - DEBUG - Passing the keword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keword manager. [runner.py:181]
2025-04-02 13:32:57,156 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 13:32:57,156 - WafLogger - DEBUG - Passing the keword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keword manager. [runner.py:185]
2025-04-02 13:32:57,157 - WafLogger - DEBUG - Passing the keword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keword manager. [runner.py:186]
2025-04-02 13:32:57,157 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:32:57,157 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 13:33:00,086 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 13:33:17,200 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 13:33:17,200 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 13:33:17,201 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 13:33:17,202 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 13:33:17,206 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 13:33:17,217 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 13:33:17,219 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 13:33:17,220 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 13:33:17,221 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 13:33:17,222 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,222 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,223 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 13:33:17,223 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 13:33:17,223 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,223 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 13:33:17,227 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 13:33:17,228 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 13:33:17,228 - WafLogger - DEBUG - Passing the keword 'tc_id' and input 'TC001' to the keword manager. [runner.py:177]
2025-04-02 13:33:17,228 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 13:33:17,229 - WafLogger - DEBUG - Passing the keword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keword manager. [runner.py:181]
2025-04-02 13:33:17,229 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 13:33:17,230 - WafLogger - DEBUG - Passing the keword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keword manager. [runner.py:185]
2025-04-02 13:33:17,230 - WafLogger - DEBUG - Passing the keword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keword manager. [runner.py:186]
2025-04-02 13:33:17,230 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:33:17,231 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 13:33:30,291 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 13:33:35,483 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:12:30,205 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:12:30,219 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:12:30,222 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:12:30,222 - WafLogger - ERROR - The syntax for running is 'runner.exe start' or to check the version use 'runner.exe --version' [runner.py:599]
2025-04-02 17:13:27,766 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:13:27,767 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:13:27,768 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:13:27,769 - WafLogger - ERROR - The syntax for running is 'runner.exe start' or to check the version use 'runner.exe --version' [runner.py:599]
2025-04-02 17:13:42,105 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:13:42,106 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:13:42,111 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:13:42,111 - WafLogger - ERROR - Only one of 'start', '--version', or '--encrypt-file' can be used at a time. [runner.py:447]
2025-04-02 17:14:15,503 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:14:15,503 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:16:15,083 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:16:15,083 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:16:27,112 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:16:27,113 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:16:27,114 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:16:27,114 - WafLogger - ERROR - '--output-file' can only be used with '--encrypt-file'. [runner.py:451]
2025-04-02 17:17:39,872 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:17:39,872 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:17:39,874 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:17:39,874 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:17:39,878 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:17:39,879 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:17:40,289 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:17:40,292 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:17:40,293 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:17:40,294 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:17:40,294 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:17:40,295 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:17:40,295 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:17:40,295 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,295 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:17:40,296 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,296 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:17:40,296 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,296 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:17:40,297 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,297 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:17:40,297 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,298 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:17:40,298 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,298 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:17:40,298 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:17:40,299 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:17:40,299 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:17:40,299 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:544]
2025-04-02 17:17:40,313 - WafLogger - DEBUG - Starting the execution recording. [runner.py:550]
2025-04-02 17:17:40,314 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:17:40,315 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:17:40,315 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:17:40,494 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:17:42,479 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:17:42,480 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:17:42,483 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:17:42,483 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:17:42,509 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:17:42,509 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:17:42,510 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:17:42,510 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:17:42,510 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:17:42,539 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:17:42,540 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:17:42,567 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:17:42,573 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:17:42,576 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:17:42,579 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:17:42,579 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,579 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,580 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:17:42,580 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:17:42,580 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,580 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,581 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:17:42,621 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:17:42,622 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,622 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,622 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:17:42,623 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:17:42,623 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,623 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,625 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:17:42,625 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:17:42,626 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:17:42,627 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:17:42,627 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:17:42,627 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:17:42,628 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:17:42,628 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:17:42,628 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:17:42,628 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:186]
2025-04-02 17:17:42,629 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:17:42,629 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:17:42,629 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:17:42,629 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:17:42,630 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:203]
2025-04-02 17:17:47,289 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:17:47,290 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:17:50,824 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:17:50,825 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:17:52,797 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:18:02,435 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:18:05,338 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:18:05,339 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:18:05,340 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:18:05,340 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:18:05,342 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:18:07,617 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:18:07,618 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:18:07,619 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:18:07,619 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:18:07,702 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:18:07,702 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:18:07,702 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:18:07,703 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:18:07,703 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:18:07,721 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:18:07,722 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:18:07,735 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:18:07,738 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:18:07,738 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:18:07,739 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:18:07,739 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,739 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,739 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:18:07,740 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:18:07,740 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,740 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,740 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:18:07,741 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:18:07,741 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,741 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,742 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:18:07,742 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:18:07,742 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,743 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,743 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:18:07,743 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:18:07,744 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:18:07,744 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,745 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,745 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:18:07,745 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 17:18:07,745 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,746 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,746 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:18:07,747 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:18:07,748 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:18:07,748 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:18:07,749 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:18:07,749 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:18:07,749 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:18:07,750 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:18:07,750 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:18:07,750 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:18:07,750 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:18:07,751 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:18:07,751 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:18:07,751 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:18:21,705 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:18:21,706 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:18:25,853 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:18:25,854 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 17:18:25,854 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 17:18:26,152 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 200, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF76167A545+20677]
	simdutf::get_active_implementation [0x00007FF7615D6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7618CD75A+1807418]
	(No symbol) [0x00007FF7614172AC]
	(No symbol) [0x00007FF76141758B]
	(No symbol) [0x00007FF7614585A7]
	(No symbol) [0x00007FF76143849F]
	(No symbol) [0x00007FF76140D6ED]
	(No symbol) [0x00007FF761455D61]
	(No symbol) [0x00007FF7614381C3]
	(No symbol) [0x00007FF76140CC36]
	(No symbol) [0x00007FF76140C0C4]
	(No symbol) [0x00007FF76140CA63]
	(No symbol) [0x00007FF7614F5BDD]
	(No symbol) [0x00007FF761502042]
	(No symbol) [0x00007FF7614FAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7617542AA+262026]
	simdutf::get_active_implementation [0x00007FF7615E4421+546385]
	simdutf::get_active_implementation [0x00007FF7615DD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7615DD819+518729]
	simdutf::get_active_implementation [0x00007FF7615CF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 34, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 206, in get_element
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 194, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 184, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 17:18:26,234 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:18:26,234 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:18:27,090 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:18:35,318 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:27:42,588 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:27:42,589 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:27:42,590 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:27:42,590 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:27:42,592 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:27:42,592 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:27:42,597 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:27:42,597 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:27:42,598 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:27:42,598 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:544]
2025-04-02 17:27:42,611 - WafLogger - DEBUG - Starting the execution recording. [runner.py:550]
2025-04-02 17:27:42,612 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:27:42,612 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:27:42,612 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:27:42,619 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:27:44,906 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:27:44,906 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:27:44,908 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:27:44,908 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:27:44,912 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:27:44,913 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:27:44,913 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:27:44,914 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:27:44,914 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:27:44,914 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:27:44,915 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:27:44,927 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:27:44,928 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:27:44,933 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:27:44,933 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:27:44,933 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:27:44,934 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:27:44,934 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:27:44,934 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:27:44,934 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:27:44,935 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:186]
2025-04-02 17:27:44,935 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:27:44,935 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:27:44,935 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:27:44,935 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:27:44,936 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:203]
2025-04-02 17:27:47,849 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:27:47,849 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:27:51,359 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:27:51,359 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:27:52,520 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:28:01,229 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:28:03,022 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:28:03,023 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:28:03,023 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:28:03,024 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:28:03,024 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:28:03,024 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,655 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:29:32,655 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:29:32,657 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:29:32,657 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:29:32,658 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:29:32,659 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:29:32,663 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:29:32,663 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:29:32,664 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:29:32,665 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:29:32,665 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:29:32,665 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:29:32,666 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:29:32,666 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,666 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:29:32,666 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,667 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:29:32,667 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,667 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:29:32,667 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,668 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:29:32,668 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,668 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:29:32,668 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:29:32,670 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:29:32,670 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:29:32,670 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:29:32,670 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:29:32,677 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:29:32,678 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:29:32,678 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:29:32,678 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:29:32,684 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:29:35,009 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:29:35,010 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:29:35,012 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:29:35,013 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:29:35,017 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:29:35,017 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:29:35,017 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:29:35,017 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:29:35,018 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:29:35,018 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:29:35,018 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:29:35,034 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:29:35,034 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:29:35,035 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:29:35,042 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:29:35,042 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:29:35,042 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:29:35,042 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:29:35,043 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:29:35,043 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:29:35,043 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:29:35,043 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:29:49,148 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:29:49,149 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:29:54,441 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:29:54,442 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 17:29:54,442 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 17:29:54,618 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 200, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 34, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 206, in get_element
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 194, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 184, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 17:29:54,623 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:29:54,623 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:29:55,537 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:30:03,909 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:42:08,063 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:42:08,063 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:42:08,065 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:42:08,065 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:42:08,066 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:42:08,066 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:42:08,070 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:42:08,070 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:42:08,071 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:42:08,072 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:42:08,072 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:42:08,072 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:42:08,076 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:42:08,076 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:42:08,076 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:42:08,086 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:42:08,087 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:42:08,087 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:42:08,087 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:42:08,093 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:42:10,198 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:42:10,201 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:42:10,204 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:42:10,204 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:42:10,209 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:42:10,210 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:42:10,211 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:42:10,211 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:42:10,211 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:42:10,211 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:42:10,212 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:42:10,223 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:42:10,224 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:42:10,225 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:42:10,225 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:42:10,226 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,227 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,228 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:42:10,228 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:42:10,229 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,229 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,229 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,233 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:42:10,234 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:42:10,234 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:42:10,234 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:42:10,234 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:42:10,235 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:42:10,235 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:42:10,235 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:42:10,235 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:42:10,236 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:42:10,236 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:42:10,236 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:42:10,236 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:42:10,236 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:42:23,375 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:42:23,375 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:42:28,291 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:42:28,291 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 17:42:28,291 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 17:42:28,483 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 200, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 34, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 206, in get_element
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 194, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 184, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 17:42:28,489 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:42:28,489 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:42:29,314 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:42:37,608 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:44:57,834 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:44:57,834 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:44:57,835 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:44:57,835 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:44:57,837 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:44:57,837 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:44:57,841 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:44:57,841 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:44:57,843 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:44:57,844 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:44:57,844 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:44:57,844 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:44:57,857 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:44:57,858 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:44:57,858 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:44:57,858 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:44:57,864 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:45:00,188 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:45:00,189 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:45:00,190 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:45:00,191 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:45:00,195 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:45:00,195 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:45:00,196 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:45:00,196 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:45:00,196 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:45:00,197 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:45:00,197 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:45:00,207 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:45:00,207 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:45:00,208 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:45:00,208 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,211 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:45:00,211 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:45:00,211 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:45:00,215 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:45:00,217 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:45:00,218 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:45:00,218 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:45:00,219 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:45:00,219 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:45:00,220 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:45:00,220 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:45:00,220 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 17:45:00,220 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:45:00,221 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:45:00,221 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:45:00,221 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:45:13,441 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:45:13,442 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:45:18,146 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:45:18,146 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 17:45:18,147 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 17:45:18,292 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 200, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 34, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 206, in get_element
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 192, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 17:45:18,296 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:45:18,297 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:45:19,097 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:45:27,336 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:46:17,417 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:46:17,417 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:46:17,419 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:46:17,419 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:46:17,421 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:46:17,421 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:46:17,424 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:46:17,425 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:46:17,426 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:46:17,426 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:46:17,427 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:46:17,427 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,429 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:46:17,429 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,429 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript - Copy.xlsx. [runner.py:532]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:46:17,439 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:46:17,440 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:46:17,440 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:46:17,440 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:46:17,446 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:46:19,781 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:46:19,782 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:46:19,784 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:46:19,784 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:46:19,790 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:46:19,790 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:46:19,792 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:46:19,792 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:46:19,793 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:46:19,793 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:46:19,793 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:46:19,805 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:46:19,805 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:46:19,806 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:46:19,806 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:46:19,807 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,807 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,807 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:46:19,807 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:46:19,808 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,808 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,808 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:46:19,808 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:46:19,811 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:46:19,812 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:46:19,812 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:46:19,812 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:46:19,814 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 17:46:19,814 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:46:19,814 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:46:19,815 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:46:19,815 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:46:32,904 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:46:32,904 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:46:38,066 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:46:38,066 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:46:38,952 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:46:47,093 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 18:12:41,933 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 18:12:41,933 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 18:12:41,935 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 18:12:41,935 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 18:12:41,936 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 18:12:41,937 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 18:12:41,940 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 18:12:41,941 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 18:12:41,941 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 18:12:41,943 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 18:12:41,943 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 18:12:41,943 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 18:12:41,943 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 18:12:41,955 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 18:12:41,956 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 18:12:41,956 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 18:12:41,956 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 18:12:41,961 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 18:12:44,210 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 18:12:44,210 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 18:12:44,212 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 18:12:44,212 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 18:12:44,217 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 18:12:44,217 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 18:12:44,218 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 18:12:44,218 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 18:12:44,218 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 18:12:44,303 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 18:12:44,304 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 18:12:44,320 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 18:12:44,321 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 18:12:44,322 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 18:12:44,323 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 18:12:44,323 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,323 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 18:12:44,325 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 18:12:44,325 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,325 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,325 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 18:12:44,327 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 18:12:44,327 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,328 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,328 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 18:12:44,328 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 18:12:44,329 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 18:12:44,329 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,329 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,329 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 18:12:44,330 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 18:12:44,330 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,330 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,330 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 18:12:44,331 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 18:12:44,332 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 18:12:44,332 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 18:12:44,332 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 18:12:44,332 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 18:12:44,333 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 18:12:44,334 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 18:12:57,386 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:28]
2025-04-02 18:12:57,519 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 18:12:57,519 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 18:12:57,519 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:32]
2025-04-02 18:13:01,480 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 18:13:01,481 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 18:13:01,481 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 18:13:01,507 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:190]
2025-04-02 18:13:01,508 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:42]
2025-04-02 18:13:01,714 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 187, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 38, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 191, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 192, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 43, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:13:01,721 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 18:13:01,722 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 18:13:02,699 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 18:13:04,278 - WafLogger - DEBUG - Closing Browser [driver_functions.py:24]
2025-04-02 18:13:11,075 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 18:14:44,694 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 18:14:44,694 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 18:14:44,695 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 18:14:44,696 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 18:14:44,698 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 18:14:44,698 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 18:14:44,702 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 18:14:44,702 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 18:14:44,703 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 18:14:44,703 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 18:14:44,704 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 18:14:44,704 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 18:14:44,708 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 18:14:44,740 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 18:14:44,740 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 18:14:44,749 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 18:14:44,750 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 18:14:44,750 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 18:14:44,750 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 18:14:44,756 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 18:14:47,037 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 18:14:47,037 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 18:14:47,039 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 18:14:47,040 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 18:14:47,044 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 18:14:47,044 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 18:14:47,044 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 18:14:47,045 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 18:14:47,045 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 18:14:47,045 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 18:14:47,045 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 18:14:47,056 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 18:14:47,058 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 18:14:47,058 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 18:14:47,059 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 18:14:47,059 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,059 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,060 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 18:14:47,060 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 18:14:47,060 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,060 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,061 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 18:14:47,061 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 18:14:47,062 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,062 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,062 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 18:14:47,063 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 18:14:47,064 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,064 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,064 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 18:14:47,064 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,066 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,066 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 18:14:47,067 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 18:14:47,068 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 18:14:47,068 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 18:14:47,069 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 18:14:47,069 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 18:14:47,070 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 18:14:47,070 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 18:14:47,070 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 18:14:47,071 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 18:14:47,071 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 18:14:47,071 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 18:14:47,071 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 18:14:47,071 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 18:14:59,974 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 18:15:00,159 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 18:15:00,159 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 18:15:00,160 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 18:15:05,706 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 18:15:05,706 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 18:15:05,706 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 18:15:05,723 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 18:15:05,723 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 18:15:05,884 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 192, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:15:05,892 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 18:15:05,892 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 18:15:06,720 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 18:15:08,205 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 18:15:15,050 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 18:17:43,252 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 18:17:43,252 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 18:17:43,254 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 18:17:43,255 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 18:17:43,256 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 18:17:43,256 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 18:17:43,260 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 18:17:43,260 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 18:17:43,261 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 18:17:43,262 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 18:17:43,262 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 18:17:43,262 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 18:17:43,263 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:17:43,263 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,263 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 18:17:43,263 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,264 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 18:17:43,264 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,264 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 18:17:43,264 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,265 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 18:17:43,265 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,265 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:17:43,266 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,266 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 18:17:43,268 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 18:17:43,274 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 18:17:43,275 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 18:17:43,276 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 18:17:43,276 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 18:17:43,280 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 18:17:45,517 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 18:17:45,518 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 18:17:45,520 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 18:17:45,521 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 18:17:45,525 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 18:17:45,525 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 18:17:45,525 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 18:17:45,526 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 18:17:45,526 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 18:17:45,526 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 18:17:45,527 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 18:17:45,539 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 18:17:45,539 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 18:17:45,540 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 18:17:45,541 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 18:17:45,541 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,541 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,542 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 18:17:45,542 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 18:17:45,543 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,543 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,543 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 18:17:45,543 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 18:17:45,544 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,544 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,544 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 18:17:45,545 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 18:17:45,545 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,545 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,546 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 18:17:45,546 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 18:17:45,546 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 18:17:45,547 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,547 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,548 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 18:17:45,549 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 18:17:45,549 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,549 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,550 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 18:17:45,551 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 18:17:45,551 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 18:17:45,552 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 18:17:45,552 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 18:17:45,553 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 18:17:45,553 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 18:17:45,553 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 18:17:45,554 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 18:17:45,554 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 18:17:45,555 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 18:17:45,556 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 18:17:45,556 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 18:17:45,556 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 18:17:58,527 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 18:17:58,684 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 18:17:58,684 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 18:17:58,685 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 18:18:03,379 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 18:18:03,380 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 18:18:03,380 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 18:18:03,403 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 18:18:03,403 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 18:18:03,536 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 192, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:18:03,542 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 18:18:03,543 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 18:18:04,389 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 18:18:06,002 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 18:18:12,750 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 18:47:35,964 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 18:47:36,012 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 18:47:36,014 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 18:47:36,015 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 18:47:36,019 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 18:47:36,020 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 18:47:36,025 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 18:47:36,026 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 18:47:36,029 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 18:47:36,029 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 18:47:36,030 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 18:47:36,031 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 18:47:36,032 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:47:36,032 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,033 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 18:47:36,033 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,035 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 18:47:36,035 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,036 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 18:47:36,036 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 18:47:36,039 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 18:47:36,039 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 18:47:36,039 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 18:47:36,039 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 18:47:36,056 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 18:47:36,058 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 18:47:36,059 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 18:47:36,059 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 18:47:36,123 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 18:47:38,454 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 18:47:38,455 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 18:47:38,457 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 18:47:38,457 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 18:47:38,461 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 18:47:38,461 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 18:47:38,462 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 18:47:38,462 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 18:47:38,462 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 18:47:38,463 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 18:47:38,463 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 18:47:38,492 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 18:47:38,501 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 18:47:38,504 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 18:47:38,505 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 18:47:38,509 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 18:47:38,509 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,509 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,509 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 18:47:38,511 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 18:47:38,512 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 18:47:38,513 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 18:47:38,513 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 18:47:38,514 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 18:47:38,514 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 18:47:38,514 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 18:47:38,515 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 18:47:38,515 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 18:47:38,515 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 18:47:38,515 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 18:47:38,515 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 18:47:51,964 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 18:47:51,965 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 18:47:51,966 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 18:47:51,966 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 18:47:51,966 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 18:47:52,146 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 18:47:52,147 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 18:47:52,147 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 18:47:56,613 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 18:47:56,613 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 18:47:56,613 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 18:47:56,652 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 18:47:56,653 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 18:47:56,653 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:188]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6E05FA545+20677]
	simdutf::get_active_implementation [0x00007FF6E0556CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6E084D75A+1807418]
	(No symbol) [0x00007FF6E03972AC]
	(No symbol) [0x00007FF6E039758B]
	(No symbol) [0x00007FF6E03D85A7]
	(No symbol) [0x00007FF6E03B849F]
	(No symbol) [0x00007FF6E038D6ED]
	(No symbol) [0x00007FF6E03D5D61]
	(No symbol) [0x00007FF6E03B81C3]
	(No symbol) [0x00007FF6E038CC36]
	(No symbol) [0x00007FF6E038C0C4]
	(No symbol) [0x00007FF6E038CA63]
	(No symbol) [0x00007FF6E0475BDD]
	(No symbol) [0x00007FF6E0482042]
	(No symbol) [0x00007FF6E047AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6E06D42AA+262026]
	simdutf::get_active_implementation [0x00007FF6E0564421+546385]
	simdutf::get_active_implementation [0x00007FF6E055D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6E055D819+518729]
	simdutf::get_active_implementation [0x00007FF6E054F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:47:56,683 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:189]
2025-04-02 18:47:56,835 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6E05FA545+20677]
	simdutf::get_active_implementation [0x00007FF6E0556CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6E084D75A+1807418]
	(No symbol) [0x00007FF6E03972AC]
	(No symbol) [0x00007FF6E039758B]
	(No symbol) [0x00007FF6E03D85A7]
	(No symbol) [0x00007FF6E03B849F]
	(No symbol) [0x00007FF6E038D6ED]
	(No symbol) [0x00007FF6E03D5D61]
	(No symbol) [0x00007FF6E03B81C3]
	(No symbol) [0x00007FF6E038CC36]
	(No symbol) [0x00007FF6E038C0C4]
	(No symbol) [0x00007FF6E038CA63]
	(No symbol) [0x00007FF6E0475BDD]
	(No symbol) [0x00007FF6E0482042]
	(No symbol) [0x00007FF6E047AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6E06D42AA+262026]
	simdutf::get_active_implementation [0x00007FF6E0564421+546385]
	simdutf::get_active_implementation [0x00007FF6E055D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6E055D819+518729]
	simdutf::get_active_implementation [0x00007FF6E054F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 191, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:47:56,838 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 18:47:56,838 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 18:47:57,842 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 18:47:57,842 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 18:48:00,488 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 18:48:07,313 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:18:47,755 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:18:47,828 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:18:47,830 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:18:47,830 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:18:47,835 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:18:47,836 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:18:47,839 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:18:47,840 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:18:47,842 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:18:47,843 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:18:47,843 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:18:47,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:18:47,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,846 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:18:47,846 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:18:47,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:18:47,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,849 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:18:47,849 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:18:47,850 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:18:47,850 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:18:47,850 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:18:47,865 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:18:47,866 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:18:47,869 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:18:47,869 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:18:47,932 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:18:50,290 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:18:50,290 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:18:50,293 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:18:50,293 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:18:50,298 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:18:50,298 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:18:50,298 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:18:50,299 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:18:50,299 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:18:50,299 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:18:50,299 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:18:50,327 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:18:50,333 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:18:50,335 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:18:50,336 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:18:50,336 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,336 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,336 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:18:50,338 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,339 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,339 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:18:50,339 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:18:50,343 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:18:50,343 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:18:50,345 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:18:50,345 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:18:50,345 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:18:50,345 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:18:50,345 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:18:50,346 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:18:50,346 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:18:50,346 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:18:50,347 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:18:50,347 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:19:03,479 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:19:03,479 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:19:03,479 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:19:03,481 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:19:03,481 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:19:03,481 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:19:03,643 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:19:03,643 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:19:03,643 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:19:03,644 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:19:09,449 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:19:09,582 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:19:09,582 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:19:09,583 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:19:09,605 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:19:09,606 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:19:09,606 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:19:09,612 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:19:09,746 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:19:09,749 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:19:09,749 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:19:10,633 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:19:10,633 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:19:12,890 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:19:20,158 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:22:40,262 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:22:40,263 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:22:40,264 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:22:40,264 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:22:40,268 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:22:40,268 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:22:40,272 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:22:40,272 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:22:40,274 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:22:40,275 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:22:40,275 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:22:40,275 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:22:40,277 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,277 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:22:40,277 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,278 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:22:40,278 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,278 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:22:40,278 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,279 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:22:40,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,279 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:22:40,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,280 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:22:40,280 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,280 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:22:40,280 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:22:40,281 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:22:40,281 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:22:40,281 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:22:40,290 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:22:40,291 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:22:40,291 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:22:40,291 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:22:40,300 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:22:42,664 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:22:42,665 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:22:42,667 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:22:42,668 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:22:42,672 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:22:42,672 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:22:42,673 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:22:42,673 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:22:42,674 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:22:42,674 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:22:42,674 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:22:42,688 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:22:42,689 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:22:42,690 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:22:42,690 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:22:42,691 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,691 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,692 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:22:42,692 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:22:42,693 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,693 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,693 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:22:42,694 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:22:42,694 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,696 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,696 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:22:42,696 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,698 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,698 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:22:42,699 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:22:42,699 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,699 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,699 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:22:42,701 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:22:42,702 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:22:42,702 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:22:42,703 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:22:42,703 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:22:42,703 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:22:42,703 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:22:42,704 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:22:42,704 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:22:42,704 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:22:42,704 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:22:42,704 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:22:55,741 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:22:55,741 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:22:55,741 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:22:55,742 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:22:55,742 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:22:55,742 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:22:55,913 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:22:55,913 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:22:55,914 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:22:55,914 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:23:01,636 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:23:01,796 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:23:01,797 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:23:01,798 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:23:01,819 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:23:01,820 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:23:01,820 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
2025-04-02 19:23:01,820 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:23:01,963 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:23:01,971 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:23:01,971 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:23:02,836 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:23:02,837 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:23:04,307 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:23:11,174 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:37:58,203 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:37:58,242 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:37:58,245 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:37:58,247 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:37:58,250 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:37:58,252 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:37:58,256 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:37:58,258 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:37:58,260 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:37:58,261 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:37:58,262 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:37:58,263 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:37:58,263 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:37:58,264 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,265 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:37:58,265 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,266 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:37:58,266 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,267 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:37:58,268 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,268 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:37:58,269 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,269 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:37:58,270 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,271 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:37:58,271 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,272 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:37:58,272 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,274 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:37:58,275 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,276 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:37:58,277 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:37:58,278 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:37:58,279 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:37:58,279 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:37:58,286 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:37:58,287 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:37:58,289 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:37:58,290 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:37:58,296 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:38:00,540 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:38:00,548 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:38:00,551 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:38:00,552 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:38:00,556 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:38:00,557 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:38:00,558 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:38:00,560 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:38:00,560 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:38:00,561 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:38:00,562 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:38:00,576 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:38:00,579 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:38:00,580 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:38:00,582 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:38:00,583 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,584 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,585 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:38:00,586 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:38:00,587 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,588 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,589 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:38:00,590 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:38:00,592 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,593 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,594 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:38:00,595 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:38:00,596 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,597 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,598 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:38:00,599 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:38:00,600 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:38:00,601 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,601 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,602 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:38:00,603 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:38:00,604 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,605 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,606 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:38:00,610 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:38:00,612 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:38:00,613 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:38:00,614 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:38:00,615 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:38:00,616 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:38:00,616 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:38:00,638 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:38:00,640 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:38:00,642 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:38:00,644 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:38:00,645 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:38:00,663 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:38:00,666 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:38:00,669 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:38:00,672 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:38:00,674 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:38:13,848 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:38:13,851 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:38:13,854 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:38:13,857 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:38:13,859 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:38:13,862 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:38:14,076 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:38:14,079 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:38:14,082 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:38:14,088 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:38:19,504 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:38:19,691 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:38:19,693 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:38:19,694 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:38:19,722 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:38:19,729 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:38:19,733 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:38:19,738 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:38:19,982 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:38:19,988 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:38:19,989 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:38:21,008 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:38:21,010 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:38:22,800 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:38:29,560 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:39:24,556 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:39:24,556 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:39:24,556 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:39:24,558 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:39:24,559 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:39:24,559 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:39:24,563 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:39:24,563 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:39:24,565 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:39:24,565 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:39:24,570 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:39:24,577 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:39:24,578 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:39:24,578 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:39:24,578 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:39:24,583 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:39:26,845 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:39:26,846 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:39:26,848 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:39:26,849 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:39:26,854 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:39:26,854 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:39:26,866 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:39:26,868 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:39:26,869 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:39:26,870 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:39:26,870 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,870 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,870 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:39:26,871 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:39:26,871 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,871 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,871 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:39:26,872 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:39:26,872 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,872 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,872 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:39:26,874 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:39:26,875 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,875 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,875 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:39:26,875 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:39:26,877 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,877 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,877 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:39:26,879 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:39:26,879 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:39:26,879 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:39:26,880 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:39:26,880 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:39:26,880 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:39:26,880 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:39:26,881 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:39:26,881 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:39:26,881 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:39:26,881 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:39:26,882 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:39:26,882 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:39:26,882 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:39:26,882 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:39:26,883 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:39:26,883 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:39:39,762 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:39:39,762 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:39:39,763 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:39:39,763 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:39:39,763 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:39:39,763 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:39:39,904 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:39:39,904 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:39:39,905 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:39:39,905 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:39:46,855 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:39:47,002 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:39:47,003 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:39:47,003 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:39:47,040 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:39:47,040 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:39:47,040 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:39:47,046 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:39:47,189 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:39:47,195 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:39:47,195 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:39:48,036 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:39:48,036 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:39:49,470 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:39:56,248 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:45:46,384 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:45:46,384 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:45:46,386 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:45:46,387 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:45:46,389 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:45:46,389 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:45:46,392 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:45:46,393 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:45:46,394 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:45:46,395 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:45:46,395 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:45:46,395 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:45:46,396 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:45:46,396 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,396 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:45:46,396 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,397 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:45:46,397 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,397 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:45:46,397 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,398 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:45:46,398 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,398 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:45:46,398 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:45:46,400 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,400 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:45:46,400 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:45:46,400 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:45:46,401 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:45:46,401 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:45:46,410 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:45:46,411 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:45:46,411 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:45:46,411 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:45:46,416 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:45:48,734 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:45:48,735 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:45:48,737 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:45:48,737 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:45:48,742 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:45:48,743 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:45:48,744 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:45:48,745 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:45:48,745 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:45:48,745 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:45:48,745 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:45:48,757 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:45:48,758 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:45:48,759 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:45:48,759 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:45:48,759 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,762 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,762 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:45:48,762 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:45:48,762 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:45:48,765 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:45:48,765 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:45:48,766 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:45:48,766 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:45:48,767 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:45:48,767 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:45:48,767 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:45:48,768 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:45:48,768 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:45:48,768 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:45:48,768 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:45:48,769 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:45:48,769 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:45:48,769 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:45:48,769 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:45:48,769 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:45:48,770 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:46:01,733 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:46:01,733 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:46:01,733 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:46:01,733 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:46:01,734 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:46:01,734 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:46:01,868 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:46:01,868 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:46:01,869 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:46:01,869 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:46:06,202 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:46:06,343 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:46:06,343 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:46:06,344 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:46:06,365 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:46:06,365 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:46:06,366 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
2025-04-02 19:46:06,366 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:46:06,495 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:46:06,501 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:46:06,501 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:46:07,340 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:46:07,340 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:46:08,784 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:46:15,605 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:50:41,406 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:50:41,406 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:50:41,408 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:50:41,408 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:50:41,410 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:50:41,410 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:50:41,415 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:50:41,415 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:50:41,416 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:50:41,420 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:50:41,420 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:50:41,420 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:50:41,420 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:50:41,427 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:50:41,428 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:50:41,429 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:50:41,429 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:50:41,434 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:50:43,854 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:50:43,855 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:50:43,858 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:50:43,859 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:50:43,863 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:50:43,864 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:50:43,864 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:50:43,864 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:50:43,865 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:50:43,865 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:50:43,865 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:50:43,874 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:50:43,875 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:50:43,876 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:50:43,877 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:50:43,878 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,878 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,878 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:50:43,879 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:50:43,879 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,879 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,879 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:50:43,880 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:50:43,880 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,880 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,881 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:50:43,881 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:50:43,881 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,882 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,882 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:50:43,883 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:50:43,883 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:50:43,885 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,885 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,886 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:50:43,888 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:50:43,888 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,888 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,888 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:50:43,890 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:50:43,892 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:50:43,892 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:50:43,892 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:50:43,892 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:50:43,893 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:50:43,893 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:50:43,894 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:50:43,894 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:50:43,894 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:50:43,895 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:50:43,895 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:50:57,085 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:50:57,086 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:50:57,087 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:50:57,087 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:50:57,088 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:50:57,089 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:50:57,225 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:50:57,226 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:50:57,226 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:50:57,226 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:51:01,868 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:51:02,020 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:51:02,021 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:51:02,022 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:51:02,043 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:51:02,044 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:51:02,045 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:51:02,056 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:51:02,221 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:51:02,228 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:51:02,228 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:51:03,109 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:51:03,109 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:51:04,718 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:51:11,481 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:53:07,838 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:53:07,838 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:53:07,839 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:53:07,840 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:53:07,841 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:53:07,841 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:53:07,845 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:53:07,845 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:53:07,846 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:53:07,846 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:53:07,850 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,850 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:53:07,850 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:53:07,850 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:53:07,851 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:53:07,851 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:53:07,857 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:53:07,858 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:53:07,858 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:53:07,858 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:53:07,863 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:53:10,198 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:53:10,200 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:53:10,202 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:53:10,203 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:53:10,208 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:53:10,208 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:53:10,210 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:53:10,210 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:53:10,210 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:53:10,211 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:53:10,211 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:53:10,226 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:53:10,227 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:53:10,228 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:53:10,230 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,230 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,230 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:53:10,230 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,232 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,232 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:53:10,232 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:53:10,232 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:53:10,233 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,233 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,233 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:53:10,234 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:53:10,234 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,235 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,235 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:53:10,238 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:53:10,239 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:53:10,239 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:53:10,239 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:53:10,240 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:53:10,240 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:53:10,240 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:53:10,240 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:53:10,241 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:53:10,241 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:53:10,241 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:53:10,241 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:53:10,241 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:53:10,242 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:53:10,242 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:53:10,242 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:53:10,244 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:53:23,259 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:53:23,260 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:53:23,260 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:53:23,261 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:53:23,261 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:53:23,262 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:53:23,415 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:53:23,416 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:53:23,416 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:53:23,417 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:53:28,991 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:53:29,109 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:53:29,109 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:53:29,110 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:53:29,130 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:53:29,130 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:53:29,131 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:53:29,137 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:53:29,290 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:53:29,316 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:53:29,317 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:53:30,170 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:53:30,170 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:53:31,723 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:53:38,601 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:56:26,264 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:56:26,264 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:56:26,266 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:56:26,266 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:56:26,268 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:56:26,268 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:56:26,272 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:56:26,273 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:56:26,274 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:56:26,274 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:56:26,274 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:56:26,275 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:56:26,275 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:56:26,275 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:56:26,276 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:56:26,276 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,277 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:56:26,277 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,277 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:56:26,278 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,278 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:56:26,278 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,278 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,280 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:56:26,280 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:56:26,281 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:56:26,281 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:56:26,281 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:56:26,288 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:56:26,289 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:56:26,289 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:56:26,290 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:56:26,295 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:56:28,722 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:56:28,723 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:56:28,724 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:56:28,725 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:56:28,729 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:56:28,730 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:56:28,731 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:56:28,731 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:56:28,732 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:56:28,732 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:56:28,732 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:56:28,743 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:56:28,744 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:56:28,745 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:56:28,746 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:56:28,746 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,747 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,747 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:56:28,747 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:56:28,748 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,748 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,748 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:56:28,750 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,750 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,750 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:56:28,750 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:56:28,751 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:56:28,751 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,751 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,751 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:56:28,752 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:56:28,752 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,752 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,752 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:56:28,753 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:56:28,754 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:56:28,754 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:56:28,754 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:56:28,754 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:56:28,755 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:56:42,052 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:56:42,052 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:56:42,053 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:56:42,053 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:56:42,054 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:56:42,055 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:56:42,232 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:56:42,232 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:56:42,232 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:56:42,233 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:56:47,267 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:56:47,475 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:56:47,476 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:56:47,476 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:56:47,495 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:56:47,495 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:56:47,496 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:56:47,655 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:56:47,812 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:56:47,818 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:56:47,819 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:56:48,760 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:56:48,761 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:56:50,284 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:56:57,099 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:40:09,080 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:40:09,096 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:40:09,098 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:40:09,098 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:40:09,100 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:40:09,100 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:40:09,112 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:40:09,113 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:40:09,114 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:40:09,116 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:40:09,116 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:40:09,116 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:40:09,117 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:40:09,117 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,118 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:40:09,118 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,118 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:40:09,119 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,119 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:40:09,119 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,119 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:40:09,122 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:40:09,122 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:40:09,122 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:40:09,135 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:40:09,136 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:40:09,137 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:40:09,138 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:40:09,199 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:40:11,580 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:40:11,581 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:40:11,584 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:40:11,584 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:40:11,589 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:40:11,590 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:40:11,591 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:40:11,591 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:40:11,592 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:40:11,592 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:40:11,592 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:40:11,746 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:40:11,770 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:40:11,781 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:40:11,783 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:40:11,783 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,783 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,784 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:40:11,785 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:40:11,785 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,785 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,786 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:40:11,786 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:40:11,787 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,787 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,787 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:40:11,788 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:40:11,789 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,789 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,789 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:40:11,789 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:40:11,790 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:40:11,790 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,790 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,790 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:40:11,791 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:40:11,791 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,791 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,791 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:40:11,795 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:40:11,797 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:40:11,798 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:40:11,799 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:40:11,799 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:40:11,799 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:40:11,800 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:40:11,800 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:40:11,800 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:40:11,800 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:40:11,801 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:40:11,801 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:40:11,801 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:40:11,802 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:40:11,802 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:40:11,802 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:40:11,803 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:40:25,209 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:40:25,294 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:40:25,294 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:40:25,295 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:40:25,295 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:40:25,295 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:40:25,444 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:40:25,445 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:40:25,446 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:40:25,446 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:40:29,878 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:40:30,032 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:40:30,032 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:40:30,033 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:40:30,057 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:40:30,058 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:40:30,058 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 20:40:30,219 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:40:30,373 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 20:40:30,379 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:40:30,380 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:40:31,269 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:40:31,270 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:40:33,439 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:40:40,444 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:42:00,744 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:42:00,745 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:42:00,746 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:42:00,746 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:42:00,749 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:42:00,749 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:42:00,753 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:42:00,753 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:42:00,757 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:42:00,758 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:42:00,758 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:42:00,759 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:42:00,759 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:42:00,759 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,759 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:42:00,760 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,760 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:42:00,760 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,760 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:42:00,761 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,761 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:42:00,761 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,761 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,763 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:42:00,763 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,763 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:42:00,763 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:42:00,764 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:42:00,764 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:42:00,764 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:42:00,774 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:42:00,775 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:42:00,775 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:42:00,775 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:42:00,783 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:42:03,156 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:42:03,156 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:42:03,158 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:42:03,158 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:42:03,162 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:42:03,162 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:42:03,163 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:42:03,163 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:42:03,163 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:42:03,164 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:42:03,164 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:42:03,175 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:42:03,175 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:42:03,176 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:42:03,177 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:42:03,178 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:42:03,180 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:42:03,180 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,180 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,181 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:42:03,181 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:42:03,181 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,182 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,182 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:42:03,182 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:42:03,182 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:42:03,183 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,183 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,183 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:42:03,183 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:42:03,184 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,184 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,184 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:42:03,186 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:42:03,186 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:42:03,186 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:42:03,186 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:42:03,187 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:42:03,187 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:42:03,187 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:42:03,188 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:42:03,188 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:42:03,188 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:42:03,188 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:42:03,189 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:42:03,189 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:42:03,189 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:42:03,189 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:42:03,190 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:42:03,190 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:42:16,152 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:42:16,153 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:42:16,153 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:42:16,153 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:42:16,154 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:42:16,154 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:42:16,317 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:42:16,318 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:42:16,318 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:42:16,319 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:42:21,985 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:42:22,151 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:42:22,151 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:42:22,152 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:42:22,172 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:42:22,172 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:42:22,172 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:42:22,257 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:42:22,407 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:42:22,410 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:42:22,410 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:42:23,446 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:42:23,446 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:42:25,087 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:42:31,936 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:45:06,195 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:45:06,195 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:45:06,196 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:45:06,197 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:45:06,199 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:45:06,199 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:45:06,202 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:45:06,203 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:45:06,205 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:45:06,206 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:45:06,206 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:45:06,207 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:45:06,207 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:45:06,207 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,207 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:45:06,211 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,211 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:45:06,211 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,211 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:45:06,212 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:45:06,212 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:45:06,212 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:45:06,212 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:45:06,221 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:45:06,223 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:45:06,223 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:45:06,223 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:45:06,228 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:45:08,677 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:45:08,678 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:45:08,680 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:45:08,682 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:45:08,686 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:45:08,687 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:45:08,687 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:45:08,688 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:45:08,688 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:45:08,688 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:45:08,688 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:45:08,700 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:45:08,702 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:45:08,704 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:45:08,705 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:45:08,705 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,705 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,705 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:45:08,708 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:45:08,708 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:45:08,708 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,708 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:45:08,711 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:45:08,712 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:45:08,712 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:45:08,712 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:45:08,714 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:45:08,714 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:45:08,714 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:45:08,714 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:45:08,714 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:45:08,715 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:45:08,715 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:45:08,715 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:45:22,133 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:45:22,134 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:45:22,134 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:45:22,135 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:45:22,135 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:45:22,135 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:45:22,283 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:45:22,284 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:45:22,285 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:45:22,285 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:45:27,535 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:45:27,667 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:45:27,668 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:45:27,668 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:45:27,694 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:45:27,695 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:45:27,695 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:45:27,705 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:45:27,852 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:45:27,856 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:45:27,856 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:45:28,894 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:45:28,894 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:45:30,737 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:45:37,608 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:47:05,671 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:47:05,672 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:47:05,673 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:47:05,674 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:47:05,675 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:47:05,675 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:47:05,678 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:47:05,679 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:47:05,680 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:47:05,680 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:47:05,680 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:47:05,680 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:47:05,684 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:47:05,684 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:47:05,684 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:47:05,692 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:47:05,693 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:47:05,693 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:47:05,693 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:47:05,698 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:47:09,416 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:47:09,417 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:47:09,420 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:47:09,420 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:47:09,429 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:47:09,429 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:47:09,432 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:47:09,432 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:47:09,432 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:47:09,433 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:47:09,433 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:47:09,454 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:47:09,455 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:47:09,456 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:47:09,456 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,462 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:47:09,465 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:47:09,466 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:47:09,466 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:47:09,466 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:47:09,467 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:47:09,467 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:47:09,467 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:47:09,467 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:47:09,468 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:47:09,469 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:47:09,469 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:47:22,429 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:47:22,430 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:47:22,430 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:47:22,431 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:47:22,431 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:47:22,431 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:47:22,593 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:47:22,593 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:47:22,594 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:47:22,594 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:47:28,050 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:47:28,181 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:47:28,182 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:47:28,182 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:47:28,193 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:47:28,193 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:47:28,194 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:47:28,197 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:47:28,336 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:47:28,341 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:47:28,343 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:47:29,232 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:47:29,232 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:47:30,676 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:47:37,728 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:49:45,915 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:49:45,916 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:49:45,917 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:49:45,918 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:49:45,920 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:49:45,920 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:49:45,924 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:49:45,924 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:49:45,925 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:49:45,926 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:49:45,928 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:49:45,929 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:49:45,929 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:49:45,929 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,929 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:49:45,930 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,930 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,934 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:49:45,934 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,934 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:49:45,935 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:49:45,936 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:49:45,936 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:49:45,936 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:49:45,945 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:49:45,946 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:49:45,946 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:49:45,947 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:49:45,952 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:49:48,817 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:49:48,818 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:49:48,822 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:49:48,823 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:49:48,828 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:49:48,828 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:49:48,829 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:49:48,829 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:49:48,829 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:49:48,830 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:49:48,830 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:49:48,844 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:49:48,845 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:49:48,846 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:49:48,846 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:49:48,847 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,847 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,848 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:49:48,848 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:49:48,848 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,849 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,849 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:49:48,852 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:49:48,853 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,853 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,853 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:49:48,854 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:49:48,855 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,855 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,855 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:49:48,855 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:49:48,856 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:49:48,856 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,856 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,856 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:49:48,857 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:49:48,857 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,857 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,857 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:49:48,860 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:49:48,861 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:49:48,861 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:49:48,861 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:49:48,861 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:49:48,863 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:49:48,863 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:49:48,863 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:49:48,863 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:49:48,864 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:49:48,864 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:49:48,864 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:50:02,538 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:50:02,539 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:50:02,539 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:50:02,539 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:50:02,539 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:50:02,540 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:50:02,677 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:50:02,678 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:50:02,678 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:50:02,678 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:50:06,235 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:50:06,372 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:50:06,372 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:50:06,373 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:50:06,390 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:50:06,391 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:50:06,391 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:50:06,398 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:50:06,538 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:50:06,543 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:50:06,543 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:50:07,473 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:50:07,473 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:50:09,087 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:50:15,836 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:51:18,633 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:51:18,633 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:51:18,634 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:51:18,634 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:51:18,636 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:51:18,637 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:51:18,640 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:51:18,641 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:51:18,643 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:51:18,643 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,647 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:51:18,647 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,647 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:51:18,647 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:51:18,655 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:51:18,656 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:51:18,656 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:51:18,656 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:51:18,662 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:51:21,144 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:51:21,144 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:51:21,147 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:51:21,147 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:51:21,151 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:51:21,151 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:51:21,152 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:51:21,152 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:51:21,152 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:51:21,153 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:51:21,153 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:51:21,165 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:51:21,165 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:51:21,166 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:51:21,171 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:51:21,172 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:51:21,172 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:51:21,172 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:51:21,172 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:51:21,173 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:51:34,156 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:51:34,156 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:51:34,157 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:51:34,157 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:51:34,158 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:51:34,158 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:51:34,287 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:51:34,288 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:51:34,288 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:51:34,289 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:51:39,224 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:51:39,353 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:51:39,353 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:51:39,354 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:51:39,369 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:51:39,369 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:51:39,372 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:51:39,524 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:51:39,530 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:51:39,530 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:51:40,288 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:51:40,288 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:51:41,666 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:51:48,497 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:53:14,286 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:53:14,286 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:53:14,288 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:53:14,288 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:53:14,290 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:53:14,290 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:53:14,294 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:53:14,295 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:53:14,296 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:53:14,297 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:53:14,297 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:53:14,298 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:53:14,299 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:53:14,299 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,299 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:53:14,299 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,300 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:53:14,300 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,300 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:53:14,300 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,301 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:53:14,301 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,301 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:53:14,301 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:53:14,303 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,303 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:53:14,303 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:53:14,303 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:53:14,304 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:53:14,304 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:53:14,311 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:53:14,313 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:53:14,313 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:53:14,314 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:53:14,318 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:53:17,000 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:53:17,001 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:53:17,003 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:53:17,003 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:53:17,009 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:53:17,009 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:53:17,013 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:53:17,013 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:53:17,013 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:53:17,014 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:53:17,014 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:53:17,027 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:53:17,028 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:53:17,029 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:53:17,029 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:53:17,030 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,030 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,030 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:53:17,031 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:53:17,031 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,031 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,031 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:53:17,033 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,033 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,033 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:53:17,033 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:53:17,034 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:53:17,034 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,034 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,034 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:53:17,035 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:53:17,035 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,035 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,036 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:53:17,037 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:53:17,038 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:53:17,038 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:53:17,038 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:53:17,039 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:53:17,039 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:53:17,039 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:53:17,040 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:53:17,040 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:53:17,040 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:53:17,040 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:53:17,040 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:53:29,964 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:53:29,964 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:53:29,965 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:53:29,965 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:53:29,965 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:53:29,965 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:53:30,098 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:53:30,099 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:53:30,100 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:53:30,100 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:53:35,984 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:53:36,141 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:53:36,141 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:53:36,142 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:53:36,154 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:53:36,157 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:53:36,324 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:53:36,330 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:53:36,330 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:53:37,193 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:53:37,193 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:53:38,710 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:53:45,646 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 21:04:11,542 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 21:04:11,542 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 21:04:11,544 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 21:04:11,544 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 21:04:11,546 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 21:04:11,546 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 21:04:11,551 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 21:04:11,552 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 21:04:11,553 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 21:04:11,554 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 21:04:11,554 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,556 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 21:04:11,556 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,556 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 21:04:11,557 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,557 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:11,557 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 21:04:11,559 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,559 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 21:04:11,559 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,559 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 21:04:11,560 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 21:04:11,560 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 21:04:11,560 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 21:04:11,560 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 21:04:11,567 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 21:04:11,568 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 21:04:11,568 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 21:04:11,568 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 21:04:11,574 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 21:04:14,573 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 21:04:14,574 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 21:04:14,577 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 21:04:14,578 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 21:04:14,590 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 21:04:14,591 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 21:04:14,592 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 21:04:14,592 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 21:04:14,592 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 21:04:14,593 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 21:04:14,593 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 21:04:14,614 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 21:04:14,615 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 21:04:14,616 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 21:04:14,617 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 21:04:14,617 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,617 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 21:04:14,619 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 21:04:14,619 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,619 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,620 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,623 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 21:04:14,625 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 21:04:14,626 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 21:04:14,627 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 21:04:14,628 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 21:04:14,628 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 21:04:14,629 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 21:04:14,629 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 21:04:14,630 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 21:04:14,631 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 21:04:14,631 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 21:04:14,632 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 21:04:14,632 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 21:04:32,030 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 21:04:32,030 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 21:04:32,032 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 21:04:32,032 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 21:04:32,034 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 21:04:32,034 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 21:04:32,059 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 21:04:32,060 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 21:04:32,075 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 21:04:32,083 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 21:04:32,084 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 21:04:32,085 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 21:04:32,088 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:32,097 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,098 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:32,099 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,099 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 21:04:32,099 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,100 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 21:04:32,100 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,102 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:32,103 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,105 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:32,106 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,107 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 21:04:32,107 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,108 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 21:04:32,111 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,118 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 21:04:32,124 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,126 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 21:04:32,129 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 21:04:32,130 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 21:04:32,130 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 21:04:32,131 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 21:04:32,160 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 21:04:32,166 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 21:04:32,179 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 21:04:32,185 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 21:04:32,202 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 21:04:34,722 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 21:04:34,723 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 21:04:34,725 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 21:04:34,725 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 21:04:34,730 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 21:04:34,730 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 21:04:34,731 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 21:04:34,731 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 21:04:34,731 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 21:04:34,732 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 21:04:34,732 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 21:04:34,746 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 21:04:34,747 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 21:04:34,747 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 21:04:34,748 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 21:04:34,748 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,748 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,749 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 21:04:34,749 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 21:04:34,749 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,749 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,750 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 21:04:34,750 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 21:04:34,750 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,750 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,751 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 21:04:34,751 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 21:04:34,751 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,751 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,752 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 21:04:34,752 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 21:04:34,752 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 21:04:34,753 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,753 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,753 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 21:04:34,754 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 21:04:34,754 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,754 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,754 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 21:04:34,756 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 21:04:34,757 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 21:04:34,757 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 21:04:34,757 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 21:04:34,758 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 21:04:34,758 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 21:04:34,758 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 21:04:34,759 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 21:04:34,759 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 21:04:34,759 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 21:04:34,759 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 21:04:34,760 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 21:04:34,760 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 21:04:34,760 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 21:04:34,760 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 21:04:34,761 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 21:04:34,761 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 21:04:47,549 - WafLogger - ERROR - An error occurred: PyAutoGUI fail-safe triggered from mouse moving to a corner of the screen. To disable this fail-safe, set pyautogui.FAILSAFE to False. DISABLING FAIL-SAFE IS NOT RECOMMENDED. [keywords_manager.py:72]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "D:\allprojects\web_automation_htmltopdf\driver_manager.py", line 171, in launch_browser
    pag.press('esc')
  File "C:\Python312\Lib\site-packages\pyautogui\__init__.py", line 593, in wrapper
    failSafeCheck()
  File "C:\Python312\Lib\site-packages\pyautogui\__init__.py", line 1734, in failSafeCheck
    raise FailSafeException(
pyautogui.FailSafeException: PyAutoGUI fail-safe triggered from mouse moving to a corner of the screen. To disable this fail-safe, set pyautogui.FAILSAFE to False. DISABLING FAIL-SAFE IS NOT RECOMMENDED.
2025-04-02 21:04:47,589 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:73]
2025-04-02 21:04:47,770 - WafLogger - ERROR - An error occurred: PyAutoGUI fail-safe triggered from mouse moving to a corner of the screen. To disable this fail-safe, set pyautogui.FAILSAFE to False. DISABLING FAIL-SAFE IS NOT RECOMMENDED. [runner.py:206]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 204, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "D:\allprojects\web_automation_htmltopdf\driver_manager.py", line 171, in launch_browser
    pag.press('esc')
  File "C:\Python312\Lib\site-packages\pyautogui\__init__.py", line 593, in wrapper
    failSafeCheck()
  File "C:\Python312\Lib\site-packages\pyautogui\__init__.py", line 1734, in failSafeCheck
    raise FailSafeException(
pyautogui.FailSafeException: PyAutoGUI fail-safe triggered from mouse moving to a corner of the screen. To disable this fail-safe, set pyautogui.FAILSAFE to False. DISABLING FAIL-SAFE IS NOT RECOMMENDED.
2025-04-02 21:04:47,775 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 21:04:47,776 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 21:04:48,889 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 21:04:48,890 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 21:04:50,091 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 21:04:56,822 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 21:05:59,836 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 21:05:59,836 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 21:05:59,837 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 21:05:59,838 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 21:05:59,840 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 21:05:59,840 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 21:05:59,844 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 21:05:59,845 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 21:05:59,846 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 21:05:59,846 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 21:05:59,846 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 21:05:59,847 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 21:05:59,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:05:59,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 21:05:59,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 21:05:59,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,850 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 21:05:59,850 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,850 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 21:05:59,850 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,851 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 21:05:59,851 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,851 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 21:05:59,851 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 21:05:59,852 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 21:05:59,852 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 21:05:59,852 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 21:05:59,862 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 21:05:59,863 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 21:05:59,863 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 21:05:59,863 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 21:05:59,871 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 21:06:02,049 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 21:06:02,049 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 21:06:02,051 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 21:06:02,051 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 21:06:02,055 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 21:06:02,066 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 21:06:02,068 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 21:06:02,069 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 21:06:02,069 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 21:06:02,069 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 21:06:02,070 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 21:06:02,082 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 21:06:02,083 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 21:06:02,083 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 21:06:02,084 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 21:06:02,084 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,085 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,085 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 21:06:02,085 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 21:06:02,085 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,086 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,086 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 21:06:02,086 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 21:06:02,087 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,087 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,087 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 21:06:02,089 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 21:06:02,089 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,089 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,089 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 21:06:02,090 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 21:06:02,090 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,090 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,091 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 21:06:02,093 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 21:06:02,094 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 21:06:02,094 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 21:06:02,095 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 21:06:02,095 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 21:06:02,095 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 21:06:02,095 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 21:06:02,096 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 21:06:02,096 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 21:06:02,096 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 21:06:02,096 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 21:06:02,097 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 21:06:02,097 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 21:06:02,097 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 21:06:02,098 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 21:06:02,098 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 21:06:02,098 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 21:06:15,027 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 21:06:15,028 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 21:06:15,028 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 21:06:15,028 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 21:06:15,029 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 21:06:15,029 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 21:06:15,189 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 21:06:15,189 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 21:06:15,189 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 21:06:15,191 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 21:06:19,394 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 21:06:19,555 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 21:06:19,556 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 21:06:19,557 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 21:06:19,598 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 21:06:19,598 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 21:06:19,598 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 21:06:19,604 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 21:06:19,762 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 21:06:19,768 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 21:06:19,768 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 21:06:20,836 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 21:06:20,837 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 21:06:22,378 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 21:06:29,143 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 09:56:24,082 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 09:56:24,090 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 09:56:24,092 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 09:56:24,092 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 09:56:24,097 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-03 09:56:24,097 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-03 09:56:24,157 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-03 09:56:24,160 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-03 09:56:24,162 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-03 09:56:24,163 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-03 09:56:24,163 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-03 09:56:24,165 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-03 09:56:24,165 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-03 09:56:24,166 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,166 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-03 09:56:24,166 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,167 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-03 09:56:24,167 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,167 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-03 09:56:24,168 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,168 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-03 09:56:24,175 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,176 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-03 09:56:24,176 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,176 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,178 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 09:56:24,178 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-03 09:56:24,178 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-03 09:56:24,179 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-03 09:56:24,179 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-03 09:56:24,200 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-03 09:56:24,201 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 09:56:24,204 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 09:56:24,204 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 09:56:24,415 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 09:56:27,049 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 09:56:27,050 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 09:56:27,053 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 09:56:27,054 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 09:56:27,315 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 09:56:27,315 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 09:56:27,318 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 09:56:27,318 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 09:56:27,318 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 09:56:27,363 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 09:56:27,364 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 09:56:27,412 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 09:56:27,591 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 09:56:27,597 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 09:56:27,599 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 09:56:27,600 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,600 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,601 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 09:56:27,602 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 09:56:27,604 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,605 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,606 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 09:56:27,606 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 09:56:27,606 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,606 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,607 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 09:56:27,607 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 09:56:27,607 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,609 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,609 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 09:56:27,609 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 09:56:27,609 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,612 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,612 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 09:56:27,614 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 09:56:27,615 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 09:56:27,618 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 09:56:27,619 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 09:56:27,621 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 09:56:27,621 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 09:56:27,622 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 09:56:27,622 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 09:56:27,623 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 09:56:27,623 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 09:56:27,623 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 09:56:27,623 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 09:56:27,623 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 09:56:27,625 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 09:56:27,625 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 09:56:27,625 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 09:56:27,625 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 09:56:47,068 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 09:56:47,069 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 09:56:47,069 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 09:56:47,070 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 09:56:47,070 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 09:56:47,070 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 09:56:47,364 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 09:56:47,364 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 09:56:47,364 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 09:56:47,365 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 09:56:51,661 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 09:56:51,854 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 09:56:51,854 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 09:56:51,855 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 09:56:51,893 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 09:56:51,894 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 09:56:51,894 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6DAFBA545+20677]
	simdutf::get_active_implementation [0x00007FF6DAF16CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB20D75A+1807418]
	(No symbol) [0x00007FF6DAD572AC]
	(No symbol) [0x00007FF6DAD5758B]
	(No symbol) [0x00007FF6DAD985A7]
	(No symbol) [0x00007FF6DAD7849F]
	(No symbol) [0x00007FF6DAD4D6ED]
	(No symbol) [0x00007FF6DAD95D61]
	(No symbol) [0x00007FF6DAD781C3]
	(No symbol) [0x00007FF6DAD4CC36]
	(No symbol) [0x00007FF6DAD4C0C4]
	(No symbol) [0x00007FF6DAD4CA63]
	(No symbol) [0x00007FF6DAE35BDD]
	(No symbol) [0x00007FF6DAE42042]
	(No symbol) [0x00007FF6DAE3AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB0942AA+262026]
	simdutf::get_active_implementation [0x00007FF6DAF24421+546385]
	simdutf::get_active_implementation [0x00007FF6DAF1D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6DAF1D819+518729]
	simdutf::get_active_implementation [0x00007FF6DAF0F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6DAFBA545+20677]
	simdutf::get_active_implementation [0x00007FF6DAF16CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB20D75A+1807418]
	(No symbol) [0x00007FF6DAD572AC]
	(No symbol) [0x00007FF6DAD5758B]
	(No symbol) [0x00007FF6DAD985A7]
	(No symbol) [0x00007FF6DAD7849F]
	(No symbol) [0x00007FF6DAD4D6ED]
	(No symbol) [0x00007FF6DAD95D61]
	(No symbol) [0x00007FF6DAD781C3]
	(No symbol) [0x00007FF6DAD4CC36]
	(No symbol) [0x00007FF6DAD4C0C4]
	(No symbol) [0x00007FF6DAD4CA63]
	(No symbol) [0x00007FF6DAE35BDD]
	(No symbol) [0x00007FF6DAE42042]
	(No symbol) [0x00007FF6DAE3AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB0942AA+262026]
	simdutf::get_active_implementation [0x00007FF6DAF24421+546385]
	simdutf::get_active_implementation [0x00007FF6DAF1D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6DAF1D819+518729]
	simdutf::get_active_implementation [0x00007FF6DAF0F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 09:56:52,037 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 09:56:52,205 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6DAFBA545+20677]
	simdutf::get_active_implementation [0x00007FF6DAF16CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB20D75A+1807418]
	(No symbol) [0x00007FF6DAD572AC]
	(No symbol) [0x00007FF6DAD5758B]
	(No symbol) [0x00007FF6DAD985A7]
	(No symbol) [0x00007FF6DAD7849F]
	(No symbol) [0x00007FF6DAD4D6ED]
	(No symbol) [0x00007FF6DAD95D61]
	(No symbol) [0x00007FF6DAD781C3]
	(No symbol) [0x00007FF6DAD4CC36]
	(No symbol) [0x00007FF6DAD4C0C4]
	(No symbol) [0x00007FF6DAD4CA63]
	(No symbol) [0x00007FF6DAE35BDD]
	(No symbol) [0x00007FF6DAE42042]
	(No symbol) [0x00007FF6DAE3AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB0942AA+262026]
	simdutf::get_active_implementation [0x00007FF6DAF24421+546385]
	simdutf::get_active_implementation [0x00007FF6DAF1D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6DAF1D819+518729]
	simdutf::get_active_implementation [0x00007FF6DAF0F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
2025-04-03 09:56:52,206 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 09:56:52,207 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 09:56:54,115 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 09:56:54,115 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 09:56:57,211 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 09:57:04,241 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 10:01:43,716 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 10:01:43,728 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 10:01:43,730 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 10:01:43,731 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 10:01:43,736 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-03 10:01:43,736 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-03 10:01:43,740 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-03 10:01:43,741 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-03 10:01:43,742 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-03 10:01:43,743 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-03 10:01:43,744 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-03 10:01:43,744 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-03 10:01:43,744 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-03 10:01:43,745 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,745 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-03 10:01:43,745 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,746 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-03 10:01:43,746 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,747 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-03 10:01:43,748 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,748 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-03 10:01:43,748 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,749 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-03 10:01:43,749 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,750 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-03 10:01:43,750 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,750 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-03 10:01:43,751 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,751 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-03 10:01:43,751 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,752 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 10:01:43,752 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-03 10:01:43,752 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-03 10:01:43,753 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-03 10:01:43,753 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-03 10:01:43,767 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-03 10:01:43,768 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:01:43,770 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:01:43,771 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:01:43,846 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:01:46,662 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:01:46,662 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:01:46,664 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:01:46,664 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:01:46,668 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:01:46,669 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:01:46,710 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:01:46,761 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:01:46,765 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:01:46,766 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:01:46,766 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,766 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,768 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:01:46,768 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:01:46,768 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,769 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,769 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:01:46,770 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:01:46,770 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,771 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,771 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:01:46,771 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:01:46,771 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,772 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,772 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:01:46,772 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:01:46,773 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:01:46,773 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,774 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,774 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:01:46,774 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:01:46,775 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,775 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,775 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:01:46,782 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:01:46,783 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:01:46,784 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:01:46,784 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:01:46,785 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:01:46,786 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:01:46,786 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:01:46,787 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:01:46,787 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:01:46,788 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:01:46,788 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:01:46,788 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:01:46,789 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:01:46,789 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:01:46,789 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:01:46,790 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:01:46,790 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:02:00,242 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:02:00,432 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:02:00,432 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:02:00,433 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:02:00,433 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:02:05,949 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:02:06,131 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:02:06,132 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:02:06,132 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:02:06,156 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:02:06,156 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:02:06,156 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6D66FA545+20677]
	simdutf::get_active_implementation [0x00007FF6D6656CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6D694D75A+1807418]
	(No symbol) [0x00007FF6D64972AC]
	(No symbol) [0x00007FF6D649758B]
	(No symbol) [0x00007FF6D64D85A7]
	(No symbol) [0x00007FF6D64B849F]
	(No symbol) [0x00007FF6D648D6ED]
	(No symbol) [0x00007FF6D64D5D61]
	(No symbol) [0x00007FF6D64B81C3]
	(No symbol) [0x00007FF6D648CC36]
	(No symbol) [0x00007FF6D648C0C4]
	(No symbol) [0x00007FF6D648CA63]
	(No symbol) [0x00007FF6D6575BDD]
	(No symbol) [0x00007FF6D6582042]
	(No symbol) [0x00007FF6D657AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6D67D42AA+262026]
	simdutf::get_active_implementation [0x00007FF6D6664421+546385]
	simdutf::get_active_implementation [0x00007FF6D665D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6D665D819+518729]
	simdutf::get_active_implementation [0x00007FF6D664F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
2025-04-03 10:02:06,157 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:02:06,298 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6D66FA545+20677]
	simdutf::get_active_implementation [0x00007FF6D6656CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6D694D75A+1807418]
	(No symbol) [0x00007FF6D64972AC]
	(No symbol) [0x00007FF6D649758B]
	(No symbol) [0x00007FF6D64D85A7]
	(No symbol) [0x00007FF6D64B849F]
	(No symbol) [0x00007FF6D648D6ED]
	(No symbol) [0x00007FF6D64D5D61]
	(No symbol) [0x00007FF6D64B81C3]
	(No symbol) [0x00007FF6D648CC36]
	(No symbol) [0x00007FF6D648C0C4]
	(No symbol) [0x00007FF6D648CA63]
	(No symbol) [0x00007FF6D6575BDD]
	(No symbol) [0x00007FF6D6582042]
	(No symbol) [0x00007FF6D657AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6D67D42AA+262026]
	simdutf::get_active_implementation [0x00007FF6D6664421+546385]
	simdutf::get_active_implementation [0x00007FF6D665D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6D665D819+518729]
	simdutf::get_active_implementation [0x00007FF6D664F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
2025-04-03 10:02:06,300 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:02:06,301 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:02:07,416 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:02:07,416 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:02:09,374 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:02:16,396 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 10:06:35,554 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:06:35,565 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:06:35,566 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:06:35,567 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:06:35,569 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:06:35,569 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:06:35,571 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:06:35,571 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:06:35,573 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:06:35,573 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:06:35,573 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:06:35,586 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:06:35,587 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:06:35,588 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:06:35,588 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:06:35,709 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:06:37,861 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:06:37,861 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:06:37,863 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:06:37,864 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:06:37,881 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:06:37,882 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:06:37,883 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:06:37,884 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:06:37,884 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:06:37,912 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:06:37,912 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:06:37,952 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:06:37,961 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:06:37,964 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:06:37,965 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:06:37,965 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,966 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,966 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:06:37,966 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:06:37,967 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,967 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,967 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:06:37,968 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:06:37,968 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,968 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,968 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:06:37,969 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:06:37,969 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,969 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,969 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:06:37,970 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:06:37,970 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:06:37,970 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,971 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,971 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:06:37,971 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:06:37,972 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,972 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,972 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:06:37,975 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:06:37,976 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:06:37,976 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:06:37,976 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:06:37,977 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:06:37,977 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:06:37,977 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:06:37,977 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:06:37,978 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:06:37,978 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:06:37,978 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:06:37,978 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:06:37,980 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:06:37,980 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:06:37,980 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:06:37,981 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:06:37,981 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:06:51,764 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:06:51,764 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:06:51,764 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:06:51,765 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:06:51,765 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:06:51,765 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:06:51,985 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:06:51,985 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:06:51,986 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:06:51,986 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:06:56,792 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:06:56,960 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:06:56,960 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:06:56,961 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:06:56,988 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:06:56,989 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:06:56,989 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:06:57,156 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:06:57,298 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:06:57,303 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:06:57,304 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:06:59,044 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:06:59,045 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:07:01,693 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:07:08,540 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 10:11:06,050 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:11:06,051 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:11:06,053 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:11:06,053 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:11:06,055 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:11:06,055 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:11:06,059 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:11:06,060 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:11:06,060 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:11:06,061 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:11:06,061 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:11:06,062 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:11:06,062 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:11:06,062 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,062 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:11:06,063 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,063 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:11:06,063 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,063 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,065 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:11:06,065 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,065 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:11:06,065 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,066 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:11:06,066 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,066 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:11:06,066 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:11:06,067 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:11:06,067 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:11:06,067 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:11:06,074 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:11:06,075 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:11:06,076 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:11:06,076 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:11:06,081 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:11:08,621 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:11:08,621 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:11:08,624 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:11:08,624 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:11:08,630 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:11:08,630 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:11:08,631 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:11:08,631 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:11:08,631 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:11:08,632 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:11:08,632 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:11:08,645 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:11:08,645 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:11:08,646 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:11:08,646 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:11:08,646 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,646 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,647 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:11:08,647 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:11:08,647 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,647 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,648 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:11:08,648 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:11:08,648 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,648 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,649 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:11:08,649 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:11:08,649 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,649 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,650 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:11:08,650 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:11:08,650 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:11:08,650 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,651 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,651 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:11:08,651 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:11:08,652 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,652 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,652 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:11:08,654 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:11:08,655 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:11:08,656 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:11:08,656 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:11:08,658 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:11:08,658 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:11:08,658 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:11:08,658 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:11:08,658 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:11:08,659 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:11:08,659 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:11:08,659 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:11:21,581 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:11:21,582 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:11:21,582 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:11:21,582 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:11:21,583 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:11:21,583 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:11:21,716 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:11:21,717 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:11:21,717 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:11:21,717 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:11:25,392 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:11:25,544 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:11:25,545 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:11:25,548 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:11:25,594 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:11:25,594 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:11:25,594 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:11:25,749 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:11:25,924 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:11:25,951 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:11:25,951 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:11:26,801 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:11:26,801 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:11:28,364 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:11:35,170 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 10:13:30,325 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:13:30,326 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:13:30,327 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:13:30,327 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:13:30,328 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:13:30,329 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:13:30,333 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:13:30,333 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:13:30,334 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:13:30,335 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:13:30,335 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,337 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:13:30,337 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,337 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:13:30,337 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:13:30,339 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,339 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:13:30,339 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,339 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:13:30,340 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,340 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:13:30,340 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:13:30,340 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:13:30,341 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:13:30,341 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:13:30,349 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:13:30,350 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:13:30,350 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:13:30,351 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:13:30,356 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:13:33,152 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:13:33,153 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:13:33,155 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:13:33,155 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:13:33,160 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:13:33,160 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:13:33,161 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:13:33,161 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:13:33,161 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:13:33,162 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:13:33,162 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:13:33,174 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:13:33,174 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:13:33,175 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:13:33,179 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:13:33,179 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,179 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,180 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:13:33,180 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:13:33,180 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,181 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,181 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:13:33,182 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:13:33,184 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:13:46,153 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:13:46,154 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:13:46,154 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:13:46,154 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:13:46,155 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:13:46,155 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:13:46,286 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:13:46,287 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:13:46,287 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:13:46,287 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:13:51,099 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:13:51,244 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:13:51,244 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:13:51,245 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:13:51,264 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:13:51,265 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:13:51,265 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:13:51,470 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:13:51,588 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:13:51,597 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:13:51,597 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:13:52,387 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:13:52,387 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:13:54,056 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:14:00,922 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 10:15:33,062 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:15:33,062 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:15:33,064 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:15:33,064 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:15:33,065 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:15:33,065 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:15:33,068 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:15:33,068 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:15:33,070 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:15:33,070 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:15:33,074 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:15:33,074 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:15:33,074 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:15:33,082 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:15:33,083 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:15:33,084 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:15:33,084 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:15:33,089 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:15:35,658 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:15:35,658 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:15:35,661 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:15:35,661 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:15:35,665 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:15:35,665 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:15:35,679 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:15:35,679 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:15:35,680 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:15:35,680 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:15:35,680 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:15:35,684 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:15:35,684 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,684 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,684 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:15:35,685 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:15:35,686 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:15:35,686 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:15:35,686 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:15:35,686 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:15:35,688 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:15:35,688 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:15:35,688 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:15:35,689 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:15:35,689 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:15:35,689 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:15:48,686 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:15:48,687 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:15:48,687 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:15:48,687 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:15:48,688 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:15:48,688 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:15:48,834 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:15:48,835 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:15:48,835 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:15:48,836 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:15:53,916 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:15:54,055 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:15:54,055 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:15:54,055 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:15:54,071 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:15:54,071 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:15:54,072 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:15:54,076 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:15:54,212 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:15:54,216 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:15:54,216 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:15:55,029 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:15:55,030 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:15:56,432 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:16:03,305 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 10:17:16,650 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:17:16,650 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:17:16,652 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:17:16,652 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:17:16,653 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:17:16,653 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:17:16,656 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:17:16,656 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:17:16,657 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:17:16,658 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:17:16,658 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:17:16,658 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:17:16,658 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:17:16,669 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:17:16,670 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:17:16,670 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:17:16,670 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:17:16,675 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:17:19,101 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:17:19,102 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:17:19,105 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:17:19,105 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:17:19,109 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:17:19,110 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:17:19,111 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:17:19,112 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:17:19,112 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:17:19,112 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:17:19,112 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:17:19,129 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:17:19,130 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:17:19,134 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:17:19,135 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:17:19,136 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,136 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,136 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:17:19,136 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,138 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,138 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:17:19,138 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:17:19,138 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:17:19,142 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:17:19,143 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:17:19,144 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:17:19,144 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:17:19,144 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:17:19,146 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:17:19,146 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:17:19,146 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:17:19,147 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:17:19,147 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:17:19,147 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:17:19,147 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:17:32,106 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:17:32,107 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:17:32,107 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:17:32,108 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:17:32,108 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:17:32,110 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:17:32,260 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:17:32,261 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:17:32,261 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:17:32,261 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:17:44,871 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:17:45,036 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:17:45,037 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:17:45,038 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:17:45,057 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:17:45,059 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:17:45,059 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:17:45,077 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:17:45,202 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:17:45,212 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:17:45,212 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:17:46,041 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:17:46,041 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:17:47,619 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:17:54,428 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 14:45:49,280 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 14:45:49,334 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 14:45:49,339 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 14:45:49,340 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 14:45:49,345 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 14:45:49,345 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 14:45:49,346 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:45:49,378 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:45:49,382 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:45:49,382 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 14:45:49,383 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 14:45:49,387 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 14:45:49,388 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 14:45:49,388 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 14:45:49,388 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 14:45:49,389 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 14:45:49,389 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 14:45:49,389 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 14:45:49,389 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 14:45:49,390 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 14:45:49,391 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 14:45:49,391 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 14:45:49,391 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 14:45:49,392 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 14:45:49,392 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 14:45:49,392 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 14:45:49,392 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 14:45:49,393 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 14:45:49,393 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 14:45:49,393 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 14:45:49,394 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 14:45:49,394 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 14:45:49,394 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 14:45:49,394 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 14:45:49,395 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 14:45:49,395 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:45:49,395 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 14:45:49,395 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 14:45:49,416 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 14:45:49,418 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 14:45:49,419 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 14:45:49,419 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 14:45:49,569 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 14:45:52,479 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 14:45:52,479 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 14:45:52,485 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 14:45:52,485 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 14:45:52,556 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 14:45:52,557 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 14:45:52,560 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 14:45:52,560 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 14:45:52,560 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 14:45:52,598 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 14:45:52,598 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 14:45:52,639 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 14:45:52,645 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 14:45:52,647 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 14:45:52,647 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 14:45:52,648 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 14:45:52,648 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 14:45:52,648 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 14:45:52,648 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 14:45:52,648 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 14:45:52,648 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 14:45:52,649 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 14:45:52,649 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 14:45:52,649 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 14:45:52,649 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 14:45:52,650 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 14:45:52,651 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 14:45:52,652 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 14:45:52,652 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 14:45:52,652 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 14:45:52,652 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 14:45:52,652 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 14:45:52,652 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 14:45:52,653 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 14:45:52,653 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 14:45:52,653 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 14:45:52,653 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 14:45:52,653 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 14:45:52,654 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 14:45:52,656 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 14:45:52,657 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 14:45:52,657 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 14:45:52,657 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:45:52,658 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 14:45:52,658 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 14:45:52,658 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:45:52,659 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 14:45:52,659 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 14:45:52,659 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 14:45:52,659 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:45:52,660 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:45:52,660 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 14:45:52,661 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 14:45:52,661 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 14:45:52,662 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 14:45:52,662 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 14:46:06,568 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 14:46:06,569 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 14:46:06,569 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 14:46:06,569 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 14:46:06,570 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 14:46:06,570 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 14:46:06,758 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:46:06,760 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 14:46:06,761 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 14:46:06,761 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 14:46:06,762 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 14:46:10,742 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 14:46:10,896 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:46:10,901 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 14:46:10,902 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 14:46:10,903 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 14:46:10,944 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 14:46:10,945 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 14:46:10,945 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6191EA545+20677]
	simdutf::get_active_implementation [0x00007FF619146CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF61943D75A+1807418]
	(No symbol) [0x00007FF618F872AC]
	(No symbol) [0x00007FF618F8758B]
	(No symbol) [0x00007FF618FC85A7]
	(No symbol) [0x00007FF618FA849F]
	(No symbol) [0x00007FF618F7D6ED]
	(No symbol) [0x00007FF618FC5D61]
	(No symbol) [0x00007FF618FA81C3]
	(No symbol) [0x00007FF618F7CC36]
	(No symbol) [0x00007FF618F7C0C4]
	(No symbol) [0x00007FF618F7CA63]
	(No symbol) [0x00007FF619065BDD]
	(No symbol) [0x00007FF619072042]
	(No symbol) [0x00007FF61906AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6192C42AA+262026]
	simdutf::get_active_implementation [0x00007FF619154421+546385]
	simdutf::get_active_implementation [0x00007FF61914D6D4+518404]
	simdutf::get_active_implementation [0x00007FF61914D819+518729]
	simdutf::get_active_implementation [0x00007FF61913F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6191EA545+20677]
	simdutf::get_active_implementation [0x00007FF619146CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF61943D75A+1807418]
	(No symbol) [0x00007FF618F872AC]
	(No symbol) [0x00007FF618F8758B]
	(No symbol) [0x00007FF618FC85A7]
	(No symbol) [0x00007FF618FA849F]
	(No symbol) [0x00007FF618F7D6ED]
	(No symbol) [0x00007FF618FC5D61]
	(No symbol) [0x00007FF618FA81C3]
	(No symbol) [0x00007FF618F7CC36]
	(No symbol) [0x00007FF618F7C0C4]
	(No symbol) [0x00007FF618F7CA63]
	(No symbol) [0x00007FF619065BDD]
	(No symbol) [0x00007FF619072042]
	(No symbol) [0x00007FF61906AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6192C42AA+262026]
	simdutf::get_active_implementation [0x00007FF619154421+546385]
	simdutf::get_active_implementation [0x00007FF61914D6D4+518404]
	simdutf::get_active_implementation [0x00007FF61914D819+518729]
	simdutf::get_active_implementation [0x00007FF61913F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 14:46:11,086 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 14:46:11,212 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:46:11,212 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6191EA545+20677]
	simdutf::get_active_implementation [0x00007FF619146CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF61943D75A+1807418]
	(No symbol) [0x00007FF618F872AC]
	(No symbol) [0x00007FF618F8758B]
	(No symbol) [0x00007FF618FC85A7]
	(No symbol) [0x00007FF618FA849F]
	(No symbol) [0x00007FF618F7D6ED]
	(No symbol) [0x00007FF618FC5D61]
	(No symbol) [0x00007FF618FA81C3]
	(No symbol) [0x00007FF618F7CC36]
	(No symbol) [0x00007FF618F7C0C4]
	(No symbol) [0x00007FF618F7CA63]
	(No symbol) [0x00007FF619065BDD]
	(No symbol) [0x00007FF619072042]
	(No symbol) [0x00007FF61906AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6192C42AA+262026]
	simdutf::get_active_implementation [0x00007FF619154421+546385]
	simdutf::get_active_implementation [0x00007FF61914D6D4+518404]
	simdutf::get_active_implementation [0x00007FF61914D819+518729]
	simdutf::get_active_implementation [0x00007FF61913F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6191EA545+20677]
	simdutf::get_active_implementation [0x00007FF619146CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF61943D75A+1807418]
	(No symbol) [0x00007FF618F872AC]
	(No symbol) [0x00007FF618F8758B]
	(No symbol) [0x00007FF618FC85A7]
	(No symbol) [0x00007FF618FA849F]
	(No symbol) [0x00007FF618F7D6ED]
	(No symbol) [0x00007FF618FC5D61]
	(No symbol) [0x00007FF618FA81C3]
	(No symbol) [0x00007FF618F7CC36]
	(No symbol) [0x00007FF618F7C0C4]
	(No symbol) [0x00007FF618F7CA63]
	(No symbol) [0x00007FF619065BDD]
	(No symbol) [0x00007FF619072042]
	(No symbol) [0x00007FF61906AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6192C42AA+262026]
	simdutf::get_active_implementation [0x00007FF619154421+546385]
	simdutf::get_active_implementation [0x00007FF61914D6D4+518404]
	simdutf::get_active_implementation [0x00007FF61914D819+518729]
	simdutf::get_active_implementation [0x00007FF61913F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 14:46:11,216 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 14:46:11,216 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 14:46:12,824 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 14:46:12,824 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:46:12,829 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:46:12,832 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:46:12,867 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:46:12,993 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:46:13,001 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:46:13,001 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:46:13,002 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:46:15,684 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:46:15,759 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 14:46:22,661 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 14:46:25,244 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 14:46:25,245 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 14:46:25,285 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 14:46:25,286 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 14:46:25,329 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 14:46:25,330 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 14:46:25,331 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 14:46:25,331 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 14:46:26,228 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 15:35:02,139 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 15:35:02,146 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 15:35:02,147 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 15:35:02,147 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 15:35:02,150 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 15:35:02,151 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 15:35:02,151 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:35:02,152 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:35:02,153 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:35:02,153 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 15:35:02,153 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 15:35:02,154 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 15:35:02,155 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 15:35:02,155 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 15:35:02,156 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 15:35:02,156 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 15:35:02,156 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:35:02,156 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 15:35:02,157 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:35:02,157 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 15:35:02,157 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:35:02,157 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 15:35:02,157 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:35:02,157 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 15:35:02,158 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:35:02,158 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 15:35:02,158 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:35:02,158 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 15:35:02,158 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:35:02,158 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 15:35:02,159 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:35:02,159 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 15:35:02,159 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:35:02,159 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 15:35:02,159 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 15:35:02,159 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 15:35:02,159 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 15:35:02,160 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 15:35:02,170 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 15:35:02,171 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 15:35:02,173 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 15:35:02,173 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 15:35:02,229 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 15:35:04,456 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 15:35:04,457 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 15:35:04,458 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 15:35:04,459 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 15:35:04,483 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 15:35:04,483 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 15:35:04,485 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 15:35:04,486 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 15:35:04,486 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 15:35:04,506 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 15:35:04,507 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 15:35:04,543 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 15:35:04,549 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 15:35:04,551 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 15:35:04,551 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 15:35:04,551 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 15:35:04,551 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 15:35:04,551 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 15:35:04,552 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 15:35:04,552 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 15:35:04,552 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 15:35:04,552 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 15:35:04,552 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 15:35:04,552 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 15:35:04,552 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 15:35:04,552 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 15:35:04,553 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 15:35:04,553 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 15:35:04,553 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 15:35:04,553 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 15:35:04,553 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 15:35:04,553 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 15:35:04,553 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 15:35:04,553 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 15:35:04,553 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 15:35:04,554 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 15:35:04,554 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 15:35:04,554 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 15:35:04,554 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 15:35:04,556 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 15:35:04,556 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 15:35:04,557 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 15:35:04,557 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 15:35:04,557 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 15:35:04,557 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 15:35:04,558 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 15:35:04,558 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 15:35:04,558 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 15:35:04,558 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 15:35:04,559 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 15:35:04,559 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 15:35:04,559 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 15:35:04,559 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 15:35:04,559 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 15:35:04,559 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 15:35:04,560 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 15:35:07,845 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 15:35:07,845 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 15:35:07,846 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 15:35:07,852 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 15:35:07,852 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 15:35:07,853 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 15:35:08,150 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:35:08,151 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 15:35:08,151 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 15:35:08,152 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 15:35:08,152 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 15:35:12,212 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 15:35:12,354 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:35:12,356 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 15:35:12,358 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 15:35:12,358 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 15:35:12,401 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 15:35:12,402 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 15:35:12,403 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 15:35:12,485 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 15:35:12,662 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:35:12,663 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 15:35:12,666 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 15:35:12,666 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 15:35:13,488 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 15:35:13,488 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 15:35:13,492 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 15:35:13,493 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 15:35:13,521 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 15:35:13,589 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 15:35:13,600 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 15:35:13,600 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 15:35:13,600 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 15:35:15,375 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 15:35:15,495 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 15:35:22,536 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 15:35:24,749 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 15:35:24,750 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 15:35:24,806 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 15:35:24,807 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 15:35:24,844 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 15:35:24,846 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 15:35:24,847 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 15:35:24,848 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 15:35:25,734 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 15:37:08,576 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 15:37:08,576 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 15:37:08,577 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 15:37:08,577 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 15:37:08,579 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 15:37:08,579 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 15:37:08,580 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:37:08,581 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:37:08,582 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:37:08,583 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 15:37:08,583 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 15:37:08,585 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 15:37:08,585 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 15:37:08,586 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 15:37:08,587 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 15:37:08,673 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 15:37:08,673 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:37:08,674 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 15:37:08,674 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:37:08,674 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 15:37:08,674 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:37:08,675 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 15:37:08,675 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:37:08,675 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 15:37:08,675 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:37:08,676 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 15:37:08,676 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:37:08,676 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 15:37:08,676 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 15:37:08,677 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 15:37:08,677 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 15:37:08,677 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:543]
2025-04-03 15:37:08,687 - WafLogger - DEBUG - Starting the execution recording. [runner.py:549]
2025-04-03 15:37:08,688 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 15:37:08,688 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 15:37:08,688 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 15:37:08,696 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 15:37:10,984 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 15:37:10,985 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 15:37:10,988 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 15:37:10,989 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 15:37:10,994 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 15:37:10,994 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 15:37:10,996 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 15:37:10,996 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 15:37:10,996 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 15:37:11,027 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 15:37:11,027 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 15:37:11,046 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 15:37:11,048 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 15:37:11,049 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 15:37:11,052 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 15:37:11,053 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 15:37:11,054 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 15:37:11,054 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 15:37:11,055 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 15:37:11,055 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 15:37:11,055 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 15:37:11,056 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 15:37:11,056 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 15:37:11,056 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 15:37:11,056 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 15:37:11,057 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 15:37:11,057 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 15:37:11,057 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 15:37:11,057 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 15:37:11,058 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 15:37:11,058 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 15:37:11,058 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 15:37:11,058 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 15:37:11,058 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 15:37:11,059 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 15:37:11,059 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 15:37:11,063 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 15:37:11,063 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 15:37:11,064 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 15:37:11,064 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 15:37:11,064 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 15:37:11,065 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 15:37:11,066 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 15:37:11,068 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 15:37:11,069 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 15:37:11,069 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:186]
2025-04-03 15:37:11,069 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 15:37:11,069 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 15:37:11,070 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 15:37:11,070 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 15:37:11,070 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 15:37:11,071 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:203]
2025-04-03 15:37:11,071 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 15:37:19,244 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 15:37:19,245 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 15:37:19,246 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 15:37:19,246 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 15:37:19,247 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 15:37:19,249 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 15:37:19,458 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:37:19,459 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 15:37:19,460 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 15:37:19,460 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 15:37:19,460 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 15:37:22,708 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 15:37:22,851 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:37:22,851 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 15:37:22,852 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 15:37:23,925 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 15:37:23,925 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 15:37:23,927 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 15:37:23,929 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 15:37:23,931 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 15:37:23,954 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 15:37:23,960 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 15:37:23,960 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 15:37:23,961 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 15:37:25,321 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 15:37:25,393 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 15:37:32,148 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 15:37:34,072 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 15:37:34,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:37:34,074 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 15:37:34,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:37:34,074 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 15:37:34,075 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:37:34,075 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 15:37:34,076 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 15:37:34,076 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 15:37:34,077 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 15:37:34,077 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 15:37:34,083 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 15:37:34,084 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 15:37:34,085 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 15:37:34,085 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 15:37:34,087 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 15:37:36,377 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 15:37:36,378 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 15:37:36,380 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 15:37:36,380 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 15:37:36,384 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 15:37:36,384 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 15:37:36,385 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 15:37:36,386 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 15:37:36,386 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 15:37:36,387 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 15:37:36,387 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 15:37:36,403 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 15:37:36,405 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 15:37:36,407 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 15:37:36,408 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 15:37:36,408 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 15:37:36,408 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 15:37:36,408 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 15:37:36,409 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 15:37:36,409 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 15:37:36,409 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 15:37:36,409 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 15:37:36,409 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 15:37:36,409 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 15:37:36,410 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 15:37:36,410 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 15:37:36,410 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 15:37:36,410 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 15:37:36,410 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 15:37:36,411 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 15:37:36,411 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 15:37:36,412 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 15:37:36,412 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 15:37:36,413 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 15:37:36,413 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 15:37:36,414 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 15:37:36,414 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 15:37:36,414 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 15:37:36,414 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 15:37:36,417 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 15:37:36,417 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 15:37:36,417 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 15:37:36,418 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 15:37:36,418 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 15:37:36,418 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 15:37:36,418 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 15:37:36,419 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 15:37:36,419 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 15:37:36,419 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 15:37:36,419 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 15:37:36,420 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 15:37:36,420 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 15:37:36,421 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 15:37:36,421 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 15:37:36,421 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 15:37:36,421 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 15:37:39,594 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 15:37:39,596 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 15:37:39,597 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 15:37:39,598 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 15:37:39,599 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 15:37:39,599 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 15:37:39,849 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:37:39,850 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 15:37:39,850 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 15:37:39,851 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 15:37:39,851 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 15:37:43,551 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 15:37:43,697 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:37:43,699 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 15:37:43,699 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 15:37:43,699 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 15:37:43,720 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 15:37:43,720 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 15:37:43,720 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 15:37:43,732 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 15:37:43,884 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:37:43,885 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 15:37:43,894 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 15:37:43,895 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 15:37:44,716 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 15:37:44,716 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 15:37:44,718 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 15:37:44,720 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 15:37:44,722 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 15:37:44,738 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 15:37:44,747 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 15:37:44,747 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 15:37:44,748 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 15:37:46,208 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 15:37:46,359 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 15:37:53,260 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 15:37:55,532 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 15:37:55,533 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 15:37:55,619 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 15:37:55,620 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 15:37:55,657 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 15:37:55,659 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 15:37:55,660 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 15:37:55,660 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 15:37:56,564 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 15:39:59,634 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 15:39:59,634 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 15:39:59,637 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 15:39:59,637 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 15:39:59,638 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 15:39:59,639 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 15:39:59,640 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:39:59,642 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:39:59,644 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:39:59,644 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 15:39:59,644 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 15:39:59,645 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 15:39:59,646 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 15:39:59,646 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 15:39:59,646 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 15:39:59,647 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 15:39:59,647 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:39:59,647 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 15:39:59,647 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:39:59,647 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 15:39:59,648 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:39:59,648 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 15:39:59,648 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:39:59,648 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 15:39:59,649 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:39:59,649 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 15:39:59,649 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:39:59,649 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 15:39:59,649 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 15:39:59,650 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 15:39:59,650 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 15:39:59,650 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:543]
2025-04-03 15:39:59,660 - WafLogger - DEBUG - Starting the execution recording. [runner.py:549]
2025-04-03 15:39:59,661 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 15:39:59,661 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 15:39:59,662 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 15:39:59,668 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 15:40:01,913 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 15:40:01,913 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 15:40:01,917 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 15:40:01,918 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 15:40:01,923 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 15:40:01,924 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 15:40:01,925 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 15:40:01,925 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 15:40:01,925 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 15:40:01,950 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 15:40:01,950 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 15:40:01,973 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 15:40:01,974 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 15:40:01,975 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 15:40:01,975 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 15:40:01,976 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 15:40:01,976 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 15:40:01,976 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 15:40:01,977 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 15:40:01,977 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 15:40:01,977 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 15:40:01,977 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 15:40:01,978 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 15:40:01,978 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 15:40:01,978 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 15:40:01,978 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 15:40:01,979 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 15:40:01,979 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 15:40:01,979 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 15:40:01,979 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 15:40:01,980 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 15:40:01,980 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 15:40:01,980 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 15:40:01,980 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 15:40:01,980 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 15:40:01,980 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 15:40:01,983 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 15:40:01,983 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 15:40:01,984 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 15:40:01,984 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 15:40:01,984 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 15:40:01,984 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 15:40:01,985 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 15:40:01,985 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 15:40:01,986 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 15:40:01,986 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:186]
2025-04-03 15:40:01,987 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 15:40:01,987 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 15:40:01,987 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 15:40:01,988 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 15:40:01,988 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 15:40:01,988 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:203]
2025-04-03 15:40:01,988 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 15:40:04,779 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 15:40:04,780 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 15:40:04,780 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 15:40:04,780 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 15:40:04,780 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 15:40:04,780 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 15:40:05,018 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:40:05,019 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 15:40:05,019 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 15:40:05,020 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 15:40:05,020 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 15:40:08,720 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 15:40:08,858 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:40:08,859 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 15:40:08,859 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 15:40:09,863 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 15:40:09,864 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 15:40:09,868 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 15:40:09,870 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 15:40:09,872 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 15:40:09,889 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 15:40:09,893 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 15:40:09,893 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 15:40:09,893 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 15:40:11,226 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 15:40:11,320 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 15:40:18,055 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 15:40:21,507 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 15:40:21,508 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:40:21,508 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 15:40:21,508 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:40:21,509 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 15:40:21,509 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:40:21,509 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 15:40:21,509 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 15:40:21,510 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 15:40:21,510 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 15:40:21,511 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 15:40:21,515 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 15:40:21,516 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 15:40:21,517 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 15:40:21,517 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 15:40:21,519 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 15:40:23,700 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 15:40:23,701 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 15:40:23,703 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 15:40:23,704 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 15:40:23,708 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 15:40:23,708 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 15:40:23,709 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 15:40:23,709 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 15:40:23,709 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 15:40:23,728 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 15:40:23,729 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 15:40:23,747 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 15:40:23,747 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 15:40:23,749 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 15:40:23,750 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 15:40:23,751 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 15:40:23,751 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 15:40:23,751 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 15:40:23,752 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 15:40:23,752 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 15:40:23,752 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 15:40:23,752 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 15:40:23,752 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 15:40:23,752 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 15:40:23,753 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 15:40:23,753 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 15:40:23,753 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 15:40:23,753 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 15:40:23,753 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 15:40:23,753 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 15:40:23,753 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 15:40:23,753 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 15:40:23,754 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 15:40:23,754 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 15:40:23,754 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 15:40:23,754 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 15:40:23,754 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 15:40:23,754 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 15:40:23,754 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 15:40:23,757 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 15:40:23,757 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 15:40:23,757 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 15:40:23,758 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 15:40:23,758 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 15:40:23,758 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 15:40:23,758 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 15:40:23,758 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 15:40:23,758 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 15:40:23,759 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 15:40:23,759 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 15:40:23,759 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 15:40:23,759 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 15:40:23,759 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 15:40:23,759 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 15:40:23,760 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 15:40:23,760 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 15:40:26,904 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 15:40:26,905 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 15:40:26,906 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 15:40:26,907 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 15:40:26,907 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 15:40:26,908 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 15:40:27,118 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:40:27,119 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 15:40:27,119 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 15:40:27,120 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 15:40:27,120 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 15:40:30,655 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 15:40:30,810 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:40:30,811 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 15:40:30,811 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 15:40:30,811 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 15:40:30,849 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 15:40:30,855 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 15:40:30,861 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 15:40:30,869 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 15:40:31,010 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:40:31,011 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7D468A545+20677]
	simdutf::get_active_implementation [0x00007FF7D45E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D48DD75A+1807418]
	(No symbol) [0x00007FF7D44272AC]
	(No symbol) [0x00007FF7D442758B]
	(No symbol) [0x00007FF7D44685A7]
	(No symbol) [0x00007FF7D444849F]
	(No symbol) [0x00007FF7D441D6ED]
	(No symbol) [0x00007FF7D4465D61]
	(No symbol) [0x00007FF7D44481C3]
	(No symbol) [0x00007FF7D441CC36]
	(No symbol) [0x00007FF7D441C0C4]
	(No symbol) [0x00007FF7D441CA63]
	(No symbol) [0x00007FF7D4505BDD]
	(No symbol) [0x00007FF7D4512042]
	(No symbol) [0x00007FF7D450AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7D47642AA+262026]
	simdutf::get_active_implementation [0x00007FF7D45F4421+546385]
	simdutf::get_active_implementation [0x00007FF7D45ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7D45ED819+518729]
	simdutf::get_active_implementation [0x00007FF7D45DF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 15:40:31,015 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 15:40:31,015 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 15:40:32,075 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 15:40:32,076 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 15:40:32,080 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 15:40:32,081 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 15:40:32,082 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 15:40:32,102 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 15:40:32,111 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 15:40:32,111 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 15:40:32,113 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 15:40:33,552 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 15:40:33,612 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 15:40:40,461 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 15:40:42,379 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 15:40:42,380 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 15:40:42,422 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 15:40:42,424 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 15:40:42,441 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 15:40:42,443 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 15:40:42,443 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 15:40:42,444 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 15:40:43,307 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 15:48:32,250 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 15:48:32,274 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 15:48:32,277 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 15:48:32,278 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 15:48:32,281 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 15:48:32,282 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 15:48:32,282 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:48:32,284 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:48:32,285 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 15:48:32,285 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 15:48:32,286 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 15:48:32,287 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 15:48:32,288 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 15:48:32,288 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 15:48:32,288 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 15:48:32,289 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 15:48:32,289 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:48:32,289 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 15:48:32,289 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:48:32,290 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 15:48:32,291 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:48:32,291 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 15:48:32,291 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:48:32,291 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 15:48:32,292 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:48:32,292 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 15:48:32,292 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:48:32,292 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 15:48:32,292 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 15:48:32,293 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 15:48:32,293 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 15:48:32,293 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:543]
2025-04-03 15:48:32,304 - WafLogger - DEBUG - Starting the execution recording. [runner.py:549]
2025-04-03 15:48:32,305 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 15:48:32,307 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 15:48:32,308 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 15:48:32,370 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 15:48:34,487 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 15:48:34,488 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 15:48:34,490 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 15:48:34,490 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 15:48:34,515 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 15:48:34,516 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 15:48:34,517 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 15:48:34,519 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 15:48:34,519 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 15:48:34,528 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 15:48:34,528 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 15:48:34,576 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 15:48:34,584 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 15:48:34,587 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 15:48:34,587 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 15:48:34,588 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 15:48:34,588 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 15:48:34,588 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 15:48:34,589 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 15:48:34,589 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 15:48:34,589 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 15:48:34,589 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 15:48:34,590 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 15:48:34,590 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 15:48:34,590 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 15:48:34,590 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 15:48:34,591 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 15:48:34,591 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 15:48:34,591 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 15:48:34,591 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 15:48:34,591 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 15:48:34,592 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 15:48:34,592 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 15:48:34,592 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 15:48:34,592 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 15:48:34,592 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 15:48:34,595 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 15:48:34,595 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 15:48:34,596 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 15:48:34,596 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 15:48:34,596 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 15:48:34,596 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 15:48:34,597 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 15:48:34,597 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 15:48:34,597 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 15:48:34,598 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:186]
2025-04-03 15:48:34,598 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 15:48:34,598 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 15:48:34,599 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 15:48:34,599 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 15:48:34,599 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 15:48:34,600 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:203]
2025-04-03 15:48:34,600 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 15:48:37,673 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 15:48:37,675 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 15:48:37,675 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 15:48:37,675 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 15:48:37,676 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 15:48:37,678 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 15:48:38,015 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:48:38,075 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 15:48:38,075 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 15:48:38,076 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 15:48:38,077 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 15:48:41,914 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 15:48:42,232 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:48:42,232 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 15:48:42,233 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 15:48:43,126 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 15:48:43,127 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 15:48:43,131 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 15:48:43,134 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 15:48:43,155 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 15:48:43,219 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 15:48:43,257 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 15:48:43,257 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 15:48:43,258 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 15:48:46,693 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 15:48:46,764 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 15:48:53,552 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 15:48:56,141 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 15:48:56,141 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:48:56,142 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 15:48:56,142 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:48:56,142 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 15:48:56,143 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 15:48:56,143 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 15:48:56,144 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 15:48:56,144 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 15:48:56,145 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 15:48:56,145 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 15:48:56,151 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 15:48:56,153 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 15:48:56,154 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 15:48:56,154 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 15:48:56,156 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 15:48:58,331 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 15:48:58,331 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 15:48:58,335 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 15:48:58,335 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 15:48:58,341 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 15:48:58,342 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 15:48:58,343 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 15:48:58,343 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 15:48:58,343 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 15:48:58,353 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 15:48:58,354 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 15:48:58,377 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 15:48:58,378 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 15:48:58,381 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 15:48:58,382 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 15:48:58,382 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 15:48:58,383 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 15:48:58,383 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 15:48:58,383 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 15:48:58,383 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 15:48:58,384 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 15:48:58,384 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 15:48:58,384 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 15:48:58,384 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 15:48:58,385 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 15:48:58,385 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 15:48:58,385 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 15:48:58,385 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 15:48:58,386 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 15:48:58,386 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 15:48:58,386 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 15:48:58,386 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 15:48:58,387 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 15:48:58,387 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 15:48:58,387 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 15:48:58,387 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 15:48:58,388 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 15:48:58,388 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 15:48:58,388 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 15:48:58,391 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 15:48:58,391 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 15:48:58,392 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 15:48:58,392 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 15:48:58,392 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 15:48:58,393 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 15:48:58,393 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 15:48:58,393 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 15:48:58,394 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 15:48:58,394 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 15:48:58,394 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 15:48:58,394 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 15:48:58,395 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 15:48:58,395 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 15:48:58,395 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 15:48:58,395 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 15:48:58,395 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 15:49:01,472 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 15:49:01,473 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 15:49:01,474 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 15:49:01,476 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 15:49:01,478 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 15:49:01,479 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 15:49:01,657 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:49:01,658 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 15:49:01,660 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 15:49:01,660 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 15:49:01,660 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 15:49:05,652 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 15:49:05,783 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:49:05,783 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 15:49:05,785 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 15:49:05,785 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 15:49:05,811 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 15:49:05,812 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 15:49:05,812 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6013BA545+20677]
	simdutf::get_active_implementation [0x00007FF601316CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60160D75A+1807418]
	(No symbol) [0x00007FF6011572AC]
	(No symbol) [0x00007FF60115758B]
	(No symbol) [0x00007FF6011985A7]
	(No symbol) [0x00007FF60117849F]
	(No symbol) [0x00007FF60114D6ED]
	(No symbol) [0x00007FF601195D61]
	(No symbol) [0x00007FF6011781C3]
	(No symbol) [0x00007FF60114CC36]
	(No symbol) [0x00007FF60114C0C4]
	(No symbol) [0x00007FF60114CA63]
	(No symbol) [0x00007FF601235BDD]
	(No symbol) [0x00007FF601242042]
	(No symbol) [0x00007FF60123AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6014942AA+262026]
	simdutf::get_active_implementation [0x00007FF601324421+546385]
	simdutf::get_active_implementation [0x00007FF60131D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60131D819+518729]
	simdutf::get_active_implementation [0x00007FF60130F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6013BA545+20677]
	simdutf::get_active_implementation [0x00007FF601316CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60160D75A+1807418]
	(No symbol) [0x00007FF6011572AC]
	(No symbol) [0x00007FF60115758B]
	(No symbol) [0x00007FF6011985A7]
	(No symbol) [0x00007FF60117849F]
	(No symbol) [0x00007FF60114D6ED]
	(No symbol) [0x00007FF601195D61]
	(No symbol) [0x00007FF6011781C3]
	(No symbol) [0x00007FF60114CC36]
	(No symbol) [0x00007FF60114C0C4]
	(No symbol) [0x00007FF60114CA63]
	(No symbol) [0x00007FF601235BDD]
	(No symbol) [0x00007FF601242042]
	(No symbol) [0x00007FF60123AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6014942AA+262026]
	simdutf::get_active_implementation [0x00007FF601324421+546385]
	simdutf::get_active_implementation [0x00007FF60131D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60131D819+518729]
	simdutf::get_active_implementation [0x00007FF60130F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 15:49:05,968 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 15:49:06,146 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 15:49:06,147 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6013BA545+20677]
	simdutf::get_active_implementation [0x00007FF601316CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60160D75A+1807418]
	(No symbol) [0x00007FF6011572AC]
	(No symbol) [0x00007FF60115758B]
	(No symbol) [0x00007FF6011985A7]
	(No symbol) [0x00007FF60117849F]
	(No symbol) [0x00007FF60114D6ED]
	(No symbol) [0x00007FF601195D61]
	(No symbol) [0x00007FF6011781C3]
	(No symbol) [0x00007FF60114CC36]
	(No symbol) [0x00007FF60114C0C4]
	(No symbol) [0x00007FF60114CA63]
	(No symbol) [0x00007FF601235BDD]
	(No symbol) [0x00007FF601242042]
	(No symbol) [0x00007FF60123AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6014942AA+262026]
	simdutf::get_active_implementation [0x00007FF601324421+546385]
	simdutf::get_active_implementation [0x00007FF60131D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60131D819+518729]
	simdutf::get_active_implementation [0x00007FF60130F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6013BA545+20677]
	simdutf::get_active_implementation [0x00007FF601316CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60160D75A+1807418]
	(No symbol) [0x00007FF6011572AC]
	(No symbol) [0x00007FF60115758B]
	(No symbol) [0x00007FF6011985A7]
	(No symbol) [0x00007FF60117849F]
	(No symbol) [0x00007FF60114D6ED]
	(No symbol) [0x00007FF601195D61]
	(No symbol) [0x00007FF6011781C3]
	(No symbol) [0x00007FF60114CC36]
	(No symbol) [0x00007FF60114C0C4]
	(No symbol) [0x00007FF60114CA63]
	(No symbol) [0x00007FF601235BDD]
	(No symbol) [0x00007FF601242042]
	(No symbol) [0x00007FF60123AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6014942AA+262026]
	simdutf::get_active_implementation [0x00007FF601324421+546385]
	simdutf::get_active_implementation [0x00007FF60131D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60131D819+518729]
	simdutf::get_active_implementation [0x00007FF60130F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 15:49:06,155 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 15:49:06,155 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 15:49:06,949 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 15:49:06,949 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 15:49:06,951 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 15:49:06,952 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 15:49:06,953 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 15:49:06,971 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 15:49:06,978 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 15:49:06,979 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 15:49:06,979 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 15:49:08,526 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 15:49:08,643 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 15:49:15,392 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 15:49:17,272 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 15:49:17,273 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 15:49:17,317 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 15:49:17,319 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 15:49:17,353 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 15:49:17,355 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 15:49:17,355 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 15:49:17,356 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 15:49:18,246 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:08:01,480 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:08:01,480 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:08:01,481 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:08:01,482 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:08:01,484 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:08:01,484 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:08:01,484 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:08:01,489 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:08:01,491 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:08:01,491 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:08:01,491 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:08:01,493 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:08:01,493 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:08:01,494 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:08:01,494 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:08:01,494 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:08:01,494 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:08:01,494 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:08:01,495 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:08:01,495 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:08:01,495 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:08:01,495 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:08:01,495 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:08:01,495 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:08:01,495 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:08:01,496 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:08:01,496 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:08:01,496 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:08:01,496 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:08:01,496 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:08:01,496 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:08:01,496 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:08:03,359 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:08:03,359 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:08:03,361 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:08:03,362 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:08:03,487 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:08:03,487 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:08:03,488 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:08:03,489 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:08:03,489 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:08:03,528 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:08:03,529 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:08:03,553 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:08:03,555 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:08:03,556 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:08:03,557 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:08:03,557 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:08:03,557 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:08:03,558 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:08:03,558 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:08:03,558 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:08:03,558 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:08:03,559 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:08:03,559 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:08:03,559 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:08:03,559 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:08:03,560 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:08:03,560 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:08:03,560 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:08:03,560 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:08:03,561 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:08:03,561 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:08:03,562 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:08:03,562 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:08:03,563 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:08:03,563 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:08:03,563 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:08:03,565 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:08:03,566 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:08:03,566 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:08:03,566 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:08:03,567 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:08:03,567 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:08:03,567 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:08:03,568 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:08:03,568 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:08:03,568 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:08:03,568 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:08:03,568 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:08:03,569 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:08:03,569 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:08:03,569 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:08:03,569 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:08:03,570 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:08:06,431 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:08:06,432 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:08:06,433 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:08:06,433 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:08:06,434 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 16:08:06,434 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:08:06,705 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:08:06,706 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:08:06,709 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:08:06,710 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:08:06,710 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 16:08:11,571 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:08:11,713 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:08:11,713 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:08:11,713 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:08:12,589 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:08:12,589 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:08:12,591 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:08:12,594 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:08:12,608 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:08:12,634 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:08:12,645 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:08:12,645 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:08:12,646 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:08:14,126 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:08:14,195 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 16:08:20,741 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:08:20,741 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:08:20,742 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:08:20,742 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:08:20,742 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:08:20,742 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:08:20,742 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:08:20,743 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:08:20,743 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:08:20,743 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:08:20,743 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:08:23,703 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:08:23,707 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:08:23,711 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:08:23,712 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:08:23,734 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:08:23,734 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:08:23,735 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:08:23,735 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:08:23,735 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:08:23,758 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:08:23,758 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:08:23,782 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:08:23,783 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:08:23,784 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:08:23,785 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:08:23,785 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:08:23,785 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:08:23,785 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:08:23,785 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:08:23,785 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:08:23,786 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:08:23,786 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:08:23,786 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:08:23,786 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:08:23,786 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:08:23,786 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:08:23,786 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:08:23,787 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:08:23,787 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:08:23,787 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:08:23,787 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:08:23,787 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:08:23,787 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:08:23,787 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:08:23,788 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:08:23,788 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:08:23,788 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:08:23,788 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:08:23,788 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:08:23,791 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:08:23,792 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:08:23,792 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:08:23,792 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:08:23,792 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:08:23,792 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:08:23,793 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:08:23,793 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:08:23,793 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:08:23,793 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:08:23,793 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:08:23,793 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:08:23,793 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:08:23,794 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:08:23,794 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:08:23,794 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:08:23,794 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:08:26,595 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:08:26,602 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:08:26,605 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:08:26,606 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:08:26,606 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 16:08:26,606 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:08:26,858 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:08:26,858 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:08:26,859 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:08:26,859 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:08:26,860 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 16:08:30,227 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:08:30,330 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:08:30,331 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 16:08:30,346 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 16:08:30,346 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 16:08:30,382 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 16:08:30,383 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 16:08:30,383 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6438EA545+20677]
	simdutf::get_active_implementation [0x00007FF643846CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF643B3D75A+1807418]
	(No symbol) [0x00007FF6436872AC]
	(No symbol) [0x00007FF64368758B]
	(No symbol) [0x00007FF6436C85A7]
	(No symbol) [0x00007FF6436A849F]
	(No symbol) [0x00007FF64367D6ED]
	(No symbol) [0x00007FF6436C5D61]
	(No symbol) [0x00007FF6436A81C3]
	(No symbol) [0x00007FF64367CC36]
	(No symbol) [0x00007FF64367C0C4]
	(No symbol) [0x00007FF64367CA63]
	(No symbol) [0x00007FF643765BDD]
	(No symbol) [0x00007FF643772042]
	(No symbol) [0x00007FF64376AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6439C42AA+262026]
	simdutf::get_active_implementation [0x00007FF643854421+546385]
	simdutf::get_active_implementation [0x00007FF64384D6D4+518404]
	simdutf::get_active_implementation [0x00007FF64384D819+518729]
	simdutf::get_active_implementation [0x00007FF64383F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6438EA545+20677]
	simdutf::get_active_implementation [0x00007FF643846CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF643B3D75A+1807418]
	(No symbol) [0x00007FF6436872AC]
	(No symbol) [0x00007FF64368758B]
	(No symbol) [0x00007FF6436C85A7]
	(No symbol) [0x00007FF6436A849F]
	(No symbol) [0x00007FF64367D6ED]
	(No symbol) [0x00007FF6436C5D61]
	(No symbol) [0x00007FF6436A81C3]
	(No symbol) [0x00007FF64367CC36]
	(No symbol) [0x00007FF64367C0C4]
	(No symbol) [0x00007FF64367CA63]
	(No symbol) [0x00007FF643765BDD]
	(No symbol) [0x00007FF643772042]
	(No symbol) [0x00007FF64376AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6439C42AA+262026]
	simdutf::get_active_implementation [0x00007FF643854421+546385]
	simdutf::get_active_implementation [0x00007FF64384D6D4+518404]
	simdutf::get_active_implementation [0x00007FF64384D819+518729]
	simdutf::get_active_implementation [0x00007FF64383F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:08:30,387 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 16:08:30,487 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:08:30,487 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6438EA545+20677]
	simdutf::get_active_implementation [0x00007FF643846CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF643B3D75A+1807418]
	(No symbol) [0x00007FF6436872AC]
	(No symbol) [0x00007FF64368758B]
	(No symbol) [0x00007FF6436C85A7]
	(No symbol) [0x00007FF6436A849F]
	(No symbol) [0x00007FF64367D6ED]
	(No symbol) [0x00007FF6436C5D61]
	(No symbol) [0x00007FF6436A81C3]
	(No symbol) [0x00007FF64367CC36]
	(No symbol) [0x00007FF64367C0C4]
	(No symbol) [0x00007FF64367CA63]
	(No symbol) [0x00007FF643765BDD]
	(No symbol) [0x00007FF643772042]
	(No symbol) [0x00007FF64376AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6439C42AA+262026]
	simdutf::get_active_implementation [0x00007FF643854421+546385]
	simdutf::get_active_implementation [0x00007FF64384D6D4+518404]
	simdutf::get_active_implementation [0x00007FF64384D819+518729]
	simdutf::get_active_implementation [0x00007FF64383F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6438EA545+20677]
	simdutf::get_active_implementation [0x00007FF643846CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF643B3D75A+1807418]
	(No symbol) [0x00007FF6436872AC]
	(No symbol) [0x00007FF64368758B]
	(No symbol) [0x00007FF6436C85A7]
	(No symbol) [0x00007FF6436A849F]
	(No symbol) [0x00007FF64367D6ED]
	(No symbol) [0x00007FF6436C5D61]
	(No symbol) [0x00007FF6436A81C3]
	(No symbol) [0x00007FF64367CC36]
	(No symbol) [0x00007FF64367C0C4]
	(No symbol) [0x00007FF64367CA63]
	(No symbol) [0x00007FF643765BDD]
	(No symbol) [0x00007FF643772042]
	(No symbol) [0x00007FF64376AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6439C42AA+262026]
	simdutf::get_active_implementation [0x00007FF643854421+546385]
	simdutf::get_active_implementation [0x00007FF64384D6D4+518404]
	simdutf::get_active_implementation [0x00007FF64384D819+518729]
	simdutf::get_active_implementation [0x00007FF64383F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:08:30,491 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:08:30,491 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:08:31,220 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:08:31,220 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:08:31,222 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:08:31,224 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:08:31,226 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:08:31,244 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:08:31,252 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:08:31,254 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:08:31,254 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:08:32,545 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:08:32,626 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 16:08:39,227 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:08:39,228 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:08:39,270 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:08:39,271 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:08:39,383 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:08:39,385 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:08:39,386 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:08:39,386 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:08:40,234 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:27:10,231 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:27:10,232 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:27:10,233 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:27:10,233 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:27:10,235 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:27:10,235 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:27:10,236 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:27:10,236 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:27:10,237 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:27:10,237 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:27:10,238 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:27:10,239 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:27:10,239 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:27:10,239 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:27:10,239 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:27:10,240 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:27:10,240 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:27:10,240 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:27:10,240 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:27:10,240 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:27:10,240 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:27:10,241 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:27:10,241 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:27:10,241 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:27:10,241 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:27:10,242 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:27:10,242 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:27:10,242 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:27:10,242 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:27:10,242 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:27:10,243 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:27:10,243 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:27:12,009 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:27:12,009 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:27:12,011 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:27:12,011 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:27:12,015 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:27:12,015 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:27:12,016 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:27:12,016 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:27:12,016 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:27:12,036 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:27:12,036 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:27:12,056 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:27:12,059 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:27:12,059 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:27:12,060 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:27:12,060 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:27:12,061 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:27:12,061 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:27:12,061 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:27:12,062 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:27:12,062 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:27:12,062 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:27:12,062 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:27:12,063 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:27:12,063 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:27:12,063 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:27:12,064 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:27:12,064 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:27:12,065 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:27:12,065 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:27:12,065 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:27:12,065 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:27:12,066 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:27:12,066 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:27:12,067 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:27:12,067 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:27:12,069 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:27:12,070 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:27:12,070 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:27:12,070 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:27:12,071 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:27:12,071 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:27:12,071 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:27:12,072 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:27:12,072 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:27:12,072 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:27:12,072 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:27:12,073 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:27:12,073 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:27:12,073 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:27:12,074 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:27:12,074 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:27:12,074 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:27:14,715 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:27:14,715 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:27:14,716 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:27:14,716 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:27:14,716 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:30]
2025-04-03 16:27:14,716 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:27:15,365 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:27:15,366 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:27:15,366 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:27:15,366 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:27:15,366 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:34]
2025-04-03 16:27:20,115 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:27:20,560 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:27:20,561 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:27:20,561 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:27:21,234 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:27:21,234 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:27:21,236 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:27:21,237 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:27:21,315 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:27:21,340 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:27:21,342 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:27:21,342 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:27:21,343 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:27:22,485 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:27:22,531 - WafLogger - DEBUG - Closing Browser [driver_functions.py:26]
2025-04-03 16:27:29,063 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:27:29,063 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:27:29,064 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:27:29,064 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:27:29,064 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:27:29,064 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:27:29,064 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:27:29,064 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:27:29,065 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:27:29,065 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:27:29,065 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:27:31,366 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:27:31,367 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:27:31,368 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:27:31,369 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:27:31,391 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:27:31,391 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:27:31,394 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:27:31,394 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:27:31,394 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:27:31,396 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:27:31,397 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:27:31,409 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:27:31,410 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:27:31,411 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:27:31,411 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:27:31,411 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:27:31,412 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:27:31,412 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:27:31,412 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:27:31,412 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:27:31,413 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:27:31,413 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:27:31,413 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:27:31,413 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:27:31,414 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:27:31,414 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:27:31,414 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:27:31,415 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:27:31,415 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:27:31,415 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:27:31,415 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:27:31,416 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:27:31,416 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:27:31,416 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:27:31,416 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:27:31,417 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:27:31,417 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:27:31,417 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:27:31,417 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:27:31,420 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:27:31,420 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:27:31,420 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:27:31,421 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:27:31,421 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:27:31,421 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:27:31,421 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:27:31,422 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:27:31,422 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:27:31,422 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:27:31,423 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:27:31,423 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:27:31,423 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:27:31,423 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:27:31,424 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:27:31,424 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:27:31,424 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:27:34,149 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:27:34,150 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:27:34,150 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:27:34,150 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:27:34,150 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:30]
2025-04-03 16:27:34,151 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:27:34,353 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:27:34,354 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:27:34,354 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:27:34,355 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:27:34,355 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:34]
2025-04-03 16:27:37,505 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:27:37,634 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:27:37,635 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 16:27:37,636 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 16:27:37,636 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 16:27:37,650 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:219]
2025-04-03 16:27:37,650 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:44]
2025-04-03 16:27:37,650 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 40, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 216, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:27:37,859 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 16:27:37,986 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:27:37,987 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 40, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 216, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:27:38,055 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:27:38,055 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:27:38,794 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:27:38,794 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:27:38,796 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:27:38,797 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:27:38,799 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:27:38,823 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:27:38,827 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:27:38,827 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:27:38,827 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:27:39,970 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:27:40,018 - WafLogger - DEBUG - Closing Browser [driver_functions.py:26]
2025-04-03 16:27:46,560 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:27:46,560 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:27:46,600 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:27:46,602 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:27:46,707 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:27:46,709 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:27:46,711 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:27:46,711 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:27:47,582 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:30:23,850 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:30:23,850 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:30:23,851 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:30:23,853 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:30:23,853 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:30:23,854 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:30:23,854 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:30:23,855 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:30:24,207 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:30:24,208 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:30:24,209 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:30:24,212 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:30:24,214 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:30:24,215 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:30:24,216 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:30:24,216 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:30:24,216 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:30:24,216 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:30:24,217 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:30:24,217 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:30:24,217 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:30:24,218 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:30:24,218 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:30:24,218 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:30:24,218 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:30:24,219 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:30:24,219 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:30:24,219 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:30:24,219 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:30:24,220 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:30:24,220 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:30:24,220 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:30:26,053 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:30:26,054 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:30:26,056 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:30:26,056 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:30:26,061 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:30:26,063 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:30:26,063 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:30:26,064 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:30:26,064 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:30:26,065 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:30:26,065 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:30:26,076 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:30:26,077 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:30:26,078 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:30:26,078 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:30:26,079 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:30:26,079 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:30:26,079 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:30:26,080 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:30:26,080 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:30:26,080 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:30:26,080 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:30:26,081 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:30:26,081 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:30:26,081 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:30:26,082 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:30:26,082 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:30:26,082 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:30:26,083 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:30:26,083 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:30:26,083 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:30:26,084 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:30:26,085 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:30:26,085 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:30:26,085 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:30:26,085 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:30:26,087 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:30:26,088 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:30:26,089 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:30:26,089 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:30:26,089 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:30:26,090 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:30:26,090 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:30:26,090 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:30:26,090 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:30:26,090 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:30:26,090 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:30:26,090 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:30:26,090 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:30:26,091 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:30:26,091 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:30:26,091 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:30:26,091 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:30:28,358 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:30:28,358 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:30:28,359 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:30:28,359 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:30:28,359 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:30:28,359 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:30:28,769 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:30:28,770 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:30:28,770 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:30:28,770 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:30:28,770 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:30:33,215 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:30:33,615 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:30:33,615 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:30:33,616 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:30:34,304 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:30:34,305 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:30:34,306 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:30:34,308 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:30:34,309 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:30:34,321 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:30:34,323 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:30:34,323 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:30:34,323 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:30:35,470 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:30:35,520 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:30:42,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:30:42,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:30:42,074 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:30:42,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:30:42,075 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:30:42,075 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:30:42,075 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:30:42,075 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:30:42,076 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:30:42,076 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:30:42,076 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:30:43,796 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:30:43,796 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:30:43,798 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:30:43,798 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:30:43,802 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:30:43,802 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:30:43,803 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:30:43,803 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:30:43,803 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:30:43,804 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:30:43,804 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:30:43,816 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:30:43,816 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:30:43,817 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:30:43,817 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:30:43,817 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:30:43,817 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:30:43,818 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:30:43,818 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:30:43,818 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:30:43,818 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:30:43,818 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:30:43,819 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:30:43,819 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:30:43,819 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:30:43,819 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:30:43,819 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:30:43,819 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:30:43,819 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:30:43,819 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:30:43,820 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:30:43,820 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:30:43,820 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:30:43,820 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:30:43,820 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:30:43,820 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:30:43,820 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:30:43,820 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:30:43,821 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:30:43,824 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:30:43,824 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:30:43,824 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:30:43,825 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:30:43,825 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:30:43,825 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:30:43,825 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:30:43,825 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:30:43,825 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:30:43,826 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:30:43,826 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:30:43,826 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:30:43,826 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:30:43,826 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:30:43,826 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:30:43,826 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:30:43,826 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:30:46,435 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:30:46,444 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:30:46,456 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:30:46,459 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:30:46,463 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:30:46,465 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:30:46,651 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:30:46,652 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:30:46,652 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:30:46,652 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:30:46,653 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:30:50,495 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:30:50,645 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:30:50,646 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 16:30:50,647 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 16:30:50,647 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 16:30:50,669 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:218]
2025-04-03 16:30:50,669 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 16:30:50,670 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 215, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:30:50,677 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 16:30:50,827 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:30:50,827 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 215, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:30:50,831 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:30:50,831 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:30:51,438 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:30:51,439 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:30:51,440 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:30:51,441 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:30:51,442 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:30:51,458 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:30:51,461 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:30:51,461 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:30:51,461 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:30:52,720 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:30:52,781 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:30:59,470 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:30:59,470 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:30:59,517 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:30:59,518 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:30:59,534 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:30:59,536 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:30:59,536 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:30:59,537 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:31:00,418 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:34:07,003 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:34:07,003 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:34:07,005 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:34:07,005 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:34:07,007 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:34:07,008 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:34:07,008 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:34:07,009 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:34:07,010 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:34:07,010 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:34:07,011 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:34:07,013 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:34:07,014 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:34:07,014 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:34:07,015 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:34:07,015 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:34:07,015 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:34:07,015 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:34:07,016 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:34:07,016 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:34:07,016 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:34:07,016 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:34:07,017 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:34:07,017 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:34:07,017 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:34:07,017 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:34:07,017 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:34:07,018 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:34:07,018 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:34:07,018 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:34:07,018 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:34:07,019 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:34:08,781 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:34:08,782 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:34:08,784 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:34:08,784 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:34:08,788 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:34:08,788 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:34:08,789 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:34:08,789 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:34:08,790 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:34:08,790 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:34:08,791 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:34:08,801 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:34:08,802 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:34:08,803 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:34:08,803 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:34:08,803 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:34:08,804 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:34:08,804 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:34:08,804 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:34:08,805 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:34:08,805 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:34:08,805 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:34:08,806 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:34:08,806 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:34:08,806 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:34:08,806 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:34:08,807 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:34:08,807 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:34:08,807 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:34:08,808 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:34:08,808 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:34:08,808 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:34:08,808 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:34:08,809 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:34:08,809 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:34:08,809 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:34:08,813 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:34:08,813 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:34:08,814 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:34:08,814 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:34:08,814 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:34:08,815 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:34:08,815 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:34:08,815 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:34:08,816 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:34:08,816 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:34:08,816 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:34:08,817 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:34:08,817 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:34:08,817 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:34:08,817 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:34:08,818 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:34:08,818 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:34:10,999 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:34:10,999 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:34:11,000 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:34:11,000 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:34:11,000 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:34:11,000 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:34:11,334 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:121]
2025-04-03 16:34:11,335 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:34:11,335 - WafLogger - ERROR - An error occurred: 'ImageDraw' object has no attribute 'textsize' [keywords_manager.py:72]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'
2025-04-03 16:34:11,338 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:73]
2025-04-03 16:34:11,568 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:121]
2025-04-03 16:34:11,569 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:34:11,569 - WafLogger - ERROR - An error occurred: 'ImageDraw' object has no attribute 'textsize' [runner.py:207]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 74, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser " + browser_name, sub_step_message="Error Occured. " + str(e), sub_step_status='Fail', image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'
2025-04-03 16:34:11,577 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:34:11,578 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:34:12,256 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:34:12,256 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:34:12,258 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:34:12,260 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:34:12,262 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:34:12,285 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:34:12,286 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:34:12,286 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:34:12,287 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:34:13,205 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:34:13,247 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:34:19,766 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:34:19,767 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:34:19,767 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:34:19,767 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:34:19,768 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:34:19,768 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:34:19,768 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:34:19,768 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:34:19,768 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:34:19,768 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:34:19,769 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:34:21,455 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:34:21,455 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:34:21,457 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:34:21,458 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:34:21,461 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:34:21,462 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:34:21,462 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:34:21,462 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:34:21,463 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:34:21,463 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:34:21,463 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:34:21,475 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:34:21,476 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:34:21,476 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:34:21,477 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:34:21,477 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:34:21,477 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:34:21,477 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:34:21,477 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:34:21,477 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:34:21,477 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:34:21,478 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:34:21,478 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:34:21,478 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:34:21,478 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:34:21,478 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:34:21,478 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:34:21,478 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:34:21,479 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:34:21,479 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:34:21,479 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:34:21,479 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:34:21,479 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:34:21,479 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:34:21,479 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:34:21,479 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:34:21,480 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:34:21,480 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:34:21,480 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:34:21,485 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:34:21,486 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:34:21,486 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:34:21,486 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:34:21,486 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:34:21,486 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:34:21,487 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:34:21,487 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:34:21,487 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:34:21,488 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:34:21,488 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:34:21,488 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:34:21,488 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:34:21,488 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:34:21,488 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:34:21,488 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:34:21,488 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:34:23,922 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:34:23,924 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:34:23,924 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:34:23,925 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:34:23,925 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:34:23,925 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:34:24,112 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:121]
2025-04-03 16:34:24,112 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:34:24,112 - WafLogger - ERROR - An error occurred: 'ImageDraw' object has no attribute 'textsize' [keywords_manager.py:72]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'
2025-04-03 16:34:24,119 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:73]
2025-04-03 16:34:24,244 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:121]
2025-04-03 16:34:24,244 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:34:24,244 - WafLogger - ERROR - An error occurred: 'ImageDraw' object has no attribute 'textsize' [runner.py:207]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 74, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser " + browser_name, sub_step_message="Error Occured. " + str(e), sub_step_status='Fail', image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'
2025-04-03 16:34:24,254 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:34:24,255 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:34:25,305 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:34:25,305 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:34:25,307 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:34:25,310 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:34:25,312 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:34:25,336 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:34:25,338 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:34:25,338 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:34:25,339 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:34:26,208 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:34:26,276 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:34:32,797 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:34:32,797 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:34:32,839 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:34:32,840 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:34:32,850 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:34:32,852 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:34:32,852 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:34:32,852 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:34:33,701 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:36:33,212 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:36:33,212 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:36:33,213 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:36:33,213 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:36:33,214 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:36:33,215 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:36:33,215 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:36:33,216 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:36:33,217 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:36:33,218 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:36:33,218 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:36:33,219 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:36:33,221 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:36:33,221 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:36:33,221 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:36:33,221 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:36:33,221 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:36:33,222 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:36:33,222 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:36:33,222 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:36:33,222 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:36:33,222 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:36:33,222 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:36:33,223 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:36:33,223 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:36:33,223 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:36:33,223 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:36:33,223 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:36:33,223 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:36:33,223 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:36:33,223 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:36:33,224 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:36:35,023 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:36:35,023 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:36:35,025 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:36:35,026 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:36:35,030 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:36:35,030 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:36:35,031 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:36:35,031 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:36:35,031 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:36:35,032 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:36:35,033 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:36:35,043 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:36:35,044 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:36:35,045 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:36:35,045 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:36:35,045 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:36:35,046 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:36:35,046 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:36:35,046 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:36:35,047 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:36:35,047 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:36:35,047 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:36:35,048 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:36:35,048 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:36:35,048 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:36:35,048 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:36:35,049 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:36:35,049 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:36:35,049 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:36:35,050 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:36:35,050 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:36:35,050 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:36:35,051 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:36:35,051 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:36:35,052 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:36:35,052 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:36:35,054 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:36:35,055 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:36:35,055 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:36:35,055 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:36:35,056 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:36:35,056 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:36:35,056 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:36:35,057 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:36:35,057 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:36:35,057 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:36:35,058 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:36:35,058 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:36:35,058 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:36:35,059 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:36:35,059 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:36:35,059 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:36:35,060 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:36:37,342 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:36:37,343 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:36:37,343 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:36:37,343 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:36:37,343 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:36:37,344 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:36:37,723 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:36:37,724 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:36:37,724 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:36:37,724 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:36:37,724 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:36:41,083 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:36:41,502 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:36:41,502 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:36:41,502 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:36:42,083 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:36:42,084 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:36:42,086 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:36:42,088 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:36:42,089 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:36:42,107 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:36:42,108 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:36:42,109 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:36:42,109 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:36:43,232 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:36:43,316 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:36:49,815 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:36:49,815 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:36:49,815 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:36:49,815 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:36:49,815 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:36:49,815 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:36:49,816 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:36:49,816 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:36:49,816 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:36:49,816 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:36:49,816 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:36:51,786 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:36:51,787 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:36:51,789 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:36:51,789 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:36:51,793 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:36:51,793 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:36:51,794 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:36:51,794 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:36:51,795 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:36:51,795 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:36:51,795 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:36:51,806 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:36:51,806 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:36:51,807 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:36:51,808 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:36:51,808 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:36:51,808 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:36:51,809 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:36:51,809 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:36:51,809 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:36:51,810 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:36:51,810 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:36:51,810 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:36:51,810 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:36:51,811 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:36:51,811 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:36:51,811 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:36:51,812 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:36:51,812 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:36:51,812 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:36:51,813 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:36:51,813 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:36:51,813 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:36:51,814 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:36:51,814 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:36:51,814 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:36:51,814 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:36:51,815 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:36:51,815 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:36:51,817 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:36:51,818 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:36:51,818 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:36:51,819 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:36:51,819 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:36:51,820 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:36:51,820 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:36:51,820 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:36:51,821 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:36:51,821 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:36:51,821 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:36:51,821 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:36:51,821 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:36:51,821 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:36:51,821 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:36:51,822 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:36:51,822 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:36:54,466 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:36:54,466 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:36:54,467 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:36:54,469 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:36:54,469 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:36:54,481 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:36:54,672 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:36:54,674 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:36:54,674 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:36:54,674 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:36:54,674 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:36:58,884 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:36:59,046 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:36:59,048 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 16:36:59,048 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 16:36:59,048 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 16:36:59,070 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:218]
2025-04-03 16:36:59,071 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 16:36:59,071 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 215, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:36:59,176 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 16:36:59,332 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:36:59,332 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 215, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:36:59,337 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:36:59,337 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:36:59,855 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:36:59,855 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:36:59,857 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:36:59,858 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:36:59,858 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:36:59,870 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:36:59,872 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:36:59,873 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:36:59,873 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:37:01,072 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:37:01,133 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:37:07,797 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:37:07,797 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:37:07,849 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:37:07,851 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:37:07,871 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:37:07,873 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:37:07,874 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:37:07,874 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:37:08,723 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:38:47,987 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:38:47,988 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:38:47,989 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:38:47,990 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:38:47,991 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:38:47,991 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:38:47,992 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:38:47,992 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:38:47,993 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:38:47,994 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:38:47,994 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:38:47,995 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:38:47,995 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:38:47,996 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:38:47,996 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:38:47,996 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:38:47,996 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:38:47,996 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:38:47,996 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:38:47,997 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:38:47,997 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:38:47,997 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:38:47,997 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:38:47,997 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:38:47,997 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:38:47,997 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:38:47,997 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:38:47,998 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:38:47,998 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:38:47,998 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:38:47,998 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:38:47,998 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:38:49,786 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:38:49,786 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:38:49,788 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:38:49,788 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:38:49,792 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:38:49,792 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:38:49,793 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:38:49,794 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:38:49,794 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:38:49,794 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:38:49,795 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:38:49,806 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:38:49,807 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:38:49,808 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:38:49,808 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:38:49,809 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:38:49,809 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:38:49,809 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:38:49,809 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:38:49,810 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:38:49,810 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:38:49,810 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:38:49,811 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:38:49,811 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:38:49,811 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:38:49,811 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:38:49,812 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:38:49,812 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:38:49,812 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:38:49,812 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:38:49,813 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:38:49,813 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:38:49,813 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:38:49,813 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:38:49,814 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:38:49,814 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:38:49,818 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:38:49,819 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:38:49,819 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:38:49,819 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:38:49,820 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:38:49,820 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:38:49,820 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:38:49,821 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:38:49,821 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:38:49,821 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:38:49,822 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:38:49,822 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:38:49,822 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:38:49,823 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:38:49,823 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:38:49,823 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:38:49,824 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:38:52,011 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:38:52,011 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:38:52,011 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:38:52,012 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:38:52,012 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:38:52,012 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:38:52,284 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:121]
2025-04-03 16:38:52,284 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:38:52,284 - WafLogger - ERROR - An error occurred: 'ImageDraw' object has no attribute 'textsize' [keywords_manager.py:72]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'
2025-04-03 16:38:52,287 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:73]
2025-04-03 16:38:52,529 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:121]
2025-04-03 16:38:52,529 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:38:52,530 - WafLogger - ERROR - An error occurred: 'ImageDraw' object has no attribute 'textsize' [runner.py:207]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 74, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser " + browser_name, sub_step_message="Error Occured. " + str(e), sub_step_status='Fail', image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'
2025-04-03 16:38:52,538 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:38:52,538 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:38:53,234 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:38:53,235 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:38:53,237 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:38:53,239 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:38:53,240 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:38:53,263 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:38:53,265 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:38:53,265 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:38:53,266 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:38:54,199 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:38:54,267 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:39:00,803 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:39:00,804 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:39:00,804 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:39:00,804 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:39:00,804 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:39:00,805 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:39:00,805 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:39:00,805 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:39:00,806 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:39:00,806 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:39:00,806 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:39:02,522 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:39:02,523 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:39:02,525 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:39:02,525 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:39:02,529 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:39:02,529 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:39:02,530 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:39:02,530 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:39:02,530 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:39:02,530 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:39:02,530 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:39:02,541 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:39:02,542 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:39:02,543 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:39:02,543 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:39:02,543 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:39:02,543 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:39:02,543 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:39:02,544 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:39:02,544 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:39:02,544 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:39:02,544 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:39:02,544 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:39:02,544 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:39:02,545 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:39:02,545 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:39:02,545 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:39:02,545 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:39:02,545 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:39:02,545 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:39:02,545 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:39:02,545 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:39:02,546 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:39:02,546 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:39:02,546 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:39:02,546 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:39:02,546 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:39:02,546 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:39:02,546 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:39:02,548 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:39:02,549 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:39:02,549 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:39:02,549 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:39:02,549 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:39:02,550 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:39:02,550 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:39:02,550 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:39:02,550 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:39:02,550 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:39:02,550 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:39:02,550 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:39:02,551 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:39:02,551 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:39:02,551 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:39:02,551 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:39:02,551 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:39:04,959 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:39:04,961 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:39:04,963 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:39:04,963 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:39:04,963 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:39:04,963 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:39:05,124 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:121]
2025-04-03 16:39:05,124 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:39:05,125 - WafLogger - ERROR - An error occurred: 'ImageDraw' object has no attribute 'textsize' [keywords_manager.py:72]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'
2025-04-03 16:39:05,128 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:73]
2025-04-03 16:39:05,215 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:121]
2025-04-03 16:39:05,216 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:39:05,216 - WafLogger - ERROR - An error occurred: 'ImageDraw' object has no attribute 'textsize' [runner.py:207]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 74, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser " + browser_name, sub_step_message="Error Occured. " + str(e), sub_step_status='Fail', image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 106, in take_screenshot_with_base64_watermark
    text_width, text_height = draw.textsize(date_time_str, font=font)
                              ^^^^^^^^^^^^^
AttributeError: 'ImageDraw' object has no attribute 'textsize'
2025-04-03 16:39:05,222 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:39:05,223 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:39:05,807 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:39:05,807 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:39:05,809 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:39:05,810 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:39:05,811 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:39:05,824 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:39:05,825 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:39:05,825 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:39:05,826 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:39:06,687 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:39:06,728 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:39:13,279 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:39:13,279 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:39:13,327 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:39:13,330 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:39:13,347 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:39:13,349 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:39:13,349 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:39:13,349 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:39:14,212 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:41:15,548 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:41:15,548 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:41:15,549 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:41:15,550 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:41:15,551 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:41:15,552 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:41:15,552 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:41:15,553 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:41:15,554 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:41:15,554 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:41:15,554 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:41:15,557 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:41:15,557 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:41:15,557 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:41:15,558 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:41:15,558 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:41:15,558 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:41:15,558 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:41:15,558 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:41:15,558 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:41:15,558 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:41:15,559 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:41:15,560 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:41:17,406 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:41:17,407 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:41:17,409 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:41:17,409 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:41:17,413 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:41:17,413 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:41:17,414 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:41:17,414 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:41:17,414 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:41:17,414 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:41:17,414 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:41:17,426 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:41:17,426 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:41:17,427 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:41:17,428 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:41:17,428 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:41:17,428 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:41:17,428 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:41:17,428 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:41:17,428 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:41:17,429 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:41:17,429 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:41:17,429 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:41:17,429 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:41:17,429 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:41:17,429 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:41:17,429 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:41:17,430 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:41:17,430 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:41:17,430 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:41:17,430 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:41:17,430 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:41:17,430 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:41:17,430 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:41:17,431 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:41:17,431 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:41:17,433 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:41:17,433 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:41:17,433 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:41:17,433 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:41:17,434 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:41:17,434 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:41:17,434 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:41:17,434 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:41:17,434 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:41:17,434 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:41:17,435 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:41:17,435 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:41:17,435 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:41:17,435 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:41:17,435 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:41:17,436 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:41:17,436 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:41:19,594 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:41:19,595 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:41:19,595 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:41:19,595 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:41:19,595 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:41:19,596 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:41:19,914 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:123]
2025-04-03 16:41:19,914 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:41:19,914 - WafLogger - ERROR - An error occurred: 'FreeTypeFont' object has no attribute 'getsize' [keywords_manager.py:72]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 105, in take_screenshot_with_base64_watermark
    text_width, text_height = font.getsize(date_time_str)
                              ^^^^^^^^^^^^
AttributeError: 'FreeTypeFont' object has no attribute 'getsize'
2025-04-03 16:41:19,917 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:73]
2025-04-03 16:41:20,155 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:123]
2025-04-03 16:41:20,156 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:41:20,156 - WafLogger - ERROR - An error occurred: 'FreeTypeFont' object has no attribute 'getsize' [runner.py:207]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 105, in take_screenshot_with_base64_watermark
    text_width, text_height = font.getsize(date_time_str)
                              ^^^^^^^^^^^^
AttributeError: 'FreeTypeFont' object has no attribute 'getsize'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 74, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser " + browser_name, sub_step_message="Error Occured. " + str(e), sub_step_status='Fail', image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 105, in take_screenshot_with_base64_watermark
    text_width, text_height = font.getsize(date_time_str)
                              ^^^^^^^^^^^^
AttributeError: 'FreeTypeFont' object has no attribute 'getsize'
2025-04-03 16:41:20,163 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:41:20,163 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:41:20,842 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:41:20,842 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:41:20,844 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:41:20,847 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:41:20,848 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:41:20,872 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:41:20,891 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:41:20,891 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:41:20,891 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:41:21,807 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:41:21,858 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:41:28,333 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:41:28,334 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:41:28,334 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:41:28,334 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:41:28,334 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:41:28,335 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:41:28,335 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:41:28,335 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:41:28,335 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:41:28,335 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:41:28,336 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:41:30,073 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:41:30,073 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:41:30,075 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:41:30,075 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:41:30,079 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:41:30,079 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:41:30,079 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:41:30,080 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:41:30,080 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:41:30,080 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:41:30,081 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:41:30,090 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:41:30,091 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:41:30,092 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:41:30,093 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:41:30,094 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:41:30,094 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:41:30,094 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:41:30,095 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:41:30,095 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:41:30,095 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:41:30,096 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:41:30,096 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:41:30,096 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:41:30,096 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:41:30,097 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:41:30,097 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:41:30,098 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:41:30,098 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:41:30,098 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:41:30,098 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:41:30,098 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:41:30,099 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:41:30,099 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:41:30,099 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:41:30,099 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:41:30,100 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:41:30,100 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:41:30,100 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:41:30,102 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:41:30,103 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:41:30,103 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:41:30,103 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:41:30,104 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:41:30,104 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:41:30,104 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:41:30,105 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:41:30,105 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:41:30,105 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:41:30,106 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:41:30,106 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:41:30,106 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:41:30,107 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:41:30,107 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:41:30,107 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:41:30,107 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:41:33,234 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:41:33,245 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:41:33,246 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:41:33,252 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:41:33,252 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:41:33,253 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:41:33,456 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:123]
2025-04-03 16:41:33,457 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:41:33,457 - WafLogger - ERROR - An error occurred: 'FreeTypeFont' object has no attribute 'getsize' [keywords_manager.py:72]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 105, in take_screenshot_with_base64_watermark
    text_width, text_height = font.getsize(date_time_str)
                              ^^^^^^^^^^^^
AttributeError: 'FreeTypeFont' object has no attribute 'getsize'
2025-04-03 16:41:33,465 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:73]
2025-04-03 16:41:33,579 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:123]
2025-04-03 16:41:33,579 - WafLogger - ERROR - ### Exception Occurred when taking screenshot [driver_functions.py:78]
2025-04-03 16:41:33,579 - WafLogger - ERROR - An error occurred: 'FreeTypeFont' object has no attribute 'getsize' [runner.py:207]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 70, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser ", sub_step_message="The browser opened successfully", sub_step_status="Pass", image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 105, in take_screenshot_with_base64_watermark
    text_width, text_height = font.getsize(date_time_str)
                              ^^^^^^^^^^^^
AttributeError: 'FreeTypeFont' object has no attribute 'getsize'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 74, in ge_open_browser
    self.repo_m.add_report_data(sub_step="Open Browser " + browser_name, sub_step_message="Error Occured. " + str(e), sub_step_status='Fail', image_src=self.take_screenshot(), image_alt = self.repo_m.browser_img_alt)
                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 76, in take_screenshot
    return self.take_screenshot_with_base64_watermark()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 105, in take_screenshot_with_base64_watermark
    text_width, text_height = font.getsize(date_time_str)
                              ^^^^^^^^^^^^
AttributeError: 'FreeTypeFont' object has no attribute 'getsize'
2025-04-03 16:41:33,585 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:41:33,585 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:41:34,214 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:41:34,214 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:41:34,216 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:41:34,218 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:41:34,220 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:41:34,249 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:41:34,250 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:41:34,250 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:41:34,251 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:41:35,148 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:41:35,199 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:41:41,706 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:41:41,707 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:41:41,738 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:41:41,739 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:41:41,750 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:41:41,752 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:41:41,752 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:41:41,753 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:41:42,593 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:44:18,936 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:44:18,936 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:44:18,938 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:44:18,938 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:44:18,940 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:44:18,940 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:44:18,941 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:44:18,942 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:44:18,943 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:44:18,943 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:44:18,943 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:44:18,944 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:44:18,945 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:44:18,946 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:44:18,946 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:44:18,947 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:44:18,947 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:44:18,947 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:44:18,947 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:44:18,948 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:44:18,948 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:44:18,948 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:44:18,948 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:44:18,948 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:44:18,949 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:44:18,949 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:44:18,949 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:44:18,949 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:44:18,950 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:44:18,950 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:44:18,950 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:44:18,950 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:44:20,774 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:44:20,774 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:44:20,776 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:44:20,776 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:44:20,780 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:44:20,781 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:44:20,781 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:44:20,781 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:44:20,782 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:44:20,782 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:44:20,782 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:44:20,791 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:44:20,792 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:44:20,793 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:44:20,794 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:44:20,795 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:44:20,795 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:44:20,795 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:44:20,796 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:44:20,796 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:44:20,796 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:44:20,796 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:44:20,796 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:44:20,796 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:44:20,796 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:44:20,797 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:44:20,797 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:44:20,797 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:44:20,797 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:44:20,797 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:44:20,797 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:44:20,797 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:44:20,798 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:44:20,798 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:44:20,798 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:44:20,798 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:44:20,800 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:44:20,800 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:44:20,801 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:44:20,801 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:44:20,801 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:44:20,801 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:44:20,801 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:44:20,801 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:44:20,802 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:44:20,802 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:44:20,802 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:44:20,802 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:44:20,803 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:44:20,803 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:44:20,803 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:44:20,803 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:44:20,803 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:44:23,077 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:44:23,078 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:44:23,078 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:44:23,078 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:44:23,078 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:44:23,078 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:44:23,455 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:44:23,456 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:44:23,456 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:44:23,458 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:44:23,458 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:44:28,134 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:44:28,558 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:44:28,559 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:44:28,559 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:44:29,133 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:44:29,133 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:44:29,134 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:44:29,135 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:44:29,137 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:44:29,151 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:44:29,154 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:44:29,155 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:44:29,155 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:44:30,316 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:44:30,379 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:44:36,949 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:44:36,949 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:44:36,949 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:44:36,950 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:44:36,950 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:44:36,950 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:44:36,950 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:44:36,950 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:44:36,951 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:44:36,951 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:44:36,951 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:44:38,678 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:44:38,679 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:44:38,681 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:44:38,681 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:44:38,685 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:44:38,686 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:44:38,686 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:44:38,687 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:44:38,687 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:44:38,785 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:44:38,786 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:44:38,809 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:44:38,810 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:44:38,811 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:44:38,813 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:44:38,813 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:44:38,813 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:44:38,814 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:44:38,814 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:44:38,815 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:44:38,815 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:44:38,815 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:44:38,815 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:44:38,815 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:44:38,816 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:44:38,816 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:44:38,816 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:44:38,816 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:44:38,816 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:44:38,817 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:44:38,817 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:44:38,817 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:44:38,817 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:44:38,817 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:44:38,817 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:44:38,817 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:44:38,817 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:44:38,818 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:44:38,818 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:44:38,820 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:44:38,821 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:44:38,821 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:44:38,821 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:44:38,822 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:44:38,822 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:44:38,822 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:44:38,823 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:44:38,823 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:44:38,823 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:44:38,823 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:44:38,824 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:44:38,824 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:44:38,824 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:44:38,825 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:44:38,825 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:44:38,825 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:44:41,542 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:44:41,557 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:44:41,560 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:44:41,561 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:44:41,562 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:44:41,564 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:44:41,747 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:44:41,747 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:44:41,748 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:44:41,748 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:44:41,748 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:44:45,731 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:44:45,924 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:44:45,924 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 16:44:45,925 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 16:44:45,925 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 16:44:45,941 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:261]
2025-04-03 16:44:45,941 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 16:44:45,941 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 258, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:44:46,009 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 16:44:46,163 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:44:46,163 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 258, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:44:46,167 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:44:46,168 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:44:46,689 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:44:46,690 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:44:46,691 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:44:46,692 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:44:46,693 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:44:46,707 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:44:46,710 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:44:46,710 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:44:46,710 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:44:47,853 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:44:47,894 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:44:54,448 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:44:54,449 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:44:54,486 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:44:54,487 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:44:54,590 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:44:54,592 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:44:54,593 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:44:54,593 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:44:55,459 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:47:53,054 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:47:53,055 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:47:53,056 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:47:53,057 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:47:53,060 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:47:53,061 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:47:53,061 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:47:53,062 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:47:53,063 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:47:53,063 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:47:53,064 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:47:53,065 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:47:53,065 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:47:53,066 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:47:53,066 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:47:53,066 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:47:53,067 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:47:53,067 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:47:53,067 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:47:53,067 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:47:53,067 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:47:53,068 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:47:53,068 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:47:53,068 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:47:53,068 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:47:53,068 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:47:53,069 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:47:53,069 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:47:53,069 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:47:53,069 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:47:53,070 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:47:53,070 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:47:54,844 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:47:54,844 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:47:54,846 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:47:54,846 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:47:54,850 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:47:54,850 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:47:54,850 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:47:54,851 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:47:54,851 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:47:54,876 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:47:54,876 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:47:54,898 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:47:54,899 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:47:54,899 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:47:54,899 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:47:54,900 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:47:54,900 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:47:54,900 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:47:54,901 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:47:54,901 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:47:54,901 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:47:54,902 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:47:54,902 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:47:54,902 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:47:54,902 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:47:54,903 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:47:54,903 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:47:54,903 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:47:54,904 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:47:54,904 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:47:54,904 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:47:54,905 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:47:54,905 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:47:54,905 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:47:54,905 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:47:54,906 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:47:54,909 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:47:54,909 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:47:54,910 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:47:54,910 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:47:54,910 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:47:54,910 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:47:54,911 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:47:54,911 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:47:54,911 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:47:54,912 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:47:54,912 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:47:54,912 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:47:54,913 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:47:54,913 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:47:54,913 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:47:54,913 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:47:54,914 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:47:57,248 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:47:57,248 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:47:57,248 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:47:57,249 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:47:57,249 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:47:57,249 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:47:57,617 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:47:57,617 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:47:57,618 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:47:57,618 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:47:57,618 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:48:02,049 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:48:02,427 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:48:02,428 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:48:02,428 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:48:02,989 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:48:02,989 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:48:02,990 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:48:02,992 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:48:02,992 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:48:03,006 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:48:03,008 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:48:03,008 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:48:03,009 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:48:04,117 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:48:04,157 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:48:10,697 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:48:10,698 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:48:10,698 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:48:10,698 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:48:10,698 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:48:10,699 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:48:10,699 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:48:10,699 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:48:10,699 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:48:10,699 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:48:10,700 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:48:12,321 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:48:12,322 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:48:12,324 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:48:12,324 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:48:12,328 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:48:12,328 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:48:12,329 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:48:12,330 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:48:12,330 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:48:12,331 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:48:12,332 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:48:12,343 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:48:12,343 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:48:12,345 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:48:12,345 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:48:12,346 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:48:12,346 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:48:12,346 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:48:12,346 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:48:12,346 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:48:12,346 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:48:12,347 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:48:12,347 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:48:12,347 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:48:12,347 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:48:12,347 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:48:12,347 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:48:12,348 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:48:12,348 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:48:12,348 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:48:12,348 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:48:12,348 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:48:12,348 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:48:12,348 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:48:12,349 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:48:12,349 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:48:12,349 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:48:12,349 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:48:12,349 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:48:12,351 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:48:12,351 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:48:12,351 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:48:12,351 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:48:12,351 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:48:12,352 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:48:12,353 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:48:12,353 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:48:12,353 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:48:12,353 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:48:12,353 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:48:12,354 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:48:12,354 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:48:12,354 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:48:12,354 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:48:12,354 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:48:12,355 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:48:14,900 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:48:14,926 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:48:14,929 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:48:14,942 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:48:14,950 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:48:14,961 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:48:15,138 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:48:15,139 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:48:15,139 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:48:15,140 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:48:15,140 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:48:18,569 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:48:18,709 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:48:18,710 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 16:48:18,710 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 16:48:18,710 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 16:48:18,722 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:262]
2025-04-03 16:48:18,723 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 16:48:18,723 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 259, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:48:18,726 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 16:48:18,897 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:48:18,897 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 259, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:48:18,904 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:48:18,905 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:48:19,522 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:48:19,522 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:48:19,525 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:48:19,528 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:48:19,529 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:48:19,547 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:48:19,549 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:48:19,550 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:48:19,550 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:48:20,786 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:48:20,861 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:48:27,489 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:48:27,490 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:48:27,525 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:48:27,526 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:48:27,536 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:48:27,537 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:48:27,537 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:48:27,538 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:48:28,397 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:50:13,841 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:50:13,841 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:50:13,843 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:50:13,843 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:50:13,845 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:50:13,846 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:50:13,846 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:50:13,847 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:50:13,848 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:50:13,848 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:50:13,849 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:50:13,850 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:50:13,850 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:50:13,850 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:50:13,851 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:50:13,851 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:50:13,852 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:50:13,852 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:50:13,852 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:50:13,853 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:50:13,853 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:50:13,853 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:50:13,854 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:50:13,854 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:50:13,854 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:50:13,854 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:50:13,854 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:50:13,855 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:50:13,855 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:50:13,855 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:50:13,855 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:50:13,855 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:50:15,634 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:50:15,636 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:50:15,638 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:50:15,638 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:50:15,642 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:50:15,642 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:50:15,643 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:50:15,643 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:50:15,643 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:50:15,643 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:50:15,643 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:50:15,654 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:50:15,655 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:50:15,655 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:50:15,656 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:50:15,656 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:50:15,656 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:50:15,656 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:50:15,657 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:50:15,657 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:50:15,657 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:50:15,657 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:50:15,657 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:50:15,657 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:50:15,657 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:50:15,658 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:50:15,658 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:50:15,658 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:50:15,658 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:50:15,658 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:50:15,658 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:50:15,658 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:50:15,658 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:50:15,659 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:50:15,659 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:50:15,659 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:50:15,661 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:50:15,661 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:50:15,661 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:50:15,662 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:50:15,662 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:50:15,662 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:50:15,662 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:50:15,662 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:50:15,662 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:50:15,663 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:50:15,663 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:50:15,663 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:50:15,663 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:50:15,663 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:50:15,663 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:50:15,663 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:50:15,663 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:50:18,054 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:50:18,055 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:50:18,055 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:50:18,056 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:50:18,056 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:50:18,056 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:50:18,454 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:50:18,454 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:50:18,455 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:50:18,455 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:50:18,455 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:50:22,668 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:50:23,086 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:50:23,086 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:50:23,086 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:50:23,754 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:50:23,754 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:50:23,755 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:50:23,756 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:50:23,757 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:50:23,771 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:50:23,772 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:50:23,773 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:50:23,773 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:50:24,955 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:50:24,995 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:50:31,485 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:50:31,485 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:50:31,486 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:50:31,486 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:50:31,486 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:50:31,486 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:50:31,487 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:50:31,487 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:50:31,487 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:50:31,487 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:50:31,488 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:50:33,164 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:50:33,165 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:50:33,166 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:50:33,167 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:50:33,170 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:50:33,171 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:50:33,171 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:50:33,172 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:50:33,172 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:50:33,173 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:50:33,174 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:50:33,183 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:50:33,184 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:50:33,185 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:50:33,186 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:50:33,186 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:50:33,187 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:50:33,187 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:50:33,188 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:50:33,188 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:50:33,188 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:50:33,188 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:50:33,189 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:50:33,189 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:50:33,189 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:50:33,190 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:50:33,190 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:50:33,190 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:50:33,190 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:50:33,191 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:50:33,191 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:50:33,192 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:50:33,192 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:50:33,192 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:50:33,192 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:50:33,193 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:50:33,193 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:50:33,193 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:50:33,194 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:50:33,196 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:50:33,196 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:50:33,196 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:50:33,196 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:50:33,196 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:50:33,197 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:50:33,197 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:50:33,197 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:50:33,197 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:50:33,197 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:50:33,197 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:50:33,197 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:50:33,198 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:50:33,198 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:50:33,198 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:50:33,198 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:50:33,198 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:50:35,865 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:50:35,869 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:50:35,878 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:50:35,881 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:50:35,881 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:50:35,894 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:50:36,091 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:50:36,091 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:50:36,092 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:50:36,092 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:50:36,092 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:50:39,471 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:50:39,612 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:50:39,612 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 16:50:39,613 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 16:50:39,613 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 16:50:39,637 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:262]
2025-04-03 16:50:39,637 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 16:50:39,638 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 259, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:50:40,151 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 16:50:40,308 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:50:40,308 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 259, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:50:40,313 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:50:40,313 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:50:40,884 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:50:40,885 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:50:40,886 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:50:40,888 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:50:40,888 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:50:40,900 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:50:40,903 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:50:40,903 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:50:40,903 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:50:41,989 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:50:42,049 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:50:48,738 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:50:48,738 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:50:48,770 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:50:48,772 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:50:48,783 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:50:48,784 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:50:48,784 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:50:48,784 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:50:49,635 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 16:52:47,477 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 16:52:47,477 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 16:52:47,479 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 16:52:47,479 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 16:52:47,481 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 16:52:47,481 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 16:52:47,482 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:52:47,483 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:52:47,484 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 16:52:47,485 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 16:52:47,486 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 16:52:47,487 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 16:52:47,488 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 16:52:47,488 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 16:52:47,488 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 16:52:47,488 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:52:47,489 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:52:47,490 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:52:47,490 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:52:47,490 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:52:47,490 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:52:47,490 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 16:52:49,540 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:52:49,541 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:52:49,542 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:52:49,543 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:52:49,547 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:52:49,547 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:52:49,547 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:52:49,548 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:52:49,548 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:52:49,548 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:52:49,548 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:52:49,560 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:52:49,561 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:52:49,561 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:52:49,562 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:52:49,562 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:52:49,562 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:52:49,562 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:52:49,563 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:52:49,563 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:52:49,563 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:52:49,563 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:52:49,563 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:52:49,563 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:52:49,563 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:52:49,563 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:52:49,564 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:52:49,564 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:52:49,564 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:52:49,564 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:52:49,564 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:52:49,564 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:52:49,564 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:52:49,564 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:52:49,564 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:52:49,565 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:52:49,568 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:52:49,568 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:52:49,568 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:52:49,569 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:52:49,569 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:52:49,569 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:52:49,569 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:52:49,569 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:52:49,569 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:52:49,570 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 16:52:49,570 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:52:49,570 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:52:49,570 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:52:49,570 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:52:49,570 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:52:49,570 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 16:52:49,570 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 16:52:51,836 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:52:51,836 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:52:51,836 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 16:52:51,837 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:52:51,837 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:52:51,837 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:52:52,128 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:52:52,128 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:52:52,129 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:52:52,129 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:52:52,129 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:52:56,943 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:52:57,356 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:52:57,356 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:52:57,356 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:52:58,028 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:52:58,028 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:52:58,029 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:52:58,031 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:52:58,031 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:52:58,045 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:52:58,047 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:52:58,047 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:52:58,048 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:52:59,141 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:52:59,201 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:53:05,708 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 16:53:05,708 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:53:05,708 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 16:53:05,708 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:53:05,709 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 16:53:05,709 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 16:53:05,709 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 16:53:05,709 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 16:53:05,709 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 16:53:05,709 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 16:53:05,709 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 16:53:07,387 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 16:53:07,388 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 16:53:07,390 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 16:53:07,390 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 16:53:07,394 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 16:53:07,394 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 16:53:07,395 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 16:53:07,395 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 16:53:07,396 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 16:53:07,396 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 16:53:07,396 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 16:53:07,406 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 16:53:07,407 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 16:53:07,408 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 16:53:07,408 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 16:53:07,408 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 16:53:07,408 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 16:53:07,408 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 16:53:07,409 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 16:53:07,409 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 16:53:07,409 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 16:53:07,409 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 16:53:07,409 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 16:53:07,410 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 16:53:07,410 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 16:53:07,410 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 16:53:07,410 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 16:53:07,410 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 16:53:07,411 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 16:53:07,411 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 16:53:07,411 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 16:53:07,411 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 16:53:07,411 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 16:53:07,412 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 16:53:07,412 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 16:53:07,412 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 16:53:07,412 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 16:53:07,412 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 16:53:07,413 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 16:53:07,415 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 16:53:07,415 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 16:53:07,415 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 16:53:07,415 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 16:53:07,415 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 16:53:07,415 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 16:53:07,415 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 16:53:07,416 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 16:53:07,416 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 16:53:07,416 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 16:53:07,416 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 16:53:07,416 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 16:53:07,416 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 16:53:07,416 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 16:53:07,416 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 16:53:07,416 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 16:53:07,417 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 16:53:09,743 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 16:53:09,744 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 16:53:09,744 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 16:53:09,744 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 16:53:09,744 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 16:53:09,744 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 16:53:09,943 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:53:09,944 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 16:53:09,944 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 16:53:09,944 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 16:53:09,945 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 16:53:15,601 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 16:53:15,759 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:53:15,760 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 16:53:15,760 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 16:53:15,761 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 16:53:15,773 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:262]
2025-04-03 16:53:15,774 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 16:53:15,774 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 259, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:53:15,778 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 16:53:15,929 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 16:53:15,929 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 259, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A7BA545+20677]
	simdutf::get_active_implementation [0x00007FF60A716CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60AA0D75A+1807418]
	(No symbol) [0x00007FF60A5572AC]
	(No symbol) [0x00007FF60A55758B]
	(No symbol) [0x00007FF60A5985A7]
	(No symbol) [0x00007FF60A57849F]
	(No symbol) [0x00007FF60A54D6ED]
	(No symbol) [0x00007FF60A595D61]
	(No symbol) [0x00007FF60A5781C3]
	(No symbol) [0x00007FF60A54CC36]
	(No symbol) [0x00007FF60A54C0C4]
	(No symbol) [0x00007FF60A54CA63]
	(No symbol) [0x00007FF60A635BDD]
	(No symbol) [0x00007FF60A642042]
	(No symbol) [0x00007FF60A63AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A8942AA+262026]
	simdutf::get_active_implementation [0x00007FF60A724421+546385]
	simdutf::get_active_implementation [0x00007FF60A71D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A71D819+518729]
	simdutf::get_active_implementation [0x00007FF60A70F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 16:53:15,934 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 16:53:15,935 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 16:53:16,608 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 16:53:16,609 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 16:53:16,611 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 16:53:16,612 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 16:53:16,613 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 16:53:16,629 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 16:53:16,632 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 16:53:16,632 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 16:53:16,633 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 16:53:17,759 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 16:53:17,801 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 16:53:24,356 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 16:53:24,356 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 16:53:24,393 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 16:53:24,394 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 16:53:24,402 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 16:53:24,404 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 16:53:24,405 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 16:53:24,405 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 16:53:25,280 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 18:32:45,413 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 18:32:45,444 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 18:32:45,446 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 18:32:45,447 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 18:32:45,454 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 18:32:45,454 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 18:32:45,456 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 18:32:45,457 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 18:32:45,518 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 18:32:45,519 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 18:32:45,520 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 18:32:45,523 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 18:32:45,525 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 18:32:45,526 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 18:32:45,527 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 18:32:45,530 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 18:32:45,530 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:32:45,531 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 18:32:45,531 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:32:45,532 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 18:32:45,532 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:32:45,533 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 18:32:45,533 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:32:45,534 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 18:32:45,534 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:32:45,534 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 18:32:45,535 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:32:45,535 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 18:32:45,536 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 18:32:45,536 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 18:32:45,536 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 18:32:45,537 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 18:32:47,838 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 18:32:47,839 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 18:32:47,840 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 18:32:47,840 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 18:32:47,891 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 18:32:47,892 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 18:32:47,894 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 18:32:47,894 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 18:32:47,894 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 18:32:47,937 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 18:32:47,938 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 18:32:47,981 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 18:32:47,991 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 18:32:47,993 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 18:32:47,994 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 18:32:47,994 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 18:32:47,995 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 18:32:47,995 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 18:32:47,996 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 18:32:47,996 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 18:32:47,996 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 18:32:47,996 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 18:32:47,997 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 18:32:47,997 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 18:32:47,998 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 18:32:47,998 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 18:32:47,998 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 18:32:47,999 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 18:32:47,999 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 18:32:48,000 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 18:32:48,000 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 18:32:48,001 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 18:32:48,001 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 18:32:48,001 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 18:32:48,002 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 18:32:48,002 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 18:32:48,005 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 18:32:48,005 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 18:32:48,006 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 18:32:48,006 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 18:32:48,007 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 18:32:48,007 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 18:32:48,008 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 18:32:48,008 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 18:32:48,009 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 18:32:48,009 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 18:32:48,009 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 18:32:48,009 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 18:32:48,011 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 18:32:48,011 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 18:32:48,011 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 18:32:48,012 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 18:32:48,012 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 18:32:52,778 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 18:32:52,779 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 18:32:52,779 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 18:32:52,779 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 18:32:52,779 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 18:32:52,779 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 18:32:53,560 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:32:53,561 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 18:32:53,562 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 18:32:53,562 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 18:32:53,563 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 18:32:59,561 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 18:33:00,566 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:33:00,567 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 18:33:00,568 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 18:33:03,116 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 18:33:03,117 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 18:33:03,122 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 18:33:03,125 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 18:33:03,162 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 18:33:03,282 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 18:33:03,289 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 18:33:03,290 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 18:33:03,290 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 18:33:05,680 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 18:33:05,775 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 18:33:12,513 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 18:33:12,514 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:33:12,514 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 18:33:12,514 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:33:12,514 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 18:33:12,515 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:33:12,515 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 18:33:12,516 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 18:33:12,516 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 18:33:12,516 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 18:33:12,517 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 18:33:15,279 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 18:33:15,279 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 18:33:15,282 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 18:33:15,282 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 18:33:15,287 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 18:33:15,288 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 18:33:15,289 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 18:33:15,290 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 18:33:15,290 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 18:33:15,312 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 18:33:15,313 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 18:33:15,327 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 18:33:15,328 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 18:33:15,329 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 18:33:15,329 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 18:33:15,330 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 18:33:15,330 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 18:33:15,330 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 18:33:15,330 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 18:33:15,331 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 18:33:15,331 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 18:33:15,331 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 18:33:15,332 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 18:33:15,332 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 18:33:15,333 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 18:33:15,333 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 18:33:15,333 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 18:33:15,334 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 18:33:15,334 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 18:33:15,334 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 18:33:15,334 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 18:33:15,335 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 18:33:15,335 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 18:33:15,335 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 18:33:15,336 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 18:33:15,336 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 18:33:15,336 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 18:33:15,337 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 18:33:15,337 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 18:33:15,339 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 18:33:15,340 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 18:33:15,340 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 18:33:15,341 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 18:33:15,341 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 18:33:15,342 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 18:33:15,342 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 18:33:15,342 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 18:33:15,343 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 18:33:15,343 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 18:33:15,343 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 18:33:15,344 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 18:33:15,344 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 18:33:15,345 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 18:33:15,345 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 18:33:15,345 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 18:33:15,346 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 18:33:18,399 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 18:33:18,401 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 18:33:18,401 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 18:33:18,410 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 18:33:18,412 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 18:33:18,428 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 18:33:18,703 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:33:18,703 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 18:33:18,705 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 18:33:18,706 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 18:33:18,706 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 18:33:22,436 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 18:33:22,700 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:33:22,701 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 18:33:22,702 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 18:33:22,703 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 18:33:22,725 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:267]
2025-04-03 18:33:22,725 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 18:33:22,726 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7A718A545+20677]
	simdutf::get_active_implementation [0x00007FF7A70E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A73DD75A+1807418]
	(No symbol) [0x00007FF7A6F272AC]
	(No symbol) [0x00007FF7A6F2758B]
	(No symbol) [0x00007FF7A6F685A7]
	(No symbol) [0x00007FF7A6F4849F]
	(No symbol) [0x00007FF7A6F1D6ED]
	(No symbol) [0x00007FF7A6F65D61]
	(No symbol) [0x00007FF7A6F481C3]
	(No symbol) [0x00007FF7A6F1CC36]
	(No symbol) [0x00007FF7A6F1C0C4]
	(No symbol) [0x00007FF7A6F1CA63]
	(No symbol) [0x00007FF7A7005BDD]
	(No symbol) [0x00007FF7A7012042]
	(No symbol) [0x00007FF7A700AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A72642AA+262026]
	simdutf::get_active_implementation [0x00007FF7A70F4421+546385]
	simdutf::get_active_implementation [0x00007FF7A70ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7A70ED819+518729]
	simdutf::get_active_implementation [0x00007FF7A70DF3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7A718A545+20677]
	simdutf::get_active_implementation [0x00007FF7A70E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A73DD75A+1807418]
	(No symbol) [0x00007FF7A6F272AC]
	(No symbol) [0x00007FF7A6F2758B]
	(No symbol) [0x00007FF7A6F685A7]
	(No symbol) [0x00007FF7A6F4849F]
	(No symbol) [0x00007FF7A6F1D6ED]
	(No symbol) [0x00007FF7A6F65D61]
	(No symbol) [0x00007FF7A6F481C3]
	(No symbol) [0x00007FF7A6F1CC36]
	(No symbol) [0x00007FF7A6F1C0C4]
	(No symbol) [0x00007FF7A6F1CA63]
	(No symbol) [0x00007FF7A7005BDD]
	(No symbol) [0x00007FF7A7012042]
	(No symbol) [0x00007FF7A700AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A72642AA+262026]
	simdutf::get_active_implementation [0x00007FF7A70F4421+546385]
	simdutf::get_active_implementation [0x00007FF7A70ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7A70ED819+518729]
	simdutf::get_active_implementation [0x00007FF7A70DF3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]

2025-04-03 18:33:22,924 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 18:33:23,175 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:33:23,176 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7A718A545+20677]
	simdutf::get_active_implementation [0x00007FF7A70E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A73DD75A+1807418]
	(No symbol) [0x00007FF7A6F272AC]
	(No symbol) [0x00007FF7A6F2758B]
	(No symbol) [0x00007FF7A6F685A7]
	(No symbol) [0x00007FF7A6F4849F]
	(No symbol) [0x00007FF7A6F1D6ED]
	(No symbol) [0x00007FF7A6F65D61]
	(No symbol) [0x00007FF7A6F481C3]
	(No symbol) [0x00007FF7A6F1CC36]
	(No symbol) [0x00007FF7A6F1C0C4]
	(No symbol) [0x00007FF7A6F1CA63]
	(No symbol) [0x00007FF7A7005BDD]
	(No symbol) [0x00007FF7A7012042]
	(No symbol) [0x00007FF7A700AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A72642AA+262026]
	simdutf::get_active_implementation [0x00007FF7A70F4421+546385]
	simdutf::get_active_implementation [0x00007FF7A70ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7A70ED819+518729]
	simdutf::get_active_implementation [0x00007FF7A70DF3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7A718A545+20677]
	simdutf::get_active_implementation [0x00007FF7A70E6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A73DD75A+1807418]
	(No symbol) [0x00007FF7A6F272AC]
	(No symbol) [0x00007FF7A6F2758B]
	(No symbol) [0x00007FF7A6F685A7]
	(No symbol) [0x00007FF7A6F4849F]
	(No symbol) [0x00007FF7A6F1D6ED]
	(No symbol) [0x00007FF7A6F65D61]
	(No symbol) [0x00007FF7A6F481C3]
	(No symbol) [0x00007FF7A6F1CC36]
	(No symbol) [0x00007FF7A6F1C0C4]
	(No symbol) [0x00007FF7A6F1CA63]
	(No symbol) [0x00007FF7A7005BDD]
	(No symbol) [0x00007FF7A7012042]
	(No symbol) [0x00007FF7A700AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A72642AA+262026]
	simdutf::get_active_implementation [0x00007FF7A70F4421+546385]
	simdutf::get_active_implementation [0x00007FF7A70ED6D4+518404]
	simdutf::get_active_implementation [0x00007FF7A70ED819+518729]
	simdutf::get_active_implementation [0x00007FF7A70DF3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]

2025-04-03 18:33:23,183 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 18:33:23,184 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 18:33:24,339 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 18:33:24,340 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 18:33:24,343 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 18:33:24,346 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 18:33:24,349 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 18:33:24,385 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 18:33:24,393 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 18:33:24,394 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 18:33:24,394 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 18:33:25,718 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 18:33:25,822 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 18:33:32,617 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 18:33:32,618 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 18:33:32,684 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 18:33:32,686 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 18:33:32,751 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 18:33:32,754 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 18:33:32,754 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 18:33:32,755 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 18:33:33,748 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 18:36:12,131 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 18:36:12,132 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 18:36:12,133 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 18:36:12,133 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 18:36:12,137 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 18:36:12,139 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 18:36:12,139 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 18:36:12,140 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 18:36:12,141 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 18:36:12,141 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 18:36:12,142 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 18:36:12,144 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 18:36:12,144 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 18:36:12,144 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 18:36:12,144 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 18:36:12,146 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 18:36:12,146 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:36:12,146 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 18:36:12,146 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:36:12,146 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 18:36:12,146 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:36:12,147 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 18:36:12,147 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:36:12,147 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 18:36:12,147 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:36:12,147 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 18:36:12,147 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:36:12,147 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 18:36:12,147 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 18:36:12,148 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 18:36:12,148 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 18:36:12,148 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 18:36:14,132 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 18:36:14,132 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 18:36:14,135 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 18:36:14,136 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 18:36:14,140 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 18:36:14,141 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 18:36:14,142 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 18:36:14,142 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 18:36:14,142 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 18:36:14,145 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 18:36:14,145 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 18:36:14,158 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 18:36:14,159 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 18:36:14,160 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 18:36:14,160 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 18:36:14,161 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 18:36:14,161 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 18:36:14,161 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 18:36:14,162 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 18:36:14,162 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 18:36:14,162 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 18:36:14,163 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 18:36:14,163 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 18:36:14,163 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 18:36:14,164 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 18:36:14,164 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 18:36:14,164 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 18:36:14,164 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 18:36:14,165 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 18:36:14,165 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 18:36:14,165 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 18:36:14,166 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 18:36:14,166 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 18:36:14,166 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 18:36:14,166 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 18:36:14,166 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 18:36:14,169 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 18:36:14,170 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 18:36:14,170 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 18:36:14,171 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 18:36:14,171 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 18:36:14,172 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 18:36:14,172 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 18:36:14,172 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 18:36:14,172 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 18:36:14,172 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 18:36:14,173 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 18:36:14,173 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 18:36:14,174 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 18:36:14,174 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 18:36:14,174 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 18:36:14,174 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 18:36:14,175 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 18:36:16,979 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 18:36:16,979 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 18:36:16,980 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 18:36:16,980 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 18:36:16,980 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 18:36:16,980 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 18:36:17,575 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:36:17,577 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 18:36:17,578 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 18:36:17,579 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 18:36:17,579 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 18:36:24,150 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 18:36:25,025 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:36:25,026 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 18:36:25,026 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 18:36:26,240 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 18:36:26,241 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 18:36:26,244 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 18:36:26,247 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 18:36:26,250 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 18:36:26,292 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 18:36:26,297 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 18:36:26,298 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 18:36:26,298 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 18:36:27,717 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 18:36:27,807 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 18:36:34,481 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 18:36:34,481 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:36:34,482 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 18:36:34,482 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:36:34,482 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 18:36:34,483 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:36:34,483 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 18:36:34,483 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 18:36:34,484 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 18:36:34,484 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 18:36:34,484 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 18:36:36,405 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 18:36:36,405 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 18:36:36,407 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 18:36:36,407 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 18:36:36,412 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 18:36:36,413 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 18:36:36,414 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 18:36:36,414 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 18:36:36,415 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 18:36:36,418 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 18:36:36,418 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 18:36:36,433 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 18:36:36,433 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 18:36:36,434 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 18:36:36,434 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 18:36:36,435 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 18:36:36,435 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 18:36:36,435 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 18:36:36,435 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 18:36:36,435 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 18:36:36,435 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 18:36:36,436 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 18:36:36,436 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 18:36:36,436 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 18:36:36,436 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 18:36:36,436 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 18:36:36,436 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 18:36:36,436 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 18:36:36,436 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 18:36:36,438 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 18:36:36,438 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 18:36:36,438 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 18:36:36,438 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 18:36:36,438 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 18:36:36,438 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 18:36:36,438 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 18:36:36,439 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 18:36:36,439 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 18:36:36,439 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 18:36:36,441 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 18:36:36,442 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 18:36:36,442 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 18:36:36,442 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 18:36:36,442 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 18:36:36,443 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 18:36:36,443 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 18:36:36,443 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 18:36:36,443 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 18:36:36,443 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 18:36:36,444 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 18:36:36,444 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 18:36:36,444 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 18:36:36,444 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 18:36:36,444 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 18:36:36,444 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 18:36:36,445 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 18:36:39,980 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 18:36:39,982 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 18:36:39,982 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 18:36:39,983 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 18:36:39,983 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 18:36:39,983 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 18:36:40,530 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:36:40,531 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 18:36:40,532 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 18:36:40,532 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 18:36:40,532 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 18:36:44,514 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 18:36:45,429 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:36:45,431 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 18:36:45,431 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 18:36:45,432 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 18:36:45,465 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:267]
2025-04-03 18:36:45,466 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 18:36:45,466 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7101EA545+20677]
	simdutf::get_active_implementation [0x00007FF710146CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF71043D75A+1807418]
	(No symbol) [0x00007FF70FF872AC]
	(No symbol) [0x00007FF70FF8758B]
	(No symbol) [0x00007FF70FFC85A7]
	(No symbol) [0x00007FF70FFA849F]
	(No symbol) [0x00007FF70FF7D6ED]
	(No symbol) [0x00007FF70FFC5D61]
	(No symbol) [0x00007FF70FFA81C3]
	(No symbol) [0x00007FF70FF7CC36]
	(No symbol) [0x00007FF70FF7C0C4]
	(No symbol) [0x00007FF70FF7CA63]
	(No symbol) [0x00007FF710065BDD]
	(No symbol) [0x00007FF710072042]
	(No symbol) [0x00007FF71006AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7102C42AA+262026]
	simdutf::get_active_implementation [0x00007FF710154421+546385]
	simdutf::get_active_implementation [0x00007FF71014D6D4+518404]
	simdutf::get_active_implementation [0x00007FF71014D819+518729]
	simdutf::get_active_implementation [0x00007FF71013F3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7101EA545+20677]
	simdutf::get_active_implementation [0x00007FF710146CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF71043D75A+1807418]
	(No symbol) [0x00007FF70FF872AC]
	(No symbol) [0x00007FF70FF8758B]
	(No symbol) [0x00007FF70FFC85A7]
	(No symbol) [0x00007FF70FFA849F]
	(No symbol) [0x00007FF70FF7D6ED]
	(No symbol) [0x00007FF70FFC5D61]
	(No symbol) [0x00007FF70FFA81C3]
	(No symbol) [0x00007FF70FF7CC36]
	(No symbol) [0x00007FF70FF7C0C4]
	(No symbol) [0x00007FF70FF7CA63]
	(No symbol) [0x00007FF710065BDD]
	(No symbol) [0x00007FF710072042]
	(No symbol) [0x00007FF71006AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7102C42AA+262026]
	simdutf::get_active_implementation [0x00007FF710154421+546385]
	simdutf::get_active_implementation [0x00007FF71014D6D4+518404]
	simdutf::get_active_implementation [0x00007FF71014D819+518729]
	simdutf::get_active_implementation [0x00007FF71013F3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]

2025-04-03 18:36:45,481 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 18:36:46,580 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:36:46,581 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7101EA545+20677]
	simdutf::get_active_implementation [0x00007FF710146CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF71043D75A+1807418]
	(No symbol) [0x00007FF70FF872AC]
	(No symbol) [0x00007FF70FF8758B]
	(No symbol) [0x00007FF70FFC85A7]
	(No symbol) [0x00007FF70FFA849F]
	(No symbol) [0x00007FF70FF7D6ED]
	(No symbol) [0x00007FF70FFC5D61]
	(No symbol) [0x00007FF70FFA81C3]
	(No symbol) [0x00007FF70FF7CC36]
	(No symbol) [0x00007FF70FF7C0C4]
	(No symbol) [0x00007FF70FF7CA63]
	(No symbol) [0x00007FF710065BDD]
	(No symbol) [0x00007FF710072042]
	(No symbol) [0x00007FF71006AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7102C42AA+262026]
	simdutf::get_active_implementation [0x00007FF710154421+546385]
	simdutf::get_active_implementation [0x00007FF71014D6D4+518404]
	simdutf::get_active_implementation [0x00007FF71014D819+518729]
	simdutf::get_active_implementation [0x00007FF71013F3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7101EA545+20677]
	simdutf::get_active_implementation [0x00007FF710146CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF71043D75A+1807418]
	(No symbol) [0x00007FF70FF872AC]
	(No symbol) [0x00007FF70FF8758B]
	(No symbol) [0x00007FF70FFC85A7]
	(No symbol) [0x00007FF70FFA849F]
	(No symbol) [0x00007FF70FF7D6ED]
	(No symbol) [0x00007FF70FFC5D61]
	(No symbol) [0x00007FF70FFA81C3]
	(No symbol) [0x00007FF70FF7CC36]
	(No symbol) [0x00007FF70FF7C0C4]
	(No symbol) [0x00007FF70FF7CA63]
	(No symbol) [0x00007FF710065BDD]
	(No symbol) [0x00007FF710072042]
	(No symbol) [0x00007FF71006AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7102C42AA+262026]
	simdutf::get_active_implementation [0x00007FF710154421+546385]
	simdutf::get_active_implementation [0x00007FF71014D6D4+518404]
	simdutf::get_active_implementation [0x00007FF71014D819+518729]
	simdutf::get_active_implementation [0x00007FF71013F3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]

2025-04-03 18:36:46,586 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 18:36:46,587 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 18:36:47,738 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 18:36:47,738 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 18:36:47,742 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 18:36:47,745 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 18:36:47,746 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 18:36:47,788 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 18:36:47,797 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 18:36:47,799 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 18:36:47,799 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 18:36:49,417 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 18:36:49,486 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 18:36:56,176 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 18:36:56,177 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 18:36:56,234 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 18:36:56,235 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 18:36:56,256 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 18:36:56,257 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 18:36:56,258 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 18:36:56,258 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 18:36:57,259 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 18:40:31,514 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 18:40:31,518 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 18:40:31,520 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 18:40:31,520 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 18:40:31,524 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 18:40:31,525 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 18:40:31,526 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 18:40:31,528 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 18:40:31,530 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 18:40:31,530 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 18:40:31,531 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 18:40:31,534 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 18:40:31,536 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 18:40:31,537 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 18:40:31,538 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 18:40:31,539 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 18:40:31,539 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:40:31,540 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 18:40:31,540 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:40:31,540 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 18:40:31,541 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:40:31,541 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 18:40:31,542 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:40:31,543 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 18:40:31,544 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:40:31,544 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 18:40:31,545 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:40:31,545 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 18:40:31,545 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 18:40:31,546 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 18:40:31,546 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 18:40:31,547 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 18:40:33,604 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 18:40:33,604 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 18:40:33,607 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 18:40:33,608 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 18:40:33,643 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 18:40:33,643 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 18:40:33,646 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 18:40:33,647 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 18:40:33,647 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 18:40:33,676 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 18:40:33,676 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 18:40:33,711 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 18:40:33,721 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 18:40:33,722 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 18:40:33,724 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 18:40:33,725 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 18:40:33,726 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 18:40:33,726 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 18:40:33,727 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 18:40:33,727 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 18:40:33,727 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 18:40:33,728 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 18:40:33,728 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 18:40:33,729 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 18:40:33,729 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 18:40:33,729 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 18:40:33,730 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 18:40:33,730 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 18:40:33,730 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 18:40:33,731 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 18:40:33,731 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 18:40:33,732 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 18:40:33,732 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 18:40:33,732 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 18:40:33,733 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 18:40:33,733 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 18:40:33,737 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 18:40:33,737 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 18:40:33,738 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 18:40:33,739 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 18:40:33,739 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 18:40:33,740 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 18:40:33,740 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 18:40:33,741 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 18:40:33,742 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 18:40:33,742 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 18:40:33,743 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 18:40:33,743 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 18:40:33,744 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 18:40:33,745 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 18:40:33,745 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 18:40:33,746 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 18:40:33,746 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 18:40:38,833 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 18:40:38,833 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 18:40:38,833 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 18:40:38,834 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 18:40:38,834 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 18:40:38,834 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 18:40:38,835 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:40:38,837 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 18:40:38,837 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 18:40:38,837 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 18:40:38,838 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 18:40:42,904 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 18:40:44,013 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:40:44,014 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 18:40:44,014 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 18:40:46,243 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 18:40:46,244 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 18:40:46,248 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 18:40:46,251 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 18:40:46,273 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 18:40:46,333 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 18:40:46,337 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 18:40:46,338 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 18:40:46,338 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 18:40:48,655 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 18:40:48,721 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 18:40:55,448 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:535]
2025-04-03 18:40:55,449 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:40:55,449 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 18:40:55,449 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:40:55,449 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:535]
2025-04-03 18:40:55,450 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 18:40:55,450 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 18:40:55,450 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 18:40:55,451 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 18:40:55,451 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 18:40:55,451 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 18:40:57,288 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 18:40:57,288 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 18:40:57,292 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 18:40:57,293 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 18:40:57,298 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 18:40:57,298 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 18:40:57,298 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 18:40:57,298 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 18:40:57,299 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 18:40:57,380 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 18:40:57,381 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 18:40:57,394 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 18:40:57,395 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 18:40:57,397 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 18:40:57,397 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 18:40:57,398 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 18:40:57,398 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 18:40:57,398 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 18:40:57,399 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 18:40:57,399 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 18:40:57,399 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 18:40:57,400 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 18:40:57,400 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 18:40:57,400 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 18:40:57,400 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 18:40:57,400 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 18:40:57,401 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 18:40:57,401 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 18:40:57,401 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 18:40:57,401 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 18:40:57,402 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 18:40:57,402 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 18:40:57,402 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 18:40:57,402 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 18:40:57,403 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 18:40:57,403 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 18:40:57,403 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 18:40:57,403 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 18:40:57,404 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 18:40:57,407 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 18:40:57,407 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 18:40:57,407 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 18:40:57,407 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 18:40:57,409 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 18:40:57,409 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 18:40:57,409 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 18:40:57,409 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 18:40:57,409 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 18:40:57,410 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 18:40:57,410 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 18:40:57,410 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 18:40:57,411 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 18:40:57,411 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 18:40:57,411 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 18:40:57,411 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 18:40:57,411 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 18:41:00,227 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 18:41:00,228 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 18:41:00,228 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 18:41:00,228 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 18:41:00,229 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 18:41:00,229 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 18:41:00,230 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:41:00,230 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 18:41:00,231 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 18:41:00,231 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 18:41:00,232 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 18:41:04,431 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 18:41:05,299 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:41:05,301 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 18:41:05,302 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 18:41:05,303 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 18:41:05,327 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:267]
2025-04-03 18:41:05,327 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 18:41:05,327 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7861AA545+20677]
	simdutf::get_active_implementation [0x00007FF786106CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7863FD75A+1807418]
	(No symbol) [0x00007FF785F472AC]
	(No symbol) [0x00007FF785F4758B]
	(No symbol) [0x00007FF785F885A7]
	(No symbol) [0x00007FF785F6849F]
	(No symbol) [0x00007FF785F3D6ED]
	(No symbol) [0x00007FF785F85D61]
	(No symbol) [0x00007FF785F681C3]
	(No symbol) [0x00007FF785F3CC36]
	(No symbol) [0x00007FF785F3C0C4]
	(No symbol) [0x00007FF785F3CA63]
	(No symbol) [0x00007FF786025BDD]
	(No symbol) [0x00007FF786032042]
	(No symbol) [0x00007FF78602AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7862842AA+262026]
	simdutf::get_active_implementation [0x00007FF786114421+546385]
	simdutf::get_active_implementation [0x00007FF78610D6D4+518404]
	simdutf::get_active_implementation [0x00007FF78610D819+518729]
	simdutf::get_active_implementation [0x00007FF7860FF3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]
 [keywords_manager.py:213]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7861AA545+20677]
	simdutf::get_active_implementation [0x00007FF786106CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7863FD75A+1807418]
	(No symbol) [0x00007FF785F472AC]
	(No symbol) [0x00007FF785F4758B]
	(No symbol) [0x00007FF785F885A7]
	(No symbol) [0x00007FF785F6849F]
	(No symbol) [0x00007FF785F3D6ED]
	(No symbol) [0x00007FF785F85D61]
	(No symbol) [0x00007FF785F681C3]
	(No symbol) [0x00007FF785F3CC36]
	(No symbol) [0x00007FF785F3C0C4]
	(No symbol) [0x00007FF785F3CA63]
	(No symbol) [0x00007FF786025BDD]
	(No symbol) [0x00007FF786032042]
	(No symbol) [0x00007FF78602AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7862842AA+262026]
	simdutf::get_active_implementation [0x00007FF786114421+546385]
	simdutf::get_active_implementation [0x00007FF78610D6D4+518404]
	simdutf::get_active_implementation [0x00007FF78610D819+518729]
	simdutf::get_active_implementation [0x00007FF7860FF3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]

2025-04-03 18:41:05,436 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:214]
2025-04-03 18:41:06,178 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 18:41:06,178 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7861AA545+20677]
	simdutf::get_active_implementation [0x00007FF786106CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7863FD75A+1807418]
	(No symbol) [0x00007FF785F472AC]
	(No symbol) [0x00007FF785F4758B]
	(No symbol) [0x00007FF785F885A7]
	(No symbol) [0x00007FF785F6849F]
	(No symbol) [0x00007FF785F3D6ED]
	(No symbol) [0x00007FF785F85D61]
	(No symbol) [0x00007FF785F681C3]
	(No symbol) [0x00007FF785F3CC36]
	(No symbol) [0x00007FF785F3C0C4]
	(No symbol) [0x00007FF785F3CA63]
	(No symbol) [0x00007FF786025BDD]
	(No symbol) [0x00007FF786032042]
	(No symbol) [0x00007FF78602AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7862842AA+262026]
	simdutf::get_active_implementation [0x00007FF786114421+546385]
	simdutf::get_active_implementation [0x00007FF78610D6D4+518404]
	simdutf::get_active_implementation [0x00007FF78610D819+518729]
	simdutf::get_active_implementation [0x00007FF7860FF3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]
 [runner.py:351]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7861AA545+20677]
	simdutf::get_active_implementation [0x00007FF786106CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7863FD75A+1807418]
	(No symbol) [0x00007FF785F472AC]
	(No symbol) [0x00007FF785F4758B]
	(No symbol) [0x00007FF785F885A7]
	(No symbol) [0x00007FF785F6849F]
	(No symbol) [0x00007FF785F3D6ED]
	(No symbol) [0x00007FF785F85D61]
	(No symbol) [0x00007FF785F681C3]
	(No symbol) [0x00007FF785F3CC36]
	(No symbol) [0x00007FF785F3C0C4]
	(No symbol) [0x00007FF785F3CA63]
	(No symbol) [0x00007FF786025BDD]
	(No symbol) [0x00007FF786032042]
	(No symbol) [0x00007FF78602AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7862842AA+262026]
	simdutf::get_active_implementation [0x00007FF786114421+546385]
	simdutf::get_active_implementation [0x00007FF78610D6D4+518404]
	simdutf::get_active_implementation [0x00007FF78610D819+518729]
	simdutf::get_active_implementation [0x00007FF7860FF3C6+460278]
	BaseThreadInitThunk [0x00007FFB0C33E8D7+23]
	RtlUserThreadStart [0x00007FFB0D47BF6C+44]

2025-04-03 18:41:06,187 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 18:41:06,187 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 18:41:07,821 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 18:41:07,822 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 18:41:07,825 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 18:41:07,828 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 18:41:07,831 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 18:41:07,878 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 18:41:07,886 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 18:41:07,886 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 18:41:07,887 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 18:41:09,412 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 18:41:09,485 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 18:41:16,197 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 18:41:16,198 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 18:41:16,275 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 18:41:16,278 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 18:41:16,323 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 18:41:16,325 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 18:41:16,326 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 18:41:16,327 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 18:41:17,274 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 13:56:45,729 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 13:56:45,754 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 13:56:45,757 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 13:56:45,759 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 13:56:45,770 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 13:56:45,771 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 13:56:45,777 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 13:56:45,785 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 13:56:45,855 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 13:56:45,857 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 13:56:45,860 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 13:56:45,880 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 13:56:45,887 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 13:56:45,891 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 13:56:45,895 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 13:56:45,897 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 13:56:45,898 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:56:45,898 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 13:56:45,899 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:56:45,899 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 13:56:45,900 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:56:45,905 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 13:56:45,905 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:56:45,906 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 13:56:45,907 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:56:45,907 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 13:56:45,908 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:56:45,908 - WafLogger - DEBUG - The file path /workspace/test_scripts/chrome/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 13:56:45,909 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 13:56:45,909 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 13:56:45,910 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 13:56:45,910 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 13:56:45,925 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 13:56:45,927 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 13:56:45,930 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 13:56:45,930 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 13:56:45,939 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 13:56:45,940 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 13:56:45,946 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 13:56:45,947 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 13:56:45,947 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 13:56:46,000 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 13:56:46,001 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 13:56:46,250 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 13:56:46,325 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 13:56:46,393 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 13:56:46,394 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 13:56:46,395 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 13:56:46,396 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 13:56:46,397 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 13:56:46,398 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 13:56:46,398 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 13:56:46,399 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 13:56:46,399 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 13:56:46,400 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 13:56:46,401 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 13:56:46,401 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 13:56:46,402 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 13:56:46,403 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 13:56:46,403 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 13:56:46,404 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 13:56:46,405 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 13:56:46,405 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 13:56:46,406 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 13:56:46,407 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 13:56:46,408 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 13:56:46,408 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 13:56:46,409 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 13:56:46,424 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 13:56:46,425 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 13:56:46,426 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 13:56:46,428 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 13:56:46,429 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 13:56:46,429 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 13:56:46,430 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 13:56:46,431 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 13:56:46,432 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 13:56:46,432 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 13:56:46,433 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 13:56:46,434 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 13:56:46,434 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 13:56:46,435 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 13:56:46,435 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 13:56:46,436 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 13:56:46,436 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 13:56:52,967 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 13:56:52,969 - WafLogger - DEBUG - Populating the OS details in the PDF report as Linux [keywords_manager.py:52]
2025-04-03 13:56:52,970 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 13:56:52,971 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 13:56:52,972 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 13:56:52,973 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 13:56:52,974 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 13:56:52,975 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 13:56:52,975 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 13:56:52,976 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 13:56:52,977 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 13:56:57,210 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 13:56:57,973 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 13:56:57,975 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 13:56:57,976 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 13:57:06,847 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 13:57:06,848 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 13:57:06,849 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 13:57:06,857 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 13:57:06,860 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 13:57:06,970 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 13:57:07,006 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 13:57:07,007 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 13:57:07,008 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 13:57:53,688 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 13:57:53,928 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 13:57:54,021 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/1.xlsx. [runner.py:535]
2025-04-03 13:57:54,026 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:57:54,027 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 13:57:54,027 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:57:54,027 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 13:57:54,028 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:57:54,028 - WafLogger - DEBUG - The file path /workspace/test_scripts/edge/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 13:57:54,029 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 13:57:54,030 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 13:57:54,030 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 13:57:54,031 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 13:57:54,050 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 13:57:54,051 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 13:57:54,054 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 13:57:54,055 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 13:57:54,065 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 13:57:54,065 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 13:57:54,071 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 13:57:54,072 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 13:57:54,074 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 13:57:54,078 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 13:57:54,079 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 13:57:54,144 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 13:57:54,145 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 13:57:54,148 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 13:57:54,150 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 13:57:54,151 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 13:57:54,152 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 13:57:54,152 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 13:57:54,153 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 13:57:54,154 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 13:57:54,155 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 13:57:54,156 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 13:57:54,157 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 13:57:54,157 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 13:57:54,158 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 13:57:54,159 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 13:57:54,159 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 13:57:54,160 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 13:57:54,161 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 13:57:54,161 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 13:57:54,162 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 13:57:54,163 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 13:57:54,164 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 13:57:54,164 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 13:57:54,166 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 13:57:54,167 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 13:57:54,168 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 13:57:54,170 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 13:57:54,171 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 13:57:54,195 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 13:57:54,196 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 13:57:54,197 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 13:57:54,198 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 13:57:54,199 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 13:57:54,200 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 13:57:54,200 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 13:57:54,201 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 13:57:54,201 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 13:57:54,202 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 13:57:54,202 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 13:57:54,203 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 13:57:54,203 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 13:57:54,204 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 13:57:54,204 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 13:57:54,205 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 13:57:54,205 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 13:58:02,327 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 13:58:02,329 - WafLogger - DEBUG - Populating the OS details in the PDF report as Linux [keywords_manager.py:52]
2025-04-03 13:58:02,330 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 13:58:02,331 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 13:58:02,332 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 13:58:02,333 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 13:58:02,334 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 13:58:02,335 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 13:58:02,337 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 13:58:02,339 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 13:58:02,340 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 13:58:06,705 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 13:58:07,098 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 13:58:07,101 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 13:58:07,102 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 13:58:07,104 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 13:58:07,133 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:267]
2025-04-03 13:58:07,135 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 13:58:07,136 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55e56b66f68e <unknown>
#1 0x55e56b0cec36 <unknown>
#2 0x55e56b11ed05 <unknown>
#3 0x55e56b11f101 <unknown>
#4 0x55e56b167b24 <unknown>
#5 0x55e56b144afd <unknown>
#6 0x55e56b1656df <unknown>
#7 0x55e56b1448a3 <unknown>
#8 0x55e56b112111 <unknown>
#9 0x55e56b112da1 <unknown>
#10 0x55e56b640fc1 <unknown>
#11 0x55e56b64417e <unknown>
#12 0x55e56b643c3b <unknown>
#13 0x55e56b6445a5 <unknown>
#14 0x55e56b62ea0b <unknown>
#15 0x55e56b64496c <unknown>
#16 0x55e56b6175d5 <unknown>
#17 0x55e56b65feb8 <unknown>
#18 0x55e56b6600dc <unknown>
#19 0x55e56b66ea9c <unknown>
#20 0x7f7363e151f5 <unknown>
 [keywords_manager.py:213]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "/workspace/driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55e56b66f68e <unknown>
#1 0x55e56b0cec36 <unknown>
#2 0x55e56b11ed05 <unknown>
#3 0x55e56b11f101 <unknown>
#4 0x55e56b167b24 <unknown>
#5 0x55e56b144afd <unknown>
#6 0x55e56b1656df <unknown>
#7 0x55e56b1448a3 <unknown>
#8 0x55e56b112111 <unknown>
#9 0x55e56b112da1 <unknown>
#10 0x55e56b640fc1 <unknown>
#11 0x55e56b64417e <unknown>
#12 0x55e56b643c3b <unknown>
#13 0x55e56b6445a5 <unknown>
#14 0x55e56b62ea0b <unknown>
#15 0x55e56b64496c <unknown>
#16 0x55e56b6175d5 <unknown>
#17 0x55e56b65feb8 <unknown>
#18 0x55e56b6600dc <unknown>
#19 0x55e56b66ea9c <unknown>
#20 0x7f7363e151f5 <unknown>

2025-04-03 13:58:07,381 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:214]
2025-04-03 13:58:07,654 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 13:58:07,655 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55e56b66f68e <unknown>
#1 0x55e56b0cec36 <unknown>
#2 0x55e56b11ed05 <unknown>
#3 0x55e56b11f101 <unknown>
#4 0x55e56b167b24 <unknown>
#5 0x55e56b144afd <unknown>
#6 0x55e56b1656df <unknown>
#7 0x55e56b1448a3 <unknown>
#8 0x55e56b112111 <unknown>
#9 0x55e56b112da1 <unknown>
#10 0x55e56b640fc1 <unknown>
#11 0x55e56b64417e <unknown>
#12 0x55e56b643c3b <unknown>
#13 0x55e56b6445a5 <unknown>
#14 0x55e56b62ea0b <unknown>
#15 0x55e56b64496c <unknown>
#16 0x55e56b6175d5 <unknown>
#17 0x55e56b65feb8 <unknown>
#18 0x55e56b6600dc <unknown>
#19 0x55e56b66ea9c <unknown>
#20 0x7f7363e151f5 <unknown>
 [runner.py:351]
Traceback (most recent call last):
  File "/workspace/runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "/workspace/keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "/workspace/driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55e56b66f68e <unknown>
#1 0x55e56b0cec36 <unknown>
#2 0x55e56b11ed05 <unknown>
#3 0x55e56b11f101 <unknown>
#4 0x55e56b167b24 <unknown>
#5 0x55e56b144afd <unknown>
#6 0x55e56b1656df <unknown>
#7 0x55e56b1448a3 <unknown>
#8 0x55e56b112111 <unknown>
#9 0x55e56b112da1 <unknown>
#10 0x55e56b640fc1 <unknown>
#11 0x55e56b64417e <unknown>
#12 0x55e56b643c3b <unknown>
#13 0x55e56b6445a5 <unknown>
#14 0x55e56b62ea0b <unknown>
#15 0x55e56b64496c <unknown>
#16 0x55e56b6175d5 <unknown>
#17 0x55e56b65feb8 <unknown>
#18 0x55e56b6600dc <unknown>
#19 0x55e56b66ea9c <unknown>
#20 0x7f7363e151f5 <unknown>

2025-04-03 13:58:07,744 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 13:58:07,745 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 13:58:09,501 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 13:58:09,503 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 13:58:09,505 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 13:58:09,516 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 13:58:09,537 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 13:58:09,568 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 13:58:09,575 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 13:58:09,577 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 13:58:09,579 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 13:58:11,082 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 13:58:11,117 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 13:58:11,195 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 13:58:11,198 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 13:58:11,295 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 13:58:11,298 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 13:58:11,310 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 13:58:11,314 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 13:58:11,315 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 13:58:11,316 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 13:58:12,243 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 13:59:50,763 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 13:59:50,770 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 13:59:50,772 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 13:59:50,773 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 13:59:50,778 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 13:59:50,778 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 13:59:50,792 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 13:59:50,796 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 13:59:50,806 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 13:59:50,807 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 13:59:50,808 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 13:59:50,816 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 13:59:50,822 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 13:59:50,825 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 13:59:50,828 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 13:59:50,831 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 13:59:50,832 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:59:50,833 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 13:59:50,834 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:59:50,836 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 13:59:50,838 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:59:50,842 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 13:59:50,843 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:59:50,844 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 13:59:50,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:59:50,846 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 13:59:50,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 13:59:50,847 - WafLogger - DEBUG - The file path /workspace/test_scripts/chrome/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 13:59:50,848 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 13:59:50,848 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 13:59:50,849 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 13:59:50,849 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 13:59:50,854 - WafLogger - DEBUG - Starting the execution recording. [runner.py:553]
2025-04-03 13:59:50,859 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:381]
2025-04-03 13:59:50,859 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 13:59:50,862 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 13:59:50,864 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 13:59:50,865 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 13:59:50,874 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 13:59:50,875 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 13:59:50,880 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 13:59:50,880 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 13:59:50,881 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 13:59:50,896 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 13:59:50,897 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 13:59:50,899 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:388]
2025-04-03 13:59:50,899 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:394]
2025-04-03 13:59:51,705 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 13:59:52,151 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 13:59:52,305 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 13:59:52,306 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 13:59:52,307 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 13:59:52,307 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 13:59:52,308 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 13:59:52,308 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 13:59:52,309 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 13:59:52,309 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 13:59:52,310 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 13:59:52,310 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 13:59:52,311 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 13:59:52,311 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 13:59:52,312 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 13:59:52,312 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 13:59:52,313 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 13:59:52,313 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 13:59:52,314 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 13:59:52,315 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 13:59:52,315 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 13:59:52,316 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 13:59:52,317 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 13:59:52,318 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 13:59:52,319 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 13:59:52,335 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 13:59:52,337 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 13:59:52,337 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 13:59:52,338 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 13:59:52,339 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 13:59:52,339 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 13:59:52,340 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 13:59:52,340 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 13:59:52,341 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 13:59:52,341 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 13:59:52,342 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 13:59:52,342 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 13:59:52,343 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 13:59:52,344 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 13:59:52,346 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 13:59:52,347 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 13:59:52,347 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 13:59:52,418 - WafLogger - DEBUG - Starting recording. [runner.py:403]
2025-04-03 13:59:55,646 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x556918e52ffa <unknown>
#1 0x556918911970 <unknown>
#2 0x5569188f8120 <unknown>
#3 0x5569188f69bd <unknown>
#4 0x5569188f717f <unknown>
#5 0x556918925ca7 <unknown>
#6 0x55691891a881 <unknown>
#7 0x55691891a771 <unknown>
#8 0x5569188e8a5a <unknown>
#9 0x5569188e6ec4 <unknown>
#10 0x5569189c413f <unknown>
#11 0x556918989292 <unknown>
#12 0x5569189af70c <unknown>
#13 0x556918989063 <unknown>
#14 0x556918955328 <unknown>
#15 0x556918956491 <unknown>
#16 0x556918e1a42b <unknown>
#17 0x556918e1e2ec <unknown>
#18 0x556918e01a22 <unknown>
#19 0x556918e1ee64 <unknown>
#20 0x556918de5bef <unknown>
#21 0x556918e41558 <unknown>
#22 0x556918e41736 <unknown>
#23 0x556918e51e76 <unknown>
#24 0x7ff87b0c21f5 <unknown>
 [keywords_manager.py:75]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 115, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x556918e52ffa <unknown>
#1 0x556918911970 <unknown>
#2 0x5569188f8120 <unknown>
#3 0x5569188f69bd <unknown>
#4 0x5569188f717f <unknown>
#5 0x556918925ca7 <unknown>
#6 0x55691891a881 <unknown>
#7 0x55691891a771 <unknown>
#8 0x5569188e8a5a <unknown>
#9 0x5569188e6ec4 <unknown>
#10 0x5569189c413f <unknown>
#11 0x556918989292 <unknown>
#12 0x5569189af70c <unknown>
#13 0x556918989063 <unknown>
#14 0x556918955328 <unknown>
#15 0x556918956491 <unknown>
#16 0x556918e1a42b <unknown>
#17 0x556918e1e2ec <unknown>
#18 0x556918e01a22 <unknown>
#19 0x556918e1ee64 <unknown>
#20 0x556918de5bef <unknown>
#21 0x556918e41558 <unknown>
#22 0x556918e41736 <unknown>
#23 0x556918e51e76 <unknown>
#24 0x7ff87b0c21f5 <unknown>

2025-04-03 13:59:55,864 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:76]
2025-04-03 13:59:56,107 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 13:59:56,108 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x556918e52ffa <unknown>
#1 0x556918911970 <unknown>
#2 0x5569188f8120 <unknown>
#3 0x5569188f69bd <unknown>
#4 0x5569188f717f <unknown>
#5 0x556918925ca7 <unknown>
#6 0x55691891a881 <unknown>
#7 0x55691891a771 <unknown>
#8 0x5569188e8a5a <unknown>
#9 0x5569188e6ec4 <unknown>
#10 0x5569189c413f <unknown>
#11 0x556918989292 <unknown>
#12 0x5569189af70c <unknown>
#13 0x556918989063 <unknown>
#14 0x556918955328 <unknown>
#15 0x556918956491 <unknown>
#16 0x556918e1a42b <unknown>
#17 0x556918e1e2ec <unknown>
#18 0x556918e01a22 <unknown>
#19 0x556918e1ee64 <unknown>
#20 0x556918de5bef <unknown>
#21 0x556918e41558 <unknown>
#22 0x556918e41736 <unknown>
#23 0x556918e51e76 <unknown>
#24 0x7ff87b0c21f5 <unknown>
 [runner.py:207]
Traceback (most recent call last):
  File "/workspace/runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 115, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x556918e52ffa <unknown>
#1 0x556918911970 <unknown>
#2 0x5569188f8120 <unknown>
#3 0x5569188f69bd <unknown>
#4 0x5569188f717f <unknown>
#5 0x556918925ca7 <unknown>
#6 0x55691891a881 <unknown>
#7 0x55691891a771 <unknown>
#8 0x5569188e8a5a <unknown>
#9 0x5569188e6ec4 <unknown>
#10 0x5569189c413f <unknown>
#11 0x556918989292 <unknown>
#12 0x5569189af70c <unknown>
#13 0x556918989063 <unknown>
#14 0x556918955328 <unknown>
#15 0x556918956491 <unknown>
#16 0x556918e1a42b <unknown>
#17 0x556918e1e2ec <unknown>
#18 0x556918e01a22 <unknown>
#19 0x556918e1ee64 <unknown>
#20 0x556918de5bef <unknown>
#21 0x556918e41558 <unknown>
#22 0x556918e41736 <unknown>
#23 0x556918e51e76 <unknown>
#24 0x7ff87b0c21f5 <unknown>

2025-04-03 13:59:56,136 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 13:59:56,138 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 13:59:59,894 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 13:59:59,895 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 13:59:59,897 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 13:59:59,909 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 13:59:59,921 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:00:00,074 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:00:00,078 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:00:00,079 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:00:00,081 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:00:01,308 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:00:01,351 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:00:01,581 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 14:00:01,596 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/1.xlsx. [runner.py:535]
2025-04-03 14:00:01,597 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:01,598 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 14:00:01,598 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:01,598 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:00:01,599 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:01,599 - WafLogger - DEBUG - The file path /workspace/test_scripts/edge/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:00:01,600 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:00:01,600 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:00:01,600 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:00:01,601 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 14:00:01,604 - WafLogger - DEBUG - Starting the execution recording. [runner.py:571]
2025-04-03 14:00:01,608 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:381]
2025-04-03 14:00:01,608 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:00:01,609 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:388]
2025-04-03 14:00:01,609 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:394]
2025-04-03 14:00:01,609 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:00:01,612 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:00:01,614 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:00:01,615 - WafLogger - DEBUG - Starting recording. [runner.py:403]
2025-04-03 14:00:01,624 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:00:01,625 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:00:01,634 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:00:01,635 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:00:01,635 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:00:01,639 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:00:01,640 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:00:01,715 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:00:01,717 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:00:01,720 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:00:01,722 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:00:01,723 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:00:01,724 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:00:01,725 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:00:01,727 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:00:01,728 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:00:01,729 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:00:01,731 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:00:01,736 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:00:01,737 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:00:01,739 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:00:01,740 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:00:01,741 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:00:01,742 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:00:01,743 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:00:01,744 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:00:01,745 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:00:01,747 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:00:01,749 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:00:01,750 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:00:01,751 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:00:01,753 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 14:00:01,754 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 14:00:01,755 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 14:00:01,755 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:00:01,787 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:00:01,789 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:00:01,792 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:00:01,795 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:00:01,799 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:00:01,802 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:00:01,803 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:00:01,805 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:00:01,806 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:00:01,806 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 14:00:01,807 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:00:01,808 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:00:01,810 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:00:01,812 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:00:01,813 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:00:01,814 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 14:00:01,815 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 14:00:08,209 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x5577246b068e <unknown>
#1 0x55772410fc36 <unknown>
#2 0x5577240f7fe8 <unknown>
#3 0x5577240f6f3f <unknown>
#4 0x5577240f7174 <unknown>
#5 0x557724123244 <unknown>
#6 0x5577241182e5 <unknown>
#7 0x5577241181a7 <unknown>
#8 0x5577240e9f49 <unknown>
#9 0x5577240e8f5f <unknown>
#10 0x5577241b9a3f <unknown>
#11 0x557724185ad2 <unknown>
#12 0x5577241a66df <unknown>
#13 0x5577241858a3 <unknown>
#14 0x557724153111 <unknown>
#15 0x557724153da1 <unknown>
#16 0x557724681fc1 <unknown>
#17 0x55772468517e <unknown>
#18 0x557724684c3b <unknown>
#19 0x5577246855a5 <unknown>
#20 0x55772466fa0b <unknown>
#21 0x55772468596c <unknown>
#22 0x5577246585d5 <unknown>
#23 0x5577246a0eb8 <unknown>
#24 0x5577246a10dc <unknown>
#25 0x5577246afa9c <unknown>
#26 0x7fa2d71b71f5 <unknown>
 [keywords_manager.py:75]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 167, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x5577246b068e <unknown>
#1 0x55772410fc36 <unknown>
#2 0x5577240f7fe8 <unknown>
#3 0x5577240f6f3f <unknown>
#4 0x5577240f7174 <unknown>
#5 0x557724123244 <unknown>
#6 0x5577241182e5 <unknown>
#7 0x5577241181a7 <unknown>
#8 0x5577240e9f49 <unknown>
#9 0x5577240e8f5f <unknown>
#10 0x5577241b9a3f <unknown>
#11 0x557724185ad2 <unknown>
#12 0x5577241a66df <unknown>
#13 0x5577241858a3 <unknown>
#14 0x557724153111 <unknown>
#15 0x557724153da1 <unknown>
#16 0x557724681fc1 <unknown>
#17 0x55772468517e <unknown>
#18 0x557724684c3b <unknown>
#19 0x5577246855a5 <unknown>
#20 0x55772466fa0b <unknown>
#21 0x55772468596c <unknown>
#22 0x5577246585d5 <unknown>
#23 0x5577246a0eb8 <unknown>
#24 0x5577246a10dc <unknown>
#25 0x5577246afa9c <unknown>
#26 0x7fa2d71b71f5 <unknown>

2025-04-03 14:00:08,248 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:76]
2025-04-03 14:00:08,378 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:00:08,380 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x5577246b068e <unknown>
#1 0x55772410fc36 <unknown>
#2 0x5577240f7fe8 <unknown>
#3 0x5577240f6f3f <unknown>
#4 0x5577240f7174 <unknown>
#5 0x557724123244 <unknown>
#6 0x5577241182e5 <unknown>
#7 0x5577241181a7 <unknown>
#8 0x5577240e9f49 <unknown>
#9 0x5577240e8f5f <unknown>
#10 0x5577241b9a3f <unknown>
#11 0x557724185ad2 <unknown>
#12 0x5577241a66df <unknown>
#13 0x5577241858a3 <unknown>
#14 0x557724153111 <unknown>
#15 0x557724153da1 <unknown>
#16 0x557724681fc1 <unknown>
#17 0x55772468517e <unknown>
#18 0x557724684c3b <unknown>
#19 0x5577246855a5 <unknown>
#20 0x55772466fa0b <unknown>
#21 0x55772468596c <unknown>
#22 0x5577246585d5 <unknown>
#23 0x5577246a0eb8 <unknown>
#24 0x5577246a10dc <unknown>
#25 0x5577246afa9c <unknown>
#26 0x7fa2d71b71f5 <unknown>
 [runner.py:207]
Traceback (most recent call last):
  File "/workspace/runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 167, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x5577246b068e <unknown>
#1 0x55772410fc36 <unknown>
#2 0x5577240f7fe8 <unknown>
#3 0x5577240f6f3f <unknown>
#4 0x5577240f7174 <unknown>
#5 0x557724123244 <unknown>
#6 0x5577241182e5 <unknown>
#7 0x5577241181a7 <unknown>
#8 0x5577240e9f49 <unknown>
#9 0x5577240e8f5f <unknown>
#10 0x5577241b9a3f <unknown>
#11 0x557724185ad2 <unknown>
#12 0x5577241a66df <unknown>
#13 0x5577241858a3 <unknown>
#14 0x557724153111 <unknown>
#15 0x557724153da1 <unknown>
#16 0x557724681fc1 <unknown>
#17 0x55772468517e <unknown>
#18 0x557724684c3b <unknown>
#19 0x5577246855a5 <unknown>
#20 0x55772466fa0b <unknown>
#21 0x55772468596c <unknown>
#22 0x5577246585d5 <unknown>
#23 0x5577246a0eb8 <unknown>
#24 0x5577246a10dc <unknown>
#25 0x5577246afa9c <unknown>
#26 0x7fa2d71b71f5 <unknown>

2025-04-03 14:00:08,405 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:00:08,407 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:00:10,107 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:00:10,108 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:00:10,110 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:00:10,126 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:00:10,134 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:00:10,157 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:00:10,163 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:00:10,165 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:00:10,167 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:00:11,585 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:00:11,649 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:00:11,738 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 14:00:11,746 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 14:00:11,748 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 14:00:11,820 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 14:00:11,822 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 14:00:11,831 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 14:00:11,834 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 14:00:11,834 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 14:00:11,835 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 14:00:12,727 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 14:00:52,582 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 14:00:52,582 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 14:00:52,583 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 14:00:52,584 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 14:00:52,588 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 14:00:52,589 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 14:00:52,594 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:00:52,606 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:00:52,613 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:00:52,614 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 14:00:52,617 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 14:00:52,625 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 14:00:52,633 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 14:00:52,636 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 14:00:52,639 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 14:00:52,641 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 14:00:52,641 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:52,642 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 14:00:52,643 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:52,643 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 14:00:52,644 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:52,650 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 14:00:52,651 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:52,652 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 14:00:52,653 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:52,654 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:00:52,655 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:52,656 - WafLogger - DEBUG - The file path /workspace/test_scripts/chrome/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:00:52,657 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:00:52,658 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:00:52,660 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:00:52,661 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 14:00:52,671 - WafLogger - DEBUG - Starting the execution recording. [runner.py:553]
2025-04-03 14:00:52,678 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:00:52,678 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:381]
2025-04-03 14:00:52,684 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:00:52,687 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:00:52,688 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:00:52,691 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:388]
2025-04-03 14:00:52,693 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:394]
2025-04-03 14:00:52,701 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:00:52,702 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:00:52,712 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:00:52,713 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:00:52,714 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:00:52,717 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:00:52,718 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:00:52,798 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:00:52,818 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:00:52,833 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:00:52,836 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:00:52,837 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:00:52,837 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:00:52,838 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:00:52,839 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:00:52,839 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:00:52,840 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:00:52,841 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:00:52,842 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:00:52,843 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:00:52,844 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:00:52,844 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:00:52,846 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:00:52,846 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:00:52,847 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:00:52,848 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:00:52,849 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:00:52,852 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:00:52,853 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:00:52,854 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:00:52,855 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:00:52,855 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:00:52,875 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:00:52,876 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:00:52,877 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:00:52,877 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:00:52,878 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:00:52,879 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:00:52,879 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:00:52,880 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:00:52,881 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:00:52,882 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 14:00:52,882 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:00:52,883 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:00:52,884 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:00:52,885 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:00:52,885 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:00:52,886 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 14:00:52,886 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 14:00:52,887 - WafLogger - DEBUG - Starting recording. [runner.py:403]
2025-04-03 14:00:56,058 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x555e0b977ffa <unknown>
#1 0x555e0b436970 <unknown>
#2 0x555e0b41d120 <unknown>
#3 0x555e0b41b9bd <unknown>
#4 0x555e0b41c17f <unknown>
#5 0x555e0b44aca7 <unknown>
#6 0x555e0b43f881 <unknown>
#7 0x555e0b43f771 <unknown>
#8 0x555e0b40da5a <unknown>
#9 0x555e0b40bec4 <unknown>
#10 0x555e0b4e913f <unknown>
#11 0x555e0b4ae292 <unknown>
#12 0x555e0b4d470c <unknown>
#13 0x555e0b4ae063 <unknown>
#14 0x555e0b47a328 <unknown>
#15 0x555e0b47b491 <unknown>
#16 0x555e0b93f42b <unknown>
#17 0x555e0b9432ec <unknown>
#18 0x555e0b926a22 <unknown>
#19 0x555e0b943e64 <unknown>
#20 0x555e0b90abef <unknown>
#21 0x555e0b966558 <unknown>
#22 0x555e0b966736 <unknown>
#23 0x555e0b976e76 <unknown>
#24 0x7feaee5e41f5 <unknown>
 [keywords_manager.py:75]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 115, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x555e0b977ffa <unknown>
#1 0x555e0b436970 <unknown>
#2 0x555e0b41d120 <unknown>
#3 0x555e0b41b9bd <unknown>
#4 0x555e0b41c17f <unknown>
#5 0x555e0b44aca7 <unknown>
#6 0x555e0b43f881 <unknown>
#7 0x555e0b43f771 <unknown>
#8 0x555e0b40da5a <unknown>
#9 0x555e0b40bec4 <unknown>
#10 0x555e0b4e913f <unknown>
#11 0x555e0b4ae292 <unknown>
#12 0x555e0b4d470c <unknown>
#13 0x555e0b4ae063 <unknown>
#14 0x555e0b47a328 <unknown>
#15 0x555e0b47b491 <unknown>
#16 0x555e0b93f42b <unknown>
#17 0x555e0b9432ec <unknown>
#18 0x555e0b926a22 <unknown>
#19 0x555e0b943e64 <unknown>
#20 0x555e0b90abef <unknown>
#21 0x555e0b966558 <unknown>
#22 0x555e0b966736 <unknown>
#23 0x555e0b976e76 <unknown>
#24 0x7feaee5e41f5 <unknown>

2025-04-03 14:00:56,086 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:76]
2025-04-03 14:00:56,212 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:00:56,213 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x555e0b977ffa <unknown>
#1 0x555e0b436970 <unknown>
#2 0x555e0b41d120 <unknown>
#3 0x555e0b41b9bd <unknown>
#4 0x555e0b41c17f <unknown>
#5 0x555e0b44aca7 <unknown>
#6 0x555e0b43f881 <unknown>
#7 0x555e0b43f771 <unknown>
#8 0x555e0b40da5a <unknown>
#9 0x555e0b40bec4 <unknown>
#10 0x555e0b4e913f <unknown>
#11 0x555e0b4ae292 <unknown>
#12 0x555e0b4d470c <unknown>
#13 0x555e0b4ae063 <unknown>
#14 0x555e0b47a328 <unknown>
#15 0x555e0b47b491 <unknown>
#16 0x555e0b93f42b <unknown>
#17 0x555e0b9432ec <unknown>
#18 0x555e0b926a22 <unknown>
#19 0x555e0b943e64 <unknown>
#20 0x555e0b90abef <unknown>
#21 0x555e0b966558 <unknown>
#22 0x555e0b966736 <unknown>
#23 0x555e0b976e76 <unknown>
#24 0x7feaee5e41f5 <unknown>
 [runner.py:207]
Traceback (most recent call last):
  File "/workspace/runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 115, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x555e0b977ffa <unknown>
#1 0x555e0b436970 <unknown>
#2 0x555e0b41d120 <unknown>
#3 0x555e0b41b9bd <unknown>
#4 0x555e0b41c17f <unknown>
#5 0x555e0b44aca7 <unknown>
#6 0x555e0b43f881 <unknown>
#7 0x555e0b43f771 <unknown>
#8 0x555e0b40da5a <unknown>
#9 0x555e0b40bec4 <unknown>
#10 0x555e0b4e913f <unknown>
#11 0x555e0b4ae292 <unknown>
#12 0x555e0b4d470c <unknown>
#13 0x555e0b4ae063 <unknown>
#14 0x555e0b47a328 <unknown>
#15 0x555e0b47b491 <unknown>
#16 0x555e0b93f42b <unknown>
#17 0x555e0b9432ec <unknown>
#18 0x555e0b926a22 <unknown>
#19 0x555e0b943e64 <unknown>
#20 0x555e0b90abef <unknown>
#21 0x555e0b966558 <unknown>
#22 0x555e0b966736 <unknown>
#23 0x555e0b976e76 <unknown>
#24 0x7feaee5e41f5 <unknown>

2025-04-03 14:00:56,235 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:00:56,236 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:00:57,968 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:00:57,970 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:00:57,972 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:00:57,983 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:00:57,989 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:00:58,034 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:00:58,039 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:00:58,040 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:00:58,041 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:00:59,696 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:00:59,807 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:00:59,966 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 14:00:59,980 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/1.xlsx. [runner.py:535]
2025-04-03 14:00:59,981 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:59,981 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 14:00:59,982 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:59,982 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:00:59,983 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:00:59,983 - WafLogger - DEBUG - The file path /workspace/test_scripts/edge/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:00:59,984 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:00:59,984 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:00:59,985 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:00:59,985 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 14:00:59,990 - WafLogger - DEBUG - Starting the execution recording. [runner.py:571]
2025-04-03 14:00:59,994 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:381]
2025-04-03 14:00:59,995 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:00:59,995 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:388]
2025-04-03 14:00:59,996 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:394]
2025-04-03 14:00:59,996 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:00:59,999 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:01:00,000 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:01:00,001 - WafLogger - DEBUG - Starting recording. [runner.py:403]
2025-04-03 14:01:00,052 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:01:00,053 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:01:00,071 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:01:00,077 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:01:00,078 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:01:00,084 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:01:00,086 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:01:00,152 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:01:00,155 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:01:00,157 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:01:00,159 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:01:00,160 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:01:00,161 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:01:00,162 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:01:00,164 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:01:00,165 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:01:00,165 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:01:00,167 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:01:00,168 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:01:00,169 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:01:00,170 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:01:00,171 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:01:00,172 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:01:00,173 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:01:00,174 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:01:00,175 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:01:00,176 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:01:00,177 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:01:00,178 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:01:00,179 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:01:00,180 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:01:00,181 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 14:01:00,183 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 14:01:00,184 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 14:01:00,185 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:01:00,206 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:01:00,207 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:01:00,208 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:01:00,209 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:01:00,210 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:01:00,211 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:01:00,212 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:01:00,214 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:01:00,215 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:01:00,216 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 14:01:00,217 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:01:00,217 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:01:00,219 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:01:00,220 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:01:00,220 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:01:00,222 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 14:01:00,222 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 14:01:03,843 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x55d6bf63c68e <unknown>
#1 0x55d6bf09bc36 <unknown>
#2 0x55d6bf083fe8 <unknown>
#3 0x55d6bf082f3f <unknown>
#4 0x55d6bf083174 <unknown>
#5 0x55d6bf0af244 <unknown>
#6 0x55d6bf0a42e5 <unknown>
#7 0x55d6bf0a41a7 <unknown>
#8 0x55d6bf075f49 <unknown>
#9 0x55d6bf074f5f <unknown>
#10 0x55d6bf145a3f <unknown>
#11 0x55d6bf111ad2 <unknown>
#12 0x55d6bf1326df <unknown>
#13 0x55d6bf1118a3 <unknown>
#14 0x55d6bf0df111 <unknown>
#15 0x55d6bf0dfda1 <unknown>
#16 0x55d6bf60dfc1 <unknown>
#17 0x55d6bf61117e <unknown>
#18 0x55d6bf610c3b <unknown>
#19 0x55d6bf6115a5 <unknown>
#20 0x55d6bf5fba0b <unknown>
#21 0x55d6bf61196c <unknown>
#22 0x55d6bf5e45d5 <unknown>
#23 0x55d6bf62ceb8 <unknown>
#24 0x55d6bf62d0dc <unknown>
#25 0x55d6bf63ba9c <unknown>
#26 0x7f1ae3b8d1f5 <unknown>
 [keywords_manager.py:75]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 167, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x55d6bf63c68e <unknown>
#1 0x55d6bf09bc36 <unknown>
#2 0x55d6bf083fe8 <unknown>
#3 0x55d6bf082f3f <unknown>
#4 0x55d6bf083174 <unknown>
#5 0x55d6bf0af244 <unknown>
#6 0x55d6bf0a42e5 <unknown>
#7 0x55d6bf0a41a7 <unknown>
#8 0x55d6bf075f49 <unknown>
#9 0x55d6bf074f5f <unknown>
#10 0x55d6bf145a3f <unknown>
#11 0x55d6bf111ad2 <unknown>
#12 0x55d6bf1326df <unknown>
#13 0x55d6bf1118a3 <unknown>
#14 0x55d6bf0df111 <unknown>
#15 0x55d6bf0dfda1 <unknown>
#16 0x55d6bf60dfc1 <unknown>
#17 0x55d6bf61117e <unknown>
#18 0x55d6bf610c3b <unknown>
#19 0x55d6bf6115a5 <unknown>
#20 0x55d6bf5fba0b <unknown>
#21 0x55d6bf61196c <unknown>
#22 0x55d6bf5e45d5 <unknown>
#23 0x55d6bf62ceb8 <unknown>
#24 0x55d6bf62d0dc <unknown>
#25 0x55d6bf63ba9c <unknown>
#26 0x7f1ae3b8d1f5 <unknown>

2025-04-03 14:01:03,882 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:76]
2025-04-03 14:01:04,030 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:01:04,032 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x55d6bf63c68e <unknown>
#1 0x55d6bf09bc36 <unknown>
#2 0x55d6bf083fe8 <unknown>
#3 0x55d6bf082f3f <unknown>
#4 0x55d6bf083174 <unknown>
#5 0x55d6bf0af244 <unknown>
#6 0x55d6bf0a42e5 <unknown>
#7 0x55d6bf0a41a7 <unknown>
#8 0x55d6bf075f49 <unknown>
#9 0x55d6bf074f5f <unknown>
#10 0x55d6bf145a3f <unknown>
#11 0x55d6bf111ad2 <unknown>
#12 0x55d6bf1326df <unknown>
#13 0x55d6bf1118a3 <unknown>
#14 0x55d6bf0df111 <unknown>
#15 0x55d6bf0dfda1 <unknown>
#16 0x55d6bf60dfc1 <unknown>
#17 0x55d6bf61117e <unknown>
#18 0x55d6bf610c3b <unknown>
#19 0x55d6bf6115a5 <unknown>
#20 0x55d6bf5fba0b <unknown>
#21 0x55d6bf61196c <unknown>
#22 0x55d6bf5e45d5 <unknown>
#23 0x55d6bf62ceb8 <unknown>
#24 0x55d6bf62d0dc <unknown>
#25 0x55d6bf63ba9c <unknown>
#26 0x7f1ae3b8d1f5 <unknown>
 [runner.py:207]
Traceback (most recent call last):
  File "/workspace/runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 167, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x55d6bf63c68e <unknown>
#1 0x55d6bf09bc36 <unknown>
#2 0x55d6bf083fe8 <unknown>
#3 0x55d6bf082f3f <unknown>
#4 0x55d6bf083174 <unknown>
#5 0x55d6bf0af244 <unknown>
#6 0x55d6bf0a42e5 <unknown>
#7 0x55d6bf0a41a7 <unknown>
#8 0x55d6bf075f49 <unknown>
#9 0x55d6bf074f5f <unknown>
#10 0x55d6bf145a3f <unknown>
#11 0x55d6bf111ad2 <unknown>
#12 0x55d6bf1326df <unknown>
#13 0x55d6bf1118a3 <unknown>
#14 0x55d6bf0df111 <unknown>
#15 0x55d6bf0dfda1 <unknown>
#16 0x55d6bf60dfc1 <unknown>
#17 0x55d6bf61117e <unknown>
#18 0x55d6bf610c3b <unknown>
#19 0x55d6bf6115a5 <unknown>
#20 0x55d6bf5fba0b <unknown>
#21 0x55d6bf61196c <unknown>
#22 0x55d6bf5e45d5 <unknown>
#23 0x55d6bf62ceb8 <unknown>
#24 0x55d6bf62d0dc <unknown>
#25 0x55d6bf63ba9c <unknown>
#26 0x7f1ae3b8d1f5 <unknown>

2025-04-03 14:01:04,059 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:01:04,060 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:01:06,197 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:01:06,199 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:01:06,204 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:01:06,225 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:01:06,231 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:01:06,261 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:01:06,268 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:01:06,270 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:01:06,271 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:01:09,051 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:01:09,254 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:01:09,567 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 14:01:09,591 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 14:01:09,600 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 14:01:09,678 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 14:01:09,682 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 14:01:09,699 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 14:01:09,709 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 14:01:09,711 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 14:01:09,712 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 14:01:13,268 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 14:13:38,561 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 14:13:38,613 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 14:13:38,617 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 14:13:38,619 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 14:13:38,631 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 14:13:38,632 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 14:13:38,638 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:13:38,647 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:13:38,655 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:13:38,656 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 14:13:38,659 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 14:13:38,668 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 14:13:38,676 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 14:13:38,680 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 14:13:38,684 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 14:13:38,686 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 14:13:38,687 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:13:38,688 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 14:13:38,688 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:13:38,689 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 14:13:38,689 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:13:38,693 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 14:13:38,693 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:13:38,694 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 14:13:38,694 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:13:38,695 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:13:38,695 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:13:38,696 - WafLogger - DEBUG - The file path /workspace/test_scripts/chrome/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:13:38,696 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:13:38,697 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:13:38,698 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:13:38,698 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 14:13:38,703 - WafLogger - DEBUG - Starting the execution recording. [runner.py:553]
2025-04-03 14:13:38,708 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:381]
2025-04-03 14:13:38,708 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:13:38,711 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:13:38,713 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:13:38,714 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:13:38,723 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:13:38,723 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:13:38,728 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:13:38,729 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:13:38,729 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:13:38,742 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:388]
2025-04-03 14:13:38,742 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:13:38,743 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:394]
2025-04-03 14:13:38,743 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:13:39,563 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:13:39,800 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:13:40,267 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:13:40,270 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:13:40,273 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:13:40,275 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:13:40,277 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:13:40,279 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:13:40,280 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:13:40,281 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:13:40,283 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:13:40,284 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:13:40,285 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:13:40,285 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:13:40,286 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:13:40,287 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:13:40,287 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:13:40,288 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:13:40,289 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:13:40,289 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:13:40,291 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:13:40,291 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:13:40,292 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:13:40,293 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:13:40,294 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:13:40,314 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:13:40,315 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:13:40,316 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:13:40,317 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:13:40,317 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:13:40,318 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:13:40,318 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:13:40,319 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:13:40,319 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:13:40,320 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 14:13:40,320 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:13:40,321 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:13:40,322 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:13:40,323 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:13:40,324 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:13:40,324 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 14:13:40,327 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 14:13:40,460 - WafLogger - DEBUG - Starting recording. [runner.py:403]
2025-04-03 14:13:45,824 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x563539ad0ffa <unknown>
#1 0x56353958f970 <unknown>
#2 0x563539576120 <unknown>
#3 0x5635395749bd <unknown>
#4 0x56353957517f <unknown>
#5 0x5635395a3ca7 <unknown>
#6 0x563539598881 <unknown>
#7 0x563539598771 <unknown>
#8 0x563539566a5a <unknown>
#9 0x563539564ec4 <unknown>
#10 0x56353964213f <unknown>
#11 0x563539607292 <unknown>
#12 0x56353962d70c <unknown>
#13 0x563539607063 <unknown>
#14 0x5635395d3328 <unknown>
#15 0x5635395d4491 <unknown>
#16 0x563539a9842b <unknown>
#17 0x563539a9c2ec <unknown>
#18 0x563539a7fa22 <unknown>
#19 0x563539a9ce64 <unknown>
#20 0x563539a63bef <unknown>
#21 0x563539abf558 <unknown>
#22 0x563539abf736 <unknown>
#23 0x563539acfe76 <unknown>
#24 0x7f3f5d3531f5 <unknown>
 [keywords_manager.py:75]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 115, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x563539ad0ffa <unknown>
#1 0x56353958f970 <unknown>
#2 0x563539576120 <unknown>
#3 0x5635395749bd <unknown>
#4 0x56353957517f <unknown>
#5 0x5635395a3ca7 <unknown>
#6 0x563539598881 <unknown>
#7 0x563539598771 <unknown>
#8 0x563539566a5a <unknown>
#9 0x563539564ec4 <unknown>
#10 0x56353964213f <unknown>
#11 0x563539607292 <unknown>
#12 0x56353962d70c <unknown>
#13 0x563539607063 <unknown>
#14 0x5635395d3328 <unknown>
#15 0x5635395d4491 <unknown>
#16 0x563539a9842b <unknown>
#17 0x563539a9c2ec <unknown>
#18 0x563539a7fa22 <unknown>
#19 0x563539a9ce64 <unknown>
#20 0x563539a63bef <unknown>
#21 0x563539abf558 <unknown>
#22 0x563539abf736 <unknown>
#23 0x563539acfe76 <unknown>
#24 0x7f3f5d3531f5 <unknown>

2025-04-03 14:13:46,041 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:76]
2025-04-03 14:13:46,255 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:13:46,257 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x563539ad0ffa <unknown>
#1 0x56353958f970 <unknown>
#2 0x563539576120 <unknown>
#3 0x5635395749bd <unknown>
#4 0x56353957517f <unknown>
#5 0x5635395a3ca7 <unknown>
#6 0x563539598881 <unknown>
#7 0x563539598771 <unknown>
#8 0x563539566a5a <unknown>
#9 0x563539564ec4 <unknown>
#10 0x56353964213f <unknown>
#11 0x563539607292 <unknown>
#12 0x56353962d70c <unknown>
#13 0x563539607063 <unknown>
#14 0x5635395d3328 <unknown>
#15 0x5635395d4491 <unknown>
#16 0x563539a9842b <unknown>
#17 0x563539a9c2ec <unknown>
#18 0x563539a7fa22 <unknown>
#19 0x563539a9ce64 <unknown>
#20 0x563539a63bef <unknown>
#21 0x563539abf558 <unknown>
#22 0x563539abf736 <unknown>
#23 0x563539acfe76 <unknown>
#24 0x7f3f5d3531f5 <unknown>
 [runner.py:207]
Traceback (most recent call last):
  File "/workspace/runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 115, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: chrome=134.0.6998.165)
Stacktrace:
#0 0x563539ad0ffa <unknown>
#1 0x56353958f970 <unknown>
#2 0x563539576120 <unknown>
#3 0x5635395749bd <unknown>
#4 0x56353957517f <unknown>
#5 0x5635395a3ca7 <unknown>
#6 0x563539598881 <unknown>
#7 0x563539598771 <unknown>
#8 0x563539566a5a <unknown>
#9 0x563539564ec4 <unknown>
#10 0x56353964213f <unknown>
#11 0x563539607292 <unknown>
#12 0x56353962d70c <unknown>
#13 0x563539607063 <unknown>
#14 0x5635395d3328 <unknown>
#15 0x5635395d4491 <unknown>
#16 0x563539a9842b <unknown>
#17 0x563539a9c2ec <unknown>
#18 0x563539a7fa22 <unknown>
#19 0x563539a9ce64 <unknown>
#20 0x563539a63bef <unknown>
#21 0x563539abf558 <unknown>
#22 0x563539abf736 <unknown>
#23 0x563539acfe76 <unknown>
#24 0x7f3f5d3531f5 <unknown>

2025-04-03 14:13:46,279 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:13:46,280 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:13:49,657 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:13:49,658 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:13:49,660 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:13:49,672 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:13:49,680 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:13:49,817 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:13:49,822 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:13:49,823 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:13:49,825 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:13:51,650 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:13:51,696 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:13:52,064 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 14:13:52,109 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/1.xlsx. [runner.py:535]
2025-04-03 14:13:52,110 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:13:52,111 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 14:13:52,111 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:13:52,112 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:13:52,113 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:13:52,114 - WafLogger - DEBUG - The file path /workspace/test_scripts/edge/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:13:52,115 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:13:52,116 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:13:52,116 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:13:52,117 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 14:13:52,121 - WafLogger - DEBUG - Starting the execution recording. [runner.py:571]
2025-04-03 14:13:52,128 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:381]
2025-04-03 14:13:52,128 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:13:52,129 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:388]
2025-04-03 14:13:52,130 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:394]
2025-04-03 14:13:52,130 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:13:52,133 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:13:52,135 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:13:52,137 - WafLogger - DEBUG - Starting recording. [runner.py:403]
2025-04-03 14:13:52,147 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:13:52,148 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:13:52,161 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:13:52,162 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:13:52,163 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:13:52,169 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:13:52,170 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:13:52,240 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:13:52,242 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:13:52,244 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:13:52,246 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:13:52,248 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:13:52,250 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:13:52,251 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:13:52,253 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:13:52,254 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:13:52,255 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:13:52,257 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:13:52,259 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:13:52,261 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:13:52,262 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:13:52,263 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:13:52,264 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:13:52,266 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:13:52,267 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:13:52,268 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:13:52,270 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:13:52,272 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:13:52,274 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:13:52,275 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:13:52,276 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:13:52,277 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 14:13:52,278 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 14:13:52,279 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 14:13:52,281 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:13:52,310 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:13:52,311 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:13:52,312 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:13:52,313 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:13:52,316 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:13:52,318 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:13:52,319 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:13:52,321 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:13:52,322 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:13:52,323 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 14:13:52,324 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:13:52,325 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:13:52,326 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:13:52,327 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:13:52,328 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:13:52,329 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 14:13:52,330 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 14:13:56,379 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x55acbf76768e <unknown>
#1 0x55acbf1c6c36 <unknown>
#2 0x55acbf1aefe8 <unknown>
#3 0x55acbf1adf3f <unknown>
#4 0x55acbf1ae174 <unknown>
#5 0x55acbf1da244 <unknown>
#6 0x55acbf1cf2e5 <unknown>
#7 0x55acbf1cf1a7 <unknown>
#8 0x55acbf1a0f49 <unknown>
#9 0x55acbf19ff5f <unknown>
#10 0x55acbf270a3f <unknown>
#11 0x55acbf23cad2 <unknown>
#12 0x55acbf25d6df <unknown>
#13 0x55acbf23c8a3 <unknown>
#14 0x55acbf20a111 <unknown>
#15 0x55acbf20ada1 <unknown>
#16 0x55acbf738fc1 <unknown>
#17 0x55acbf73c17e <unknown>
#18 0x55acbf73bc3b <unknown>
#19 0x55acbf73c5a5 <unknown>
#20 0x55acbf726a0b <unknown>
#21 0x55acbf73c96c <unknown>
#22 0x55acbf70f5d5 <unknown>
#23 0x55acbf757eb8 <unknown>
#24 0x55acbf7580dc <unknown>
#25 0x55acbf766a9c <unknown>
#26 0x7fc4abde61f5 <unknown>
 [keywords_manager.py:75]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 167, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x55acbf76768e <unknown>
#1 0x55acbf1c6c36 <unknown>
#2 0x55acbf1aefe8 <unknown>
#3 0x55acbf1adf3f <unknown>
#4 0x55acbf1ae174 <unknown>
#5 0x55acbf1da244 <unknown>
#6 0x55acbf1cf2e5 <unknown>
#7 0x55acbf1cf1a7 <unknown>
#8 0x55acbf1a0f49 <unknown>
#9 0x55acbf19ff5f <unknown>
#10 0x55acbf270a3f <unknown>
#11 0x55acbf23cad2 <unknown>
#12 0x55acbf25d6df <unknown>
#13 0x55acbf23c8a3 <unknown>
#14 0x55acbf20a111 <unknown>
#15 0x55acbf20ada1 <unknown>
#16 0x55acbf738fc1 <unknown>
#17 0x55acbf73c17e <unknown>
#18 0x55acbf73bc3b <unknown>
#19 0x55acbf73c5a5 <unknown>
#20 0x55acbf726a0b <unknown>
#21 0x55acbf73c96c <unknown>
#22 0x55acbf70f5d5 <unknown>
#23 0x55acbf757eb8 <unknown>
#24 0x55acbf7580dc <unknown>
#25 0x55acbf766a9c <unknown>
#26 0x7fc4abde61f5 <unknown>

2025-04-03 14:13:56,428 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:76]
2025-04-03 14:13:56,557 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:13:56,558 - WafLogger - ERROR - An error occurred: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x55acbf76768e <unknown>
#1 0x55acbf1c6c36 <unknown>
#2 0x55acbf1aefe8 <unknown>
#3 0x55acbf1adf3f <unknown>
#4 0x55acbf1ae174 <unknown>
#5 0x55acbf1da244 <unknown>
#6 0x55acbf1cf2e5 <unknown>
#7 0x55acbf1cf1a7 <unknown>
#8 0x55acbf1a0f49 <unknown>
#9 0x55acbf19ff5f <unknown>
#10 0x55acbf270a3f <unknown>
#11 0x55acbf23cad2 <unknown>
#12 0x55acbf25d6df <unknown>
#13 0x55acbf23c8a3 <unknown>
#14 0x55acbf20a111 <unknown>
#15 0x55acbf20ada1 <unknown>
#16 0x55acbf738fc1 <unknown>
#17 0x55acbf73c17e <unknown>
#18 0x55acbf73bc3b <unknown>
#19 0x55acbf73c5a5 <unknown>
#20 0x55acbf726a0b <unknown>
#21 0x55acbf73c96c <unknown>
#22 0x55acbf70f5d5 <unknown>
#23 0x55acbf757eb8 <unknown>
#24 0x55acbf7580dc <unknown>
#25 0x55acbf766a9c <unknown>
#26 0x7fc4abde61f5 <unknown>
 [runner.py:207]
Traceback (most recent call last):
  File "/workspace/runner.py", line 205, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "/workspace/keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "/workspace/driver_manager.py", line 167, in launch_browser
    self.driver.maximize_window()
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 500, in maximize_window
    self.execute(command, None)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed
from unknown command: 'Runtime.evaluate' wasn't found
  (Session info: MicrosoftEdge=134.0.3124.95)
Stacktrace:
#0 0x55acbf76768e <unknown>
#1 0x55acbf1c6c36 <unknown>
#2 0x55acbf1aefe8 <unknown>
#3 0x55acbf1adf3f <unknown>
#4 0x55acbf1ae174 <unknown>
#5 0x55acbf1da244 <unknown>
#6 0x55acbf1cf2e5 <unknown>
#7 0x55acbf1cf1a7 <unknown>
#8 0x55acbf1a0f49 <unknown>
#9 0x55acbf19ff5f <unknown>
#10 0x55acbf270a3f <unknown>
#11 0x55acbf23cad2 <unknown>
#12 0x55acbf25d6df <unknown>
#13 0x55acbf23c8a3 <unknown>
#14 0x55acbf20a111 <unknown>
#15 0x55acbf20ada1 <unknown>
#16 0x55acbf738fc1 <unknown>
#17 0x55acbf73c17e <unknown>
#18 0x55acbf73bc3b <unknown>
#19 0x55acbf73c5a5 <unknown>
#20 0x55acbf726a0b <unknown>
#21 0x55acbf73c96c <unknown>
#22 0x55acbf70f5d5 <unknown>
#23 0x55acbf757eb8 <unknown>
#24 0x55acbf7580dc <unknown>
#25 0x55acbf766a9c <unknown>
#26 0x7fc4abde61f5 <unknown>

2025-04-03 14:13:56,582 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:13:56,583 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:13:58,079 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:13:58,081 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:13:58,084 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:13:58,096 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:13:58,105 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:13:58,135 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:13:58,140 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:13:58,142 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:13:58,143 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:13:59,587 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:13:59,632 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:13:59,782 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 14:13:59,793 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 14:13:59,796 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 14:13:59,852 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 14:13:59,854 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 14:13:59,870 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 14:13:59,874 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 14:13:59,874 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 14:13:59,875 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 14:14:00,776 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 14:15:23,348 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 14:15:23,348 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 14:15:23,349 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 14:15:23,350 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 14:15:23,354 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 14:15:23,355 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 14:15:23,361 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:15:23,372 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:15:23,384 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:15:23,385 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 14:15:23,388 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 14:15:23,400 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 14:15:23,406 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 14:15:23,412 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 14:15:23,417 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 14:15:23,419 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 14:15:23,420 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:15:23,421 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 14:15:23,421 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:15:23,422 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 14:15:23,423 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:15:23,428 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 14:15:23,429 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:15:23,431 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 14:15:23,432 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:15:23,432 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:15:23,433 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:15:23,434 - WafLogger - DEBUG - The file path /workspace/test_scripts/chrome/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:15:23,434 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:15:23,435 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:15:23,438 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:15:23,439 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 14:15:23,460 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:15:23,464 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:15:23,468 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:15:23,469 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:15:23,524 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:15:23,526 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:15:23,547 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:15:23,549 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:15:23,549 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:15:23,554 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:15:23,555 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:15:23,634 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:15:23,652 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:15:23,665 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:15:23,669 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:15:23,670 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:15:23,671 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:15:23,672 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:15:23,672 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:15:23,673 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:15:23,673 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:15:23,674 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:15:23,675 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:15:23,676 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:15:23,677 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:15:23,677 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:15:23,678 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:15:23,679 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:15:23,680 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:15:23,681 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:15:23,683 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:15:23,685 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:15:23,686 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:15:23,687 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:15:23,688 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:15:23,688 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:15:23,718 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:15:23,719 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:15:23,720 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:15:23,720 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:15:23,721 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:15:23,722 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:15:23,723 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:15:23,724 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:15:23,725 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:15:23,725 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 14:15:23,726 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:15:23,728 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:15:23,729 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:15:23,731 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:15:23,732 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:15:23,733 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 14:15:23,733 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 14:15:27,791 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 14:15:27,792 - WafLogger - DEBUG - Populating the OS details in the PDF report as Linux [keywords_manager.py:52]
2025-04-03 14:15:27,793 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 14:15:27,793 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 14:15:27,794 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 14:15:27,795 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 14:15:27,795 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:15:27,796 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 14:15:27,797 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 14:15:27,798 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 14:15:27,798 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 14:15:33,368 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 14:15:33,723 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:15:33,725 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:15:33,727 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:15:34,740 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:15:34,742 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:15:34,744 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:15:34,755 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:15:34,761 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:15:34,799 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:15:34,802 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:15:34,802 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:15:34,803 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:15:35,722 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:15:35,751 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:15:35,901 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/1.xlsx. [runner.py:535]
2025-04-03 14:15:35,902 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:15:35,902 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 14:15:35,902 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:15:35,903 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:15:35,903 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:15:35,903 - WafLogger - DEBUG - The file path /workspace/test_scripts/edge/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:15:35,904 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:15:35,905 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:15:35,905 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:15:35,905 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 14:15:35,914 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:15:35,915 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:15:35,917 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:15:35,917 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:15:35,927 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:15:35,928 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:15:35,933 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:15:35,933 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:15:35,934 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:15:35,936 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:15:35,937 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:15:35,977 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:15:35,979 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:15:35,980 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:15:35,981 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:15:35,982 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:15:35,983 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:15:35,985 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:15:35,987 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:15:36,006 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:15:36,007 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:15:36,007 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:15:36,008 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:15:36,008 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:15:36,009 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:15:36,009 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:15:36,010 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:15:36,010 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:15:36,011 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:15:36,011 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:15:36,012 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:15:36,013 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:15:36,013 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:15:36,014 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:15:36,015 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:15:36,016 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 14:15:36,018 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 14:15:36,018 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 14:15:36,019 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:15:36,040 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:15:36,041 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:15:36,042 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:15:36,042 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:15:36,043 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:15:36,044 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:15:36,045 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:15:36,046 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:15:36,046 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:15:36,048 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 14:15:36,049 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:15:36,050 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:15:36,051 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:15:36,051 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:15:36,052 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:15:36,052 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 14:15:36,053 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 14:15:38,118 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 14:15:38,119 - WafLogger - DEBUG - Populating the OS details in the PDF report as Linux [keywords_manager.py:52]
2025-04-03 14:15:38,120 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 14:15:38,120 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 14:15:38,121 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 14:15:38,121 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 14:15:38,122 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:15:38,123 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 14:15:38,123 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 14:15:38,124 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 14:15:38,124 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 14:15:41,396 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 14:15:41,715 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:15:41,717 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 14:15:41,718 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 14:15:41,720 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 14:15:41,744 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:267]
2025-04-03 14:15:41,745 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 14:15:41,746 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55b885d8568e <unknown>
#1 0x55b8857e4c36 <unknown>
#2 0x55b885834d05 <unknown>
#3 0x55b885835101 <unknown>
#4 0x55b88587db24 <unknown>
#5 0x55b88585aafd <unknown>
#6 0x55b88587b6df <unknown>
#7 0x55b88585a8a3 <unknown>
#8 0x55b885828111 <unknown>
#9 0x55b885828da1 <unknown>
#10 0x55b885d56fc1 <unknown>
#11 0x55b885d5a17e <unknown>
#12 0x55b885d59c3b <unknown>
#13 0x55b885d5a5a5 <unknown>
#14 0x55b885d44a0b <unknown>
#15 0x55b885d5a96c <unknown>
#16 0x55b885d2d5d5 <unknown>
#17 0x55b885d75eb8 <unknown>
#18 0x55b885d760dc <unknown>
#19 0x55b885d84a9c <unknown>
#20 0x7f94fff981f5 <unknown>
 [keywords_manager.py:213]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "/workspace/driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55b885d8568e <unknown>
#1 0x55b8857e4c36 <unknown>
#2 0x55b885834d05 <unknown>
#3 0x55b885835101 <unknown>
#4 0x55b88587db24 <unknown>
#5 0x55b88585aafd <unknown>
#6 0x55b88587b6df <unknown>
#7 0x55b88585a8a3 <unknown>
#8 0x55b885828111 <unknown>
#9 0x55b885828da1 <unknown>
#10 0x55b885d56fc1 <unknown>
#11 0x55b885d5a17e <unknown>
#12 0x55b885d59c3b <unknown>
#13 0x55b885d5a5a5 <unknown>
#14 0x55b885d44a0b <unknown>
#15 0x55b885d5a96c <unknown>
#16 0x55b885d2d5d5 <unknown>
#17 0x55b885d75eb8 <unknown>
#18 0x55b885d760dc <unknown>
#19 0x55b885d84a9c <unknown>
#20 0x7f94fff981f5 <unknown>

2025-04-03 14:15:41,806 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:214]
2025-04-03 14:15:42,035 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:15:42,037 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55b885d8568e <unknown>
#1 0x55b8857e4c36 <unknown>
#2 0x55b885834d05 <unknown>
#3 0x55b885835101 <unknown>
#4 0x55b88587db24 <unknown>
#5 0x55b88585aafd <unknown>
#6 0x55b88587b6df <unknown>
#7 0x55b88585a8a3 <unknown>
#8 0x55b885828111 <unknown>
#9 0x55b885828da1 <unknown>
#10 0x55b885d56fc1 <unknown>
#11 0x55b885d5a17e <unknown>
#12 0x55b885d59c3b <unknown>
#13 0x55b885d5a5a5 <unknown>
#14 0x55b885d44a0b <unknown>
#15 0x55b885d5a96c <unknown>
#16 0x55b885d2d5d5 <unknown>
#17 0x55b885d75eb8 <unknown>
#18 0x55b885d760dc <unknown>
#19 0x55b885d84a9c <unknown>
#20 0x7f94fff981f5 <unknown>
 [runner.py:351]
Traceback (most recent call last):
  File "/workspace/runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "/workspace/keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "/workspace/driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/driver_functions.py", line 264, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55b885d8568e <unknown>
#1 0x55b8857e4c36 <unknown>
#2 0x55b885834d05 <unknown>
#3 0x55b885835101 <unknown>
#4 0x55b88587db24 <unknown>
#5 0x55b88585aafd <unknown>
#6 0x55b88587b6df <unknown>
#7 0x55b88585a8a3 <unknown>
#8 0x55b885828111 <unknown>
#9 0x55b885828da1 <unknown>
#10 0x55b885d56fc1 <unknown>
#11 0x55b885d5a17e <unknown>
#12 0x55b885d59c3b <unknown>
#13 0x55b885d5a5a5 <unknown>
#14 0x55b885d44a0b <unknown>
#15 0x55b885d5a96c <unknown>
#16 0x55b885d2d5d5 <unknown>
#17 0x55b885d75eb8 <unknown>
#18 0x55b885d760dc <unknown>
#19 0x55b885d84a9c <unknown>
#20 0x7f94fff981f5 <unknown>

2025-04-03 14:15:42,059 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:15:42,059 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:15:43,034 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:15:43,035 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:15:43,036 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:15:43,042 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:15:43,083 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:15:43,114 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:15:43,124 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:15:43,125 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:15:43,126 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:15:44,171 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:15:44,195 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:15:44,272 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 14:15:44,273 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 14:15:44,315 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 14:15:44,318 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 14:15:44,328 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 14:15:44,332 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 14:15:44,332 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 14:15:44,333 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 14:15:45,118 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 14:23:17,293 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 14:23:17,299 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 14:23:17,301 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 14:23:17,302 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 14:23:17,310 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 14:23:17,311 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 14:23:17,332 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:23:17,366 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:23:17,406 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:23:17,408 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 14:23:17,414 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 14:23:17,441 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 14:23:17,463 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 14:23:17,470 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 14:23:17,480 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 14:23:17,483 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 14:23:17,485 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:23:17,485 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 14:23:17,488 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:23:17,497 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 14:23:17,499 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:23:17,504 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 14:23:17,512 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:23:17,516 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 14:23:17,518 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:23:17,519 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:23:17,527 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:23:17,529 - WafLogger - DEBUG - The file path /workspace/test_scripts/chrome/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:23:17,530 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:23:17,532 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:23:17,534 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:23:17,542 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 14:23:17,579 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:23:17,588 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:23:17,593 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:23:17,594 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:23:17,609 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:23:17,611 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:23:17,628 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:23:17,630 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:23:17,636 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:23:17,669 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:23:17,671 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:23:17,910 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:23:18,136 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:23:18,223 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:23:18,228 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:23:18,230 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:23:18,231 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:23:18,232 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:23:18,234 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:23:18,235 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:23:18,237 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:23:18,238 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:23:18,241 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:23:18,244 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:23:18,248 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:23:18,249 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:23:18,252 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:23:18,253 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:23:18,256 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:23:18,261 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:23:18,265 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:23:18,266 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:23:18,268 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:23:18,269 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:23:18,274 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:23:18,277 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:23:18,326 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:23:18,327 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:23:18,328 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:23:18,329 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:23:18,330 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:23:18,330 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:23:18,331 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:23:18,332 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:23:18,333 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:23:18,335 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 14:23:18,337 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:23:18,338 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:23:18,339 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:23:18,339 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:23:18,340 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:23:18,341 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 14:23:18,342 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 14:23:22,976 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 14:23:22,978 - WafLogger - DEBUG - Populating the OS details in the PDF report as Linux [keywords_manager.py:52]
2025-04-03 14:23:22,979 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 14:23:22,979 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 14:23:22,980 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 14:23:22,980 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 14:23:22,981 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:23:22,981 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 14:23:22,982 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 14:23:22,984 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 14:23:22,985 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 14:23:26,721 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 14:23:29,692 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:23:29,694 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:23:29,696 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:23:32,977 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:23:32,978 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:23:32,980 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:23:32,986 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:23:33,006 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:23:33,138 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:23:33,143 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:23:33,144 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:23:33,145 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:23:34,952 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:23:34,997 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:23:35,072 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/1.xlsx. [runner.py:535]
2025-04-03 14:23:35,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:23:35,074 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 14:23:35,075 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:23:35,075 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:23:35,076 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:23:35,076 - WafLogger - DEBUG - The file path /workspace/test_scripts/edge/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:23:35,077 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:23:35,077 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:23:35,078 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:23:35,078 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 14:23:35,086 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:23:35,088 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:23:35,090 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:23:35,091 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:23:35,101 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:23:35,101 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:23:35,107 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:23:35,110 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:23:35,111 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:23:35,131 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:23:35,132 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:23:35,179 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:23:35,180 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:23:35,182 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:23:35,183 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:23:35,184 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:23:35,184 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:23:35,185 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:23:35,185 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:23:35,186 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:23:35,186 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:23:35,186 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:23:35,187 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:23:35,188 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:23:35,188 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:23:35,189 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:23:35,190 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:23:35,190 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:23:35,191 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:23:35,192 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:23:35,194 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:23:35,195 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:23:35,195 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:23:35,196 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:23:35,197 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:23:35,198 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 14:23:35,199 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 14:23:35,200 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 14:23:35,200 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:23:35,221 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:23:35,222 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:23:35,223 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:23:35,223 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:23:35,224 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:23:35,224 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:23:35,225 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:23:35,225 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:23:35,225 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:23:35,226 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 14:23:35,226 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:23:35,227 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:23:35,227 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:23:35,228 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:23:35,228 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:23:35,228 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 14:23:35,229 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 14:23:40,286 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 14:23:40,288 - WafLogger - DEBUG - Populating the OS details in the PDF report as Linux [keywords_manager.py:52]
2025-04-03 14:23:40,289 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 14:23:40,290 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 14:23:40,291 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 14:23:40,292 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 14:23:40,292 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:23:40,293 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 14:23:40,294 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 14:23:40,295 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 14:23:40,295 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 14:23:43,996 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 14:23:44,334 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:23:44,592 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 14:23:44,593 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 14:23:44,594 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 14:23:44,641 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:263]
2025-04-03 14:23:44,643 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 14:23:44,644 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55b50990e68e <unknown>
#1 0x55b50936dc36 <unknown>
#2 0x55b5093bdd05 <unknown>
#3 0x55b5093be101 <unknown>
#4 0x55b509406b24 <unknown>
#5 0x55b5093e3afd <unknown>
#6 0x55b5094046df <unknown>
#7 0x55b5093e38a3 <unknown>
#8 0x55b5093b1111 <unknown>
#9 0x55b5093b1da1 <unknown>
#10 0x55b5098dffc1 <unknown>
#11 0x55b5098e317e <unknown>
#12 0x55b5098e2c3b <unknown>
#13 0x55b5098e35a5 <unknown>
#14 0x55b5098cda0b <unknown>
#15 0x55b5098e396c <unknown>
#16 0x55b5098b65d5 <unknown>
#17 0x55b5098feeb8 <unknown>
#18 0x55b5098ff0dc <unknown>
#19 0x55b50990da9c <unknown>
#20 0x7f44207c81f5 <unknown>
 [keywords_manager.py:213]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "/workspace/driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/driver_functions.py", line 260, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55b50990e68e <unknown>
#1 0x55b50936dc36 <unknown>
#2 0x55b5093bdd05 <unknown>
#3 0x55b5093be101 <unknown>
#4 0x55b509406b24 <unknown>
#5 0x55b5093e3afd <unknown>
#6 0x55b5094046df <unknown>
#7 0x55b5093e38a3 <unknown>
#8 0x55b5093b1111 <unknown>
#9 0x55b5093b1da1 <unknown>
#10 0x55b5098dffc1 <unknown>
#11 0x55b5098e317e <unknown>
#12 0x55b5098e2c3b <unknown>
#13 0x55b5098e35a5 <unknown>
#14 0x55b5098cda0b <unknown>
#15 0x55b5098e396c <unknown>
#16 0x55b5098b65d5 <unknown>
#17 0x55b5098feeb8 <unknown>
#18 0x55b5098ff0dc <unknown>
#19 0x55b50990da9c <unknown>
#20 0x7f44207c81f5 <unknown>

2025-04-03 14:23:44,866 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:214]
2025-04-03 14:23:45,100 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:23:45,102 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55b50990e68e <unknown>
#1 0x55b50936dc36 <unknown>
#2 0x55b5093bdd05 <unknown>
#3 0x55b5093be101 <unknown>
#4 0x55b509406b24 <unknown>
#5 0x55b5093e3afd <unknown>
#6 0x55b5094046df <unknown>
#7 0x55b5093e38a3 <unknown>
#8 0x55b5093b1111 <unknown>
#9 0x55b5093b1da1 <unknown>
#10 0x55b5098dffc1 <unknown>
#11 0x55b5098e317e <unknown>
#12 0x55b5098e2c3b <unknown>
#13 0x55b5098e35a5 <unknown>
#14 0x55b5098cda0b <unknown>
#15 0x55b5098e396c <unknown>
#16 0x55b5098b65d5 <unknown>
#17 0x55b5098feeb8 <unknown>
#18 0x55b5098ff0dc <unknown>
#19 0x55b50990da9c <unknown>
#20 0x7f44207c81f5 <unknown>
 [runner.py:351]
Traceback (most recent call last):
  File "/workspace/runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "/workspace/keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "/workspace/driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/driver_functions.py", line 260, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55b50990e68e <unknown>
#1 0x55b50936dc36 <unknown>
#2 0x55b5093bdd05 <unknown>
#3 0x55b5093be101 <unknown>
#4 0x55b509406b24 <unknown>
#5 0x55b5093e3afd <unknown>
#6 0x55b5094046df <unknown>
#7 0x55b5093e38a3 <unknown>
#8 0x55b5093b1111 <unknown>
#9 0x55b5093b1da1 <unknown>
#10 0x55b5098dffc1 <unknown>
#11 0x55b5098e317e <unknown>
#12 0x55b5098e2c3b <unknown>
#13 0x55b5098e35a5 <unknown>
#14 0x55b5098cda0b <unknown>
#15 0x55b5098e396c <unknown>
#16 0x55b5098b65d5 <unknown>
#17 0x55b5098feeb8 <unknown>
#18 0x55b5098ff0dc <unknown>
#19 0x55b50990da9c <unknown>
#20 0x7f44207c81f5 <unknown>

2025-04-03 14:23:45,169 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:23:45,170 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:23:46,225 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:23:46,226 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:23:46,227 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:23:46,236 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:23:46,239 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:23:46,263 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:23:46,274 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:23:46,275 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:23:46,277 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:23:47,562 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:23:47,601 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:23:47,734 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 14:23:47,736 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 14:23:47,808 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 14:23:47,811 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 14:23:47,819 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 14:23:47,822 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 14:23:47,823 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 14:23:47,823 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 14:23:48,705 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-03 14:26:50,772 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 14:26:50,778 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 14:26:50,779 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 14:26:50,780 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 14:26:50,784 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:479]
2025-04-03 14:26:50,785 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:484]
2025-04-03 14:26:50,791 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:26:50,799 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:26:50,817 - WafLogger - DEBUG - Folder and its content removed [utilities.py:49]
2025-04-03 14:26:50,818 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:489]
2025-04-03 14:26:50,822 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:491]
2025-04-03 14:26:50,837 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:498]
2025-04-03 14:26:50,851 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:518]
2025-04-03 14:26:50,856 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:524]
2025-04-03 14:26:50,861 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:532]
2025-04-03 14:26:50,863 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc001_testscript1.xlsx. [runner.py:535]
2025-04-03 14:26:50,863 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:26:50,863 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc002_testscript1.xlsx. [runner.py:535]
2025-04-03 14:26:50,864 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:26:50,864 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/tc003_testscript2.xlsx. [runner.py:535]
2025-04-03 14:26:50,865 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:26:50,868 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1 (2).xlsx. [runner.py:535]
2025-04-03 14:26:50,869 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:26:50,870 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/tc003_testscript1.xlsx. [runner.py:535]
2025-04-03 14:26:50,871 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:26:50,873 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/chrome/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:26:50,874 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:26:50,874 - WafLogger - DEBUG - The file path /workspace/test_scripts/chrome/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:26:50,875 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:26:50,876 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:26:50,877 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:26:50,877 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:547]
2025-04-03 14:26:50,890 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:26:50,892 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:26:50,895 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:26:50,895 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:26:50,905 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:26:50,906 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:26:50,911 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:26:50,912 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:26:50,912 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:26:50,935 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:26:50,936 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:26:51,220 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:26:51,299 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:26:51,373 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:26:51,374 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:26:51,375 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:26:51,376 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:26:51,377 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:26:51,378 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:26:51,379 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:26:51,379 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:26:51,380 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:26:51,381 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:26:51,382 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:26:51,383 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:26:51,384 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:26:51,385 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:26:51,386 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:26:51,387 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:26:51,388 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:26:51,389 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:26:51,390 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:26:51,391 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:26:51,392 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:26:51,393 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:26:51,395 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:26:51,427 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:26:51,428 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:26:51,429 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:26:51,429 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:26:51,429 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:26:51,430 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:26:51,430 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:26:51,431 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:26:51,431 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:26:51,433 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe
flsof lldfoe
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:187]
2025-04-03 14:26:51,434 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:26:51,435 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:26:51,436 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:26:51,437 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:26:51,437 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:26:51,438 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:204]
2025-04-03 14:26:51,439 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:47]
2025-04-03 14:26:53,546 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 14:26:53,553 - WafLogger - DEBUG - Populating the OS details in the PDF report as Linux [keywords_manager.py:52]
2025-04-03 14:26:53,557 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:60]
2025-04-03 14:26:53,560 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 14:26:53,561 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 14:26:53,566 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 14:26:53,568 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:26:53,572 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 14:26:53,575 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 14:26:53,580 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 14:26:53,582 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 14:26:59,079 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 14:26:59,657 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:26:59,659 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:26:59,661 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:27:03,140 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:27:03,141 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:27:03,142 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:27:03,147 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:27:03,151 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:27:03,253 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:27:03,285 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:27:03,286 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:27:03,287 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:27:04,240 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:27:04,264 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:27:04,343 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/1.xlsx. [runner.py:535]
2025-04-03 14:27:04,344 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:27:04,344 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/tc001_testscript1 - Copy.xlsx. [runner.py:535]
2025-04-03 14:27:04,345 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:27:04,345 - WafLogger - DEBUG - Getting the file path /workspace/test_scripts/edge/TS001_testscript.xlsx. [runner.py:535]
2025-04-03 14:27:04,346 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 14:27:04,346 - WafLogger - DEBUG - The file path /workspace/test_scripts/edge/TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:539]
2025-04-03 14:27:04,347 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 14:27:04,348 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:544]
2025-04-03 14:27:04,348 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:545]
2025-04-03 14:27:04,348 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:565]
2025-04-03 14:27:04,356 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:33]
2025-04-03 14:27:04,358 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:37]
2025-04-03 14:27:04,360 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:40]
2025-04-03 14:27:04,360 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:50]
2025-04-03 14:27:04,368 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:55]
2025-04-03 14:27:04,369 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:61]
2025-04-03 14:27:04,373 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:64]
2025-04-03 14:27:04,373 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:67]
2025-04-03 14:27:04,374 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:68]
2025-04-03 14:27:04,377 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:70]
2025-04-03 14:27:04,392 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:73]
2025-04-03 14:27:04,435 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:75]
2025-04-03 14:27:04,436 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:82]
2025-04-03 14:27:04,438 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:84]
2025-04-03 14:27:04,439 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:86]
2025-04-03 14:27:04,439 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:88]
2025-04-03 14:27:04,440 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:92]
2025-04-03 14:27:04,440 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:138]
2025-04-03 14:27:04,441 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:86]
2025-04-03 14:27:04,441 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:88]
2025-04-03 14:27:04,442 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:92]
2025-04-03 14:27:04,442 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:143]
2025-04-03 14:27:04,443 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:86]
2025-04-03 14:27:04,444 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:88]
2025-04-03 14:27:04,445 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:92]
2025-04-03 14:27:04,445 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:148]
2025-04-03 14:27:04,446 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:86]
2025-04-03 14:27:04,446 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:88]
2025-04-03 14:27:04,447 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:92]
2025-04-03 14:27:04,447 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:104]
2025-04-03 14:27:04,448 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:153]
2025-04-03 14:27:04,449 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:86]
2025-04-03 14:27:04,450 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:88]
2025-04-03 14:27:04,451 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:92]
2025-04-03 14:27:04,451 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:158]
2025-04-03 14:27:04,452 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:86]
2025-04-03 14:27:04,452 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:88]
2025-04-03 14:27:04,453 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:92]
2025-04-03 14:27:04,454 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:163]
2025-04-03 14:27:04,467 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:173]
2025-04-03 14:27:04,468 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:175]
2025-04-03 14:27:04,468 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:178]
2025-04-03 14:27:04,469 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 14:27:04,469 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:175]
2025-04-03 14:27:04,470 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:182]
2025-04-03 14:27:04,470 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 14:27:04,471 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:175]
2025-04-03 14:27:04,471 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:186]
2025-04-03 14:27:04,471 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:187]
2025-04-03 14:27:04,472 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 14:27:04,472 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:34]
2025-04-03 14:27:04,473 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:175]
2025-04-03 14:27:04,473 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:196]
2025-04-03 14:27:04,474 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:203]
2025-04-03 14:27:04,474 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:204]
2025-04-03 14:27:04,474 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 14:27:06,552 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 14:27:06,553 - WafLogger - DEBUG - Populating the OS details in the PDF report as Linux [keywords_manager.py:52]
2025-04-03 14:27:06,554 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 14:27:06,555 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:82]
2025-04-03 14:27:06,555 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:29]
2025-04-03 14:27:06,556 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 14:27:06,557 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:27:06,558 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:175]
2025-04-03 14:27:06,559 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:250]
2025-04-03 14:27:06,560 - WafLogger - DEBUG - Opening URL [keywords_manager.py:149]
2025-04-03 14:27:06,561 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:33]
2025-04-03 14:27:10,003 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:154]
2025-04-03 14:27:10,268 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:27:10,270 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:175]
2025-04-03 14:27:10,271 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:346]
2025-04-03 14:27:10,272 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:347]
2025-04-03 14:27:10,293 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:276]
2025-04-03 14:27:10,294 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:43]
2025-04-03 14:27:10,295 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x555ef38fd68e <unknown>
#1 0x555ef335cc36 <unknown>
#2 0x555ef33acd05 <unknown>
#3 0x555ef33ad101 <unknown>
#4 0x555ef33f5b24 <unknown>
#5 0x555ef33d2afd <unknown>
#6 0x555ef33f36df <unknown>
#7 0x555ef33d28a3 <unknown>
#8 0x555ef33a0111 <unknown>
#9 0x555ef33a0da1 <unknown>
#10 0x555ef38cefc1 <unknown>
#11 0x555ef38d217e <unknown>
#12 0x555ef38d1c3b <unknown>
#13 0x555ef38d25a5 <unknown>
#14 0x555ef38bca0b <unknown>
#15 0x555ef38d296c <unknown>
#16 0x555ef38a55d5 <unknown>
#17 0x555ef38edeb8 <unknown>
#18 0x555ef38ee0dc <unknown>
#19 0x555ef38fca9c <unknown>
#20 0x7fd168a761f5 <unknown>
 [keywords_manager.py:213]
Traceback (most recent call last):
  File "/workspace/keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "/workspace/driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/driver_functions.py", line 273, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x555ef38fd68e <unknown>
#1 0x555ef335cc36 <unknown>
#2 0x555ef33acd05 <unknown>
#3 0x555ef33ad101 <unknown>
#4 0x555ef33f5b24 <unknown>
#5 0x555ef33d2afd <unknown>
#6 0x555ef33f36df <unknown>
#7 0x555ef33d28a3 <unknown>
#8 0x555ef33a0111 <unknown>
#9 0x555ef33a0da1 <unknown>
#10 0x555ef38cefc1 <unknown>
#11 0x555ef38d217e <unknown>
#12 0x555ef38d1c3b <unknown>
#13 0x555ef38d25a5 <unknown>
#14 0x555ef38bca0b <unknown>
#15 0x555ef38d296c <unknown>
#16 0x555ef38a55d5 <unknown>
#17 0x555ef38edeb8 <unknown>
#18 0x555ef38ee0dc <unknown>
#19 0x555ef38fca9c <unknown>
#20 0x7fd168a761f5 <unknown>

2025-04-03 14:27:10,511 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:214]
2025-04-03 14:27:10,728 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:46]
2025-04-03 14:27:10,729 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x555ef38fd68e <unknown>
#1 0x555ef335cc36 <unknown>
#2 0x555ef33acd05 <unknown>
#3 0x555ef33ad101 <unknown>
#4 0x555ef33f5b24 <unknown>
#5 0x555ef33d2afd <unknown>
#6 0x555ef33f36df <unknown>
#7 0x555ef33d28a3 <unknown>
#8 0x555ef33a0111 <unknown>
#9 0x555ef33a0da1 <unknown>
#10 0x555ef38cefc1 <unknown>
#11 0x555ef38d217e <unknown>
#12 0x555ef38d1c3b <unknown>
#13 0x555ef38d25a5 <unknown>
#14 0x555ef38bca0b <unknown>
#15 0x555ef38d296c <unknown>
#16 0x555ef38a55d5 <unknown>
#17 0x555ef38edeb8 <unknown>
#18 0x555ef38ee0dc <unknown>
#19 0x555ef38fca9c <unknown>
#20 0x7fd168a761f5 <unknown>
 [runner.py:351]
Traceback (most recent call last):
  File "/workspace/runner.py", line 349, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "/workspace/keywords_manager.py", line 206, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "/workspace/driver_functions.py", line 39, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/driver_functions.py", line 273, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "/workspace/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x555ef38fd68e <unknown>
#1 0x555ef335cc36 <unknown>
#2 0x555ef33acd05 <unknown>
#3 0x555ef33ad101 <unknown>
#4 0x555ef33f5b24 <unknown>
#5 0x555ef33d2afd <unknown>
#6 0x555ef33f36df <unknown>
#7 0x555ef33d28a3 <unknown>
#8 0x555ef33a0111 <unknown>
#9 0x555ef33a0da1 <unknown>
#10 0x555ef38cefc1 <unknown>
#11 0x555ef38d217e <unknown>
#12 0x555ef38d1c3b <unknown>
#13 0x555ef38d25a5 <unknown>
#14 0x555ef38bca0b <unknown>
#15 0x555ef38d296c <unknown>
#16 0x555ef38a55d5 <unknown>
#17 0x555ef38edeb8 <unknown>
#18 0x555ef38ee0dc <unknown>
#19 0x555ef38fca9c <unknown>
#20 0x7fd168a761f5 <unknown>

2025-04-03 14:27:10,744 - WafLogger - DEBUG - Gathering test summary results. [runner.py:366]
2025-04-03 14:27:10,745 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:368]
2025-04-03 14:27:11,809 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:371]
2025-04-03 14:27:11,809 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 14:27:11,811 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:72]
2025-04-03 14:27:11,818 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:28]
2025-04-03 14:27:11,821 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:54]
2025-04-03 14:27:11,840 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:63]
2025-04-03 14:27:11,844 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:33]
2025-04-03 14:27:11,845 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:46]
2025-04-03 14:27:11,846 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:73]
2025-04-03 14:27:12,957 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:98]
2025-04-03 14:27:12,981 - WafLogger - DEBUG - Closing Browser [driver_functions.py:25]
2025-04-03 14:27:13,055 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:88]
2025-04-03 14:27:13,056 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:90]
2025-04-03 14:27:13,112 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:23]
2025-04-03 14:27:13,114 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:49]
2025-04-03 14:27:13,123 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:58]
2025-04-03 14:27:13,126 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:28]
2025-04-03 14:27:13,127 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:41]
2025-04-03 14:27:13,127 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:68]
2025-04-03 14:27:14,319 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:92]
2025-04-04 16:44:57,813 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-04 16:44:57,814 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-04 16:44:57,816 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:526]
2025-04-04 16:44:57,817 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:552]
2025-04-04 16:44:57,820 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:563]
2025-04-04 16:44:57,821 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:568]
2025-04-04 16:44:57,821 - WafLogger - DEBUG - Folder and its content removed [utilities.py:95]
2025-04-04 16:44:57,822 - WafLogger - DEBUG - Folder and its content removed [utilities.py:95]
2025-04-04 16:44:57,876 - WafLogger - DEBUG - Folder and its content removed [utilities.py:95]
2025-04-04 16:44:57,876 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:573]
2025-04-04 16:44:57,877 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:575]
2025-04-04 16:44:57,879 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:582]
2025-04-04 16:44:57,879 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:602]
2025-04-04 16:44:57,881 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:608]
2025-04-04 16:44:57,881 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:616]
2025-04-04 16:44:57,882 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:619]
2025-04-04 16:44:57,882 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:44:57,882 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:619]
2025-04-04 16:44:57,882 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:44:57,883 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:619]
2025-04-04 16:44:57,883 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:44:57,883 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:619]
2025-04-04 16:44:57,884 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:44:57,884 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:619]
2025-04-04 16:44:57,884 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:44:57,885 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 16:44:57,885 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:44:57,885 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 16:44:57,885 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 16:44:57,886 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 16:44:57,886 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 16:44:57,886 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:631]
2025-04-04 16:44:59,701 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 16:44:59,701 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 16:44:59,703 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 16:44:59,704 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 16:44:59,708 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 16:44:59,708 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 16:44:59,709 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 16:44:59,709 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 16:44:59,710 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 16:44:59,710 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 16:44:59,710 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 16:44:59,745 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 16:44:59,750 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 16:44:59,751 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 16:44:59,752 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 16:44:59,752 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 16:44:59,752 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 16:44:59,753 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 16:44:59,753 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 16:44:59,753 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 16:44:59,753 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 16:44:59,754 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 16:44:59,754 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 16:44:59,754 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 16:44:59,754 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 16:44:59,754 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 16:44:59,755 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 16:44:59,755 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 16:44:59,756 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 16:44:59,756 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 16:44:59,756 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 16:44:59,756 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 16:44:59,757 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 16:44:59,757 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 16:44:59,757 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 16:44:59,757 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 16:44:59,759 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 16:44:59,760 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 16:44:59,760 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 16:44:59,760 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 16:44:59,761 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 16:44:59,761 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 16:44:59,761 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 16:44:59,761 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 16:44:59,762 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 16:44:59,762 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:222]
2025-04-04 16:44:59,762 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 16:44:59,762 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 16:44:59,762 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 16:44:59,763 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 16:44:59,763 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 16:44:59,763 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:239]
2025-04-04 16:44:59,763 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-04 16:45:06,646 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 16:45:06,646 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 16:45:06,646 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-04 16:45:06,647 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 16:45:06,647 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:53]
2025-04-04 16:45:06,647 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 16:45:06,647 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:45:06,648 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 16:45:06,648 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 16:45:06,648 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 16:45:06,649 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:64]
2025-04-04 16:45:10,563 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 16:45:11,351 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:45:11,353 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 16:45:11,353 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 16:45:13,070 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 16:45:13,071 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 16:45:13,072 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 16:45:13,073 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 16:45:13,097 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 16:45:13,133 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 16:45:13,135 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 16:45:13,136 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 16:45:13,136 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 16:45:14,975 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 16:45:15,052 - WafLogger - DEBUG - Closing Browser [driver_functions.py:42]
2025-04-04 16:45:21,602 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:619]
2025-04-04 16:45:21,602 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:45:21,603 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:619]
2025-04-04 16:45:21,603 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:45:21,603 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 16:45:21,604 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:45:21,604 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 16:45:21,604 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 16:45:21,604 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 16:45:21,605 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 16:45:21,605 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:649]
2025-04-04 16:45:23,705 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 16:45:23,705 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 16:45:23,707 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 16:45:23,707 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 16:45:23,711 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 16:45:23,711 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 16:45:23,712 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 16:45:23,712 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 16:45:23,712 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 16:45:23,738 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 16:45:23,738 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 16:45:23,762 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 16:45:23,762 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 16:45:23,763 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 16:45:23,764 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 16:45:23,764 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 16:45:23,764 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 16:45:23,764 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 16:45:23,764 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 16:45:23,764 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 16:45:23,764 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 16:45:23,764 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 16:45:23,765 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 16:45:23,765 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 16:45:23,765 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 16:45:23,765 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 16:45:23,766 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 16:45:23,766 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 16:45:23,766 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 16:45:23,766 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 16:45:23,767 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 16:45:23,767 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 16:45:23,768 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 16:45:23,768 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 16:45:23,768 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 16:45:23,769 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:121]
2025-04-04 16:45:23,769 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:123]
2025-04-04 16:45:23,769 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-04 16:45:23,769 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 16:45:23,772 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 16:45:23,772 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 16:45:23,772 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 16:45:23,772 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 16:45:23,773 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 16:45:23,773 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 16:45:23,773 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 16:45:23,773 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 16:45:23,773 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 16:45:23,774 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:222]
2025-04-04 16:45:23,774 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 16:45:23,774 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 16:45:23,774 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 16:45:23,774 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 16:45:23,774 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 16:45:23,774 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:239]
2025-04-04 16:45:23,775 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-04 16:45:31,040 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 16:45:31,040 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 16:45:31,041 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-04 16:45:31,041 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 16:45:31,041 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:53]
2025-04-04 16:45:31,042 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 16:45:31,042 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:45:31,043 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 16:45:31,044 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 16:45:31,044 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 16:45:31,044 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:64]
2025-04-04 16:45:35,062 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 16:45:35,830 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:45:35,831 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:210]
2025-04-04 16:45:35,832 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:381]
2025-04-04 16:45:35,832 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:382]
2025-04-04 16:45:35,855 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-04 16:45:35,856 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:85]
2025-04-04 16:45:35,856 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6668DA545+20677]
	simdutf::get_active_implementation [0x00007FF666836CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF666B2D75A+1807418]
	(No symbol) [0x00007FF6666772AC]
	(No symbol) [0x00007FF66667758B]
	(No symbol) [0x00007FF6666B85A7]
	(No symbol) [0x00007FF66669849F]
	(No symbol) [0x00007FF66666D6ED]
	(No symbol) [0x00007FF6666B5D61]
	(No symbol) [0x00007FF6666981C3]
	(No symbol) [0x00007FF66666CC36]
	(No symbol) [0x00007FF66666C0C4]
	(No symbol) [0x00007FF66666CA63]
	(No symbol) [0x00007FF666755BDD]
	(No symbol) [0x00007FF666762042]
	(No symbol) [0x00007FF66675AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6669B42AA+262026]
	simdutf::get_active_implementation [0x00007FF666844421+546385]
	simdutf::get_active_implementation [0x00007FF66683D6D4+518404]
	simdutf::get_active_implementation [0x00007FF66683D819+518729]
	simdutf::get_active_implementation [0x00007FF66682F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 81, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6668DA545+20677]
	simdutf::get_active_implementation [0x00007FF666836CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF666B2D75A+1807418]
	(No symbol) [0x00007FF6666772AC]
	(No symbol) [0x00007FF66667758B]
	(No symbol) [0x00007FF6666B85A7]
	(No symbol) [0x00007FF66669849F]
	(No symbol) [0x00007FF66666D6ED]
	(No symbol) [0x00007FF6666B5D61]
	(No symbol) [0x00007FF6666981C3]
	(No symbol) [0x00007FF66666CC36]
	(No symbol) [0x00007FF66666C0C4]
	(No symbol) [0x00007FF66666CA63]
	(No symbol) [0x00007FF666755BDD]
	(No symbol) [0x00007FF666762042]
	(No symbol) [0x00007FF66675AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6669B42AA+262026]
	simdutf::get_active_implementation [0x00007FF666844421+546385]
	simdutf::get_active_implementation [0x00007FF66683D6D4+518404]
	simdutf::get_active_implementation [0x00007FF66683D819+518729]
	simdutf::get_active_implementation [0x00007FF66682F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 16:45:35,936 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-04 16:45:36,640 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:45:36,640 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6668DA545+20677]
	simdutf::get_active_implementation [0x00007FF666836CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF666B2D75A+1807418]
	(No symbol) [0x00007FF6666772AC]
	(No symbol) [0x00007FF66667758B]
	(No symbol) [0x00007FF6666B85A7]
	(No symbol) [0x00007FF66669849F]
	(No symbol) [0x00007FF66666D6ED]
	(No symbol) [0x00007FF6666B5D61]
	(No symbol) [0x00007FF6666981C3]
	(No symbol) [0x00007FF66666CC36]
	(No symbol) [0x00007FF66666C0C4]
	(No symbol) [0x00007FF66666CA63]
	(No symbol) [0x00007FF666755BDD]
	(No symbol) [0x00007FF666762042]
	(No symbol) [0x00007FF66675AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6669B42AA+262026]
	simdutf::get_active_implementation [0x00007FF666844421+546385]
	simdutf::get_active_implementation [0x00007FF66683D6D4+518404]
	simdutf::get_active_implementation [0x00007FF66683D819+518729]
	simdutf::get_active_implementation [0x00007FF66682F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [runner.py:386]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 384, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 81, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6668DA545+20677]
	simdutf::get_active_implementation [0x00007FF666836CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF666B2D75A+1807418]
	(No symbol) [0x00007FF6666772AC]
	(No symbol) [0x00007FF66667758B]
	(No symbol) [0x00007FF6666B85A7]
	(No symbol) [0x00007FF66669849F]
	(No symbol) [0x00007FF66666D6ED]
	(No symbol) [0x00007FF6666B5D61]
	(No symbol) [0x00007FF6666981C3]
	(No symbol) [0x00007FF66666CC36]
	(No symbol) [0x00007FF66666C0C4]
	(No symbol) [0x00007FF66666CA63]
	(No symbol) [0x00007FF666755BDD]
	(No symbol) [0x00007FF666762042]
	(No symbol) [0x00007FF66675AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6669B42AA+262026]
	simdutf::get_active_implementation [0x00007FF666844421+546385]
	simdutf::get_active_implementation [0x00007FF66683D6D4+518404]
	simdutf::get_active_implementation [0x00007FF66683D819+518729]
	simdutf::get_active_implementation [0x00007FF66682F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 16:45:36,645 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 16:45:36,645 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 16:45:37,489 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 16:45:37,490 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 16:45:37,492 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 16:45:37,497 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 16:45:37,497 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 16:45:37,523 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 16:45:37,526 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 16:45:37,527 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 16:45:37,527 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 16:45:39,000 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 16:45:39,072 - WafLogger - DEBUG - Closing Browser [driver_functions.py:42]
2025-04-04 16:45:45,618 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-04 16:45:45,619 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-04 16:45:45,668 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-04 16:45:45,670 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-04 16:45:45,716 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-04 16:45:45,718 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-04 16:45:45,719 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-04 16:45:45,719 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-04 16:45:46,586 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-04 16:54:20,286 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-04 16:54:20,288 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-04 16:54:20,289 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:526]
2025-04-04 16:54:20,289 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:552]
2025-04-04 16:54:20,291 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:563]
2025-04-04 16:54:20,291 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:568]
2025-04-04 16:54:20,292 - WafLogger - DEBUG - Folder and its content removed [utilities.py:105]
2025-04-04 16:54:20,293 - WafLogger - DEBUG - Folder and its content removed [utilities.py:105]
2025-04-04 16:54:20,294 - WafLogger - DEBUG - Folder and its content removed [utilities.py:105]
2025-04-04 16:54:20,294 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:573]
2025-04-04 16:54:20,294 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:575]
2025-04-04 16:54:20,295 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:582]
2025-04-04 16:54:20,296 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:602]
2025-04-04 16:54:20,296 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:608]
2025-04-04 16:54:20,296 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:616]
2025-04-04 16:54:20,297 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:619]
2025-04-04 16:54:20,297 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:54:20,297 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:619]
2025-04-04 16:54:20,297 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:54:20,297 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:619]
2025-04-04 16:54:20,297 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:54:20,298 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:619]
2025-04-04 16:54:20,298 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:54:20,298 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:619]
2025-04-04 16:54:20,298 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:54:20,298 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 16:54:20,298 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:54:20,299 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 16:54:20,299 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 16:54:20,299 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 16:54:20,299 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 16:54:20,300 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:631]
2025-04-04 16:54:22,008 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 16:54:22,009 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 16:54:22,010 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 16:54:22,011 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 16:54:22,015 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 16:54:22,015 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 16:54:22,016 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 16:54:22,017 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 16:54:22,018 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 16:54:22,039 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 16:54:22,040 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 16:54:22,059 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 16:54:22,060 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 16:54:22,061 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 16:54:22,061 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 16:54:22,062 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 16:54:22,062 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 16:54:22,062 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 16:54:22,063 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 16:54:22,063 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 16:54:22,063 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 16:54:22,063 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 16:54:22,064 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 16:54:22,064 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 16:54:22,064 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 16:54:22,065 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 16:54:22,065 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 16:54:22,066 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 16:54:22,066 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 16:54:22,067 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 16:54:22,067 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 16:54:22,067 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 16:54:22,067 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 16:54:22,068 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 16:54:22,068 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 16:54:22,068 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 16:54:22,070 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 16:54:22,071 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 16:54:22,071 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 16:54:22,072 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 16:54:22,072 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 16:54:22,072 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 16:54:22,073 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 16:54:22,073 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 16:54:22,073 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 16:54:22,073 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:222]
2025-04-04 16:54:22,074 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 16:54:22,074 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 16:54:22,074 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 16:54:22,075 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 16:54:22,075 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 16:54:22,075 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:239]
2025-04-04 16:54:22,076 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-04 16:54:24,775 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 16:54:24,776 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 16:54:24,776 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-04 16:54:24,776 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 16:54:24,776 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:53]
2025-04-04 16:54:24,776 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 16:54:24,777 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:54:24,778 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 16:54:24,778 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 16:54:24,778 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 16:54:24,778 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:64]
2025-04-04 16:54:28,765 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 16:54:29,411 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:54:29,412 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 16:54:29,412 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 16:54:30,351 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 16:54:30,352 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 16:54:30,355 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 16:54:30,358 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 16:54:30,379 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 16:54:30,413 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 16:54:30,416 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 16:54:30,416 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 16:54:30,417 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 16:54:31,483 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 16:54:31,542 - WafLogger - DEBUG - Closing Browser [driver_functions.py:42]
2025-04-04 16:54:38,088 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:619]
2025-04-04 16:54:38,089 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:54:38,089 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:619]
2025-04-04 16:54:38,089 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:54:38,090 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 16:54:38,090 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:54:38,090 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 16:54:38,090 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 16:54:38,091 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 16:54:38,091 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 16:54:38,091 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:649]
2025-04-04 16:54:39,977 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 16:54:39,977 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 16:54:39,979 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 16:54:39,979 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 16:54:39,983 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 16:54:39,983 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 16:54:39,984 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 16:54:39,985 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 16:54:39,985 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 16:54:39,987 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 16:54:39,987 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 16:54:39,997 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 16:54:39,998 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 16:54:39,998 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 16:54:39,999 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 16:54:40,000 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 16:54:40,000 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 16:54:40,000 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 16:54:40,001 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 16:54:40,001 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 16:54:40,001 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 16:54:40,001 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 16:54:40,002 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 16:54:40,002 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 16:54:40,002 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 16:54:40,002 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 16:54:40,003 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 16:54:40,003 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 16:54:40,003 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 16:54:40,004 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 16:54:40,005 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 16:54:40,005 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 16:54:40,005 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 16:54:40,005 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 16:54:40,006 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 16:54:40,006 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:121]
2025-04-04 16:54:40,006 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:123]
2025-04-04 16:54:40,006 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-04 16:54:40,006 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 16:54:40,008 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 16:54:40,009 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 16:54:40,009 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 16:54:40,009 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 16:54:40,010 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 16:54:40,010 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 16:54:40,011 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 16:54:40,011 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 16:54:40,011 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 16:54:40,012 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:222]
2025-04-04 16:54:40,012 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 16:54:40,012 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 16:54:40,012 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 16:54:40,012 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 16:54:40,013 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 16:54:40,013 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:239]
2025-04-04 16:54:40,013 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-04 16:54:42,541 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 16:54:42,542 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 16:54:42,542 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-04 16:54:42,542 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 16:54:42,542 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:53]
2025-04-04 16:54:42,543 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 16:54:42,543 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:54:42,544 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 16:54:42,544 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 16:54:42,544 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 16:54:42,544 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:64]
2025-04-04 16:54:47,642 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 16:54:48,270 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:54:48,271 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:210]
2025-04-04 16:54:48,272 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:381]
2025-04-04 16:54:48,272 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:382]
2025-04-04 16:54:48,304 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-04 16:54:48,304 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:85]
2025-04-04 16:54:48,305 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 81, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 16:54:48,312 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-04 16:54:48,896 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:54:48,896 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [runner.py:386]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 384, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 81, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 16:54:48,905 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 16:54:48,905 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 16:54:49,632 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 16:54:49,633 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 16:54:49,634 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 16:54:49,636 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 16:54:49,637 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 16:54:49,653 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 16:54:49,657 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 16:54:49,658 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 16:54:49,658 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 16:54:50,868 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 16:54:50,908 - WafLogger - DEBUG - Closing Browser [driver_functions.py:42]
2025-04-04 16:54:57,416 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-04 16:54:57,416 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-04 16:54:57,464 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-04 16:54:57,465 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-04 16:54:57,481 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-04 16:54:57,483 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-04 16:54:57,484 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-04 16:54:57,485 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-04 16:54:58,347 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-04 16:56:52,565 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-04 16:56:52,565 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-04 16:56:52,567 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:526]
2025-04-04 16:56:52,567 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:552]
2025-04-04 16:56:52,569 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:563]
2025-04-04 16:56:52,570 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:568]
2025-04-04 16:56:52,571 - WafLogger - DEBUG - Folder and its content removed [utilities.py:105]
2025-04-04 16:56:52,571 - WafLogger - DEBUG - Folder and its content removed [utilities.py:105]
2025-04-04 16:56:52,572 - WafLogger - DEBUG - Folder and its content removed [utilities.py:105]
2025-04-04 16:56:52,572 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:573]
2025-04-04 16:56:52,573 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:575]
2025-04-04 16:56:52,574 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:582]
2025-04-04 16:56:52,574 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:602]
2025-04-04 16:56:52,574 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:608]
2025-04-04 16:56:52,575 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:616]
2025-04-04 16:56:52,575 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:619]
2025-04-04 16:56:52,575 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:56:52,576 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:619]
2025-04-04 16:56:52,576 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:56:52,576 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:619]
2025-04-04 16:56:52,576 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:56:52,577 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:619]
2025-04-04 16:56:52,577 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:56:52,577 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:619]
2025-04-04 16:56:52,577 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:56:52,578 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 16:56:52,578 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:56:52,578 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 16:56:52,578 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 16:56:52,578 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 16:56:52,579 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 16:56:52,579 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:631]
2025-04-04 16:56:54,292 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 16:56:54,292 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 16:56:54,294 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 16:56:54,294 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 16:56:54,299 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 16:56:54,299 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 16:56:54,300 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 16:56:54,300 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 16:56:54,300 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 16:56:54,329 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 16:56:54,329 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 16:56:54,350 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 16:56:54,351 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 16:56:54,352 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 16:56:54,353 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 16:56:54,353 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 16:56:54,353 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 16:56:54,353 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 16:56:54,353 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 16:56:54,353 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 16:56:54,354 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 16:56:54,354 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 16:56:54,354 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 16:56:54,354 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 16:56:54,354 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 16:56:54,354 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 16:56:54,354 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 16:56:54,355 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 16:56:54,355 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 16:56:54,355 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 16:56:54,355 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 16:56:54,355 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 16:56:54,355 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 16:56:54,355 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 16:56:54,355 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 16:56:54,355 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 16:56:54,358 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 16:56:54,358 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 16:56:54,359 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 16:56:54,359 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 16:56:54,359 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 16:56:54,359 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 16:56:54,359 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 16:56:54,360 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 16:56:54,360 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 16:56:54,360 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:222]
2025-04-04 16:56:54,360 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 16:56:54,360 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 16:56:54,360 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 16:56:54,361 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 16:56:54,361 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 16:56:54,361 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:239]
2025-04-04 16:56:54,361 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-04 16:56:56,701 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 16:56:56,701 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 16:56:56,701 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-04 16:56:56,701 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 16:56:56,702 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-04 16:56:56,702 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 16:56:56,702 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:56:56,703 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 16:56:56,703 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 16:56:56,703 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 16:56:56,703 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-04 16:57:00,569 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 16:57:01,301 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:57:01,302 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 16:57:01,302 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 16:57:01,975 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 16:57:01,976 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 16:57:01,977 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 16:57:01,979 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 16:57:01,979 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 16:57:02,005 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 16:57:02,007 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 16:57:02,007 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 16:57:02,008 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 16:57:03,017 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 16:57:03,059 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-04 16:57:09,633 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:619]
2025-04-04 16:57:09,634 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:57:09,634 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:619]
2025-04-04 16:57:09,634 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:57:09,634 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 16:57:09,635 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:57:09,635 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 16:57:09,635 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 16:57:09,635 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 16:57:09,636 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 16:57:09,636 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:649]
2025-04-04 16:57:11,794 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 16:57:11,795 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 16:57:11,797 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 16:57:11,798 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 16:57:11,803 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 16:57:11,803 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 16:57:11,804 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 16:57:11,804 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 16:57:11,804 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 16:57:11,804 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 16:57:11,805 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 16:57:11,821 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 16:57:11,822 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 16:57:11,823 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 16:57:11,824 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 16:57:11,826 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 16:57:11,826 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 16:57:11,826 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 16:57:11,827 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 16:57:11,827 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 16:57:11,827 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 16:57:11,827 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 16:57:11,827 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 16:57:11,827 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 16:57:11,827 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 16:57:11,827 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 16:57:11,828 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 16:57:11,828 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 16:57:11,828 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 16:57:11,828 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 16:57:11,828 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 16:57:11,828 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 16:57:11,828 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 16:57:11,828 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 16:57:11,829 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 16:57:11,829 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:121]
2025-04-04 16:57:11,829 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:123]
2025-04-04 16:57:11,829 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-04 16:57:11,829 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 16:57:11,833 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 16:57:11,834 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 16:57:11,835 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 16:57:11,835 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 16:57:11,835 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 16:57:11,836 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 16:57:11,836 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 16:57:11,837 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 16:57:11,837 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 16:57:11,837 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:222]
2025-04-04 16:57:11,837 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 16:57:11,837 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 16:57:11,837 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 16:57:11,838 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 16:57:11,838 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 16:57:11,838 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:239]
2025-04-04 16:57:11,838 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-04 16:57:14,379 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 16:57:14,380 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 16:57:14,381 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-04 16:57:14,381 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 16:57:14,383 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-04 16:57:14,383 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 16:57:14,384 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:57:14,385 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 16:57:14,385 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 16:57:14,385 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 16:57:14,385 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-04 16:57:18,280 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 16:57:18,925 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:57:18,926 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:210]
2025-04-04 16:57:18,927 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:381]
2025-04-04 16:57:18,927 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:382]
2025-04-04 16:57:18,940 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-04 16:57:18,941 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-04 16:57:18,941 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 16:57:18,946 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-04 16:57:19,580 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:57:19,581 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [runner.py:386]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 384, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 16:57:19,585 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 16:57:19,586 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 16:57:20,373 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 16:57:20,374 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 16:57:20,376 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 16:57:20,378 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 16:57:20,379 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 16:57:20,398 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 16:57:20,402 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 16:57:20,403 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 16:57:20,403 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 16:57:21,640 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 16:57:21,699 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-04 16:57:28,221 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-04 16:57:28,222 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-04 16:57:28,269 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-04 16:57:28,272 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-04 16:57:28,289 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-04 16:57:28,290 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-04 16:57:28,291 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-04 16:57:28,291 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-04 16:57:29,154 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-04 16:59:47,732 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-04 16:59:47,732 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-04 16:59:47,734 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:526]
2025-04-04 16:59:47,734 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:552]
2025-04-04 16:59:47,736 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:563]
2025-04-04 16:59:47,737 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:568]
2025-04-04 16:59:47,738 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-04 16:59:47,739 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-04 16:59:47,740 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-04 16:59:47,740 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:573]
2025-04-04 16:59:47,741 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:575]
2025-04-04 16:59:47,742 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:582]
2025-04-04 16:59:47,743 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:602]
2025-04-04 16:59:47,743 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:608]
2025-04-04 16:59:47,744 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:616]
2025-04-04 16:59:47,744 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:619]
2025-04-04 16:59:47,744 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:59:47,744 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:619]
2025-04-04 16:59:47,745 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:59:47,745 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:619]
2025-04-04 16:59:47,745 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:59:47,745 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:619]
2025-04-04 16:59:47,745 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:59:47,746 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:619]
2025-04-04 16:59:47,746 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:59:47,746 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 16:59:47,746 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 16:59:47,746 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 16:59:47,748 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 16:59:47,748 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 16:59:47,749 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 16:59:47,749 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:631]
2025-04-04 16:59:47,760 - WafLogger - DEBUG - Starting the execution recording. [runner.py:637]
2025-04-04 16:59:47,761 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-04 16:59:47,763 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-04 16:59:47,763 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-04 16:59:48,001 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-04 16:59:49,903 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 16:59:49,904 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 16:59:49,908 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 16:59:49,908 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 16:59:49,913 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 16:59:49,913 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 16:59:49,914 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 16:59:49,915 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 16:59:49,915 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 16:59:49,915 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 16:59:49,915 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 16:59:49,926 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 16:59:49,950 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 16:59:49,951 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 16:59:49,952 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 16:59:49,953 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 16:59:49,953 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 16:59:49,953 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 16:59:49,953 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 16:59:49,953 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 16:59:49,954 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 16:59:49,954 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 16:59:49,954 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 16:59:49,954 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 16:59:49,955 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 16:59:49,955 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 16:59:49,955 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 16:59:49,955 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 16:59:49,955 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 16:59:49,956 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 16:59:49,956 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 16:59:49,956 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 16:59:49,956 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 16:59:49,957 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 16:59:49,957 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 16:59:49,957 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 16:59:49,960 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 16:59:49,960 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 16:59:49,961 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 16:59:49,961 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 16:59:49,961 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 16:59:49,962 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 16:59:49,962 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 16:59:49,963 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 16:59:49,963 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 16:59:49,963 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:222]
2025-04-04 16:59:49,963 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 16:59:49,963 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 16:59:49,964 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 16:59:49,964 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 16:59:49,964 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 16:59:49,964 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:239]
2025-04-04 16:59:49,964 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-04 16:59:52,655 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 16:59:52,655 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 16:59:52,655 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-04 16:59:52,655 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 16:59:52,656 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-04 16:59:52,656 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 16:59:53,107 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:59:53,108 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 16:59:53,109 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 16:59:53,109 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 16:59:53,109 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-04 16:59:56,769 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 16:59:57,004 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 16:59:57,004 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 16:59:57,005 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 16:59:57,851 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 16:59:57,851 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 16:59:57,853 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 16:59:57,856 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 16:59:57,857 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 16:59:57,892 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 16:59:57,912 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 16:59:57,912 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 16:59:57,913 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 17:00:00,072 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 17:00:00,140 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-04 17:00:06,815 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-04 17:00:08,746 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:619]
2025-04-04 17:00:08,747 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:00:08,747 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:619]
2025-04-04 17:00:08,747 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:00:08,748 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 17:00:08,748 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:00:08,748 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 17:00:08,748 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 17:00:08,749 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 17:00:08,749 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 17:00:08,749 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:649]
2025-04-04 17:00:08,752 - WafLogger - DEBUG - Starting the execution recording. [runner.py:655]
2025-04-04 17:00:08,753 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-04 17:00:08,753 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-04 17:00:08,753 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-04 17:00:08,755 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-04 17:00:11,045 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 17:00:11,045 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 17:00:11,049 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 17:00:11,050 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 17:00:11,054 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 17:00:11,054 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 17:00:11,055 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 17:00:11,056 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 17:00:11,056 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 17:00:11,056 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 17:00:11,056 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 17:00:11,073 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 17:00:11,074 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 17:00:11,075 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 17:00:11,076 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 17:00:11,077 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 17:00:11,077 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 17:00:11,077 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 17:00:11,078 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 17:00:11,078 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 17:00:11,078 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 17:00:11,078 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 17:00:11,079 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 17:00:11,079 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 17:00:11,079 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 17:00:11,079 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 17:00:11,079 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 17:00:11,079 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 17:00:11,080 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 17:00:11,080 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 17:00:11,080 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 17:00:11,080 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 17:00:11,080 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 17:00:11,081 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 17:00:11,081 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 17:00:11,081 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:121]
2025-04-04 17:00:11,081 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:123]
2025-04-04 17:00:11,081 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-04 17:00:11,081 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 17:00:11,085 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 17:00:11,086 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 17:00:11,086 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 17:00:11,087 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 17:00:11,087 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 17:00:11,088 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 17:00:11,088 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 17:00:11,088 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 17:00:11,088 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 17:00:11,088 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:222]
2025-04-04 17:00:11,089 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 17:00:11,089 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 17:00:11,089 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 17:00:11,089 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 17:00:11,089 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 17:00:11,089 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:239]
2025-04-04 17:00:11,089 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-04 17:00:14,506 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 17:00:14,509 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 17:00:14,511 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-04 17:00:14,512 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 17:00:14,513 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-04 17:00:14,515 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 17:00:14,951 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:00:14,952 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 17:00:14,952 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 17:00:14,953 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 17:00:14,953 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-04 17:00:18,117 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 17:00:18,498 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:00:18,507 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:210]
2025-04-04 17:00:18,515 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:381]
2025-04-04 17:00:18,516 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:382]
2025-04-04 17:00:18,575 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-04 17:00:18,576 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-04 17:00:18,578 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 17:00:18,584 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-04 17:00:18,868 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:00:18,870 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [runner.py:386]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 384, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 17:00:18,876 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 17:00:18,877 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 17:00:19,583 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 17:00:19,583 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 17:00:19,586 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 17:00:19,587 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 17:00:19,588 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 17:00:19,604 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 17:00:19,630 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 17:00:19,630 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 17:00:19,631 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 17:00:22,017 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 17:00:22,077 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-04 17:00:28,790 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-04 17:00:30,649 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-04 17:00:30,650 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-04 17:00:30,701 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-04 17:00:30,703 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-04 17:00:30,766 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-04 17:00:30,768 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-04 17:00:30,769 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-04 17:00:30,770 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-04 17:00:31,641 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-04 17:02:45,852 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-04 17:02:45,852 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-04 17:02:45,853 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:526]
2025-04-04 17:02:45,853 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:552]
2025-04-04 17:02:45,855 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:563]
2025-04-04 17:02:45,855 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:568]
2025-04-04 17:02:45,859 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-04 17:02:45,863 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-04 17:02:45,865 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-04 17:02:45,865 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:573]
2025-04-04 17:02:45,865 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:575]
2025-04-04 17:02:45,866 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:582]
2025-04-04 17:02:45,867 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:602]
2025-04-04 17:02:45,867 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:608]
2025-04-04 17:02:45,867 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:616]
2025-04-04 17:02:45,868 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:619]
2025-04-04 17:02:45,868 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:02:45,868 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:619]
2025-04-04 17:02:45,868 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:02:45,868 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:619]
2025-04-04 17:02:45,868 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:02:45,868 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:619]
2025-04-04 17:02:45,869 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:02:45,869 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:619]
2025-04-04 17:02:45,869 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:02:45,869 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 17:02:45,869 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:02:45,869 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 17:02:45,869 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 17:02:45,869 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 17:02:45,869 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 17:02:45,870 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:631]
2025-04-04 17:02:45,878 - WafLogger - DEBUG - Starting the execution recording. [runner.py:637]
2025-04-04 17:02:45,879 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-04 17:02:45,879 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-04 17:02:45,879 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-04 17:02:45,884 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-04 17:02:48,238 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 17:02:48,238 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 17:02:48,240 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 17:02:48,241 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 17:02:48,244 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 17:02:48,245 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 17:02:48,246 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 17:02:48,246 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 17:02:48,246 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 17:02:48,246 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 17:02:48,246 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 17:02:48,257 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 17:02:48,258 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 17:02:48,259 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 17:02:48,260 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 17:02:48,261 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 17:02:48,261 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 17:02:48,262 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 17:02:48,262 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 17:02:48,262 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 17:02:48,262 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 17:02:48,262 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 17:02:48,262 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 17:02:48,263 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 17:02:48,263 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 17:02:48,263 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 17:02:48,263 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 17:02:48,263 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 17:02:48,263 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 17:02:48,264 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 17:02:48,264 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 17:02:48,264 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 17:02:48,265 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 17:02:48,265 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 17:02:48,265 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 17:02:48,265 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 17:02:48,267 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 17:02:48,268 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 17:02:48,268 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 17:02:48,269 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 17:02:48,269 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 17:02:48,269 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 17:02:48,270 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 17:02:48,270 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 17:02:48,270 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 17:02:48,270 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:222]
2025-04-04 17:02:48,271 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 17:02:48,271 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 17:02:48,271 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 17:02:48,271 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 17:02:48,272 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 17:02:48,272 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:239]
2025-04-04 17:02:48,272 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-04 17:02:50,928 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 17:02:50,930 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 17:02:50,931 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-04 17:02:50,932 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 17:02:50,932 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-04 17:02:50,933 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 17:02:51,480 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:02:51,482 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 17:02:51,482 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 17:02:51,483 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 17:02:51,483 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-04 17:02:55,082 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 17:02:55,280 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:02:55,281 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 17:02:55,281 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 17:02:56,018 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 17:02:56,019 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 17:02:56,023 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 17:02:56,025 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 17:02:56,026 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 17:02:56,043 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 17:02:56,064 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 17:02:56,064 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 17:02:56,065 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 17:02:57,829 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 17:02:57,903 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-04 17:03:04,659 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-04 17:03:06,906 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:619]
2025-04-04 17:03:06,906 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:03:06,906 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:619]
2025-04-04 17:03:06,907 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:03:06,907 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 17:03:06,907 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:03:06,907 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 17:03:06,907 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 17:03:06,908 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 17:03:06,908 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 17:03:06,908 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:649]
2025-04-04 17:03:06,911 - WafLogger - DEBUG - Starting the execution recording. [runner.py:655]
2025-04-04 17:03:06,913 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-04 17:03:06,913 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-04 17:03:06,913 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-04 17:03:06,915 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-04 17:03:08,913 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 17:03:08,913 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 17:03:08,916 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 17:03:08,917 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 17:03:08,922 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 17:03:08,922 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 17:03:08,924 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 17:03:08,924 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 17:03:08,924 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 17:03:08,925 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 17:03:08,925 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 17:03:08,940 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 17:03:08,941 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 17:03:08,942 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 17:03:08,942 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 17:03:08,943 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 17:03:08,943 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 17:03:08,943 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 17:03:08,943 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 17:03:08,944 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 17:03:08,944 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 17:03:08,944 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 17:03:08,944 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 17:03:08,945 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 17:03:08,945 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 17:03:08,945 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 17:03:08,945 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 17:03:08,946 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 17:03:08,946 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 17:03:08,946 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 17:03:08,946 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 17:03:08,947 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 17:03:08,947 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 17:03:08,947 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 17:03:08,947 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 17:03:08,947 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:121]
2025-04-04 17:03:08,948 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:123]
2025-04-04 17:03:08,948 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-04 17:03:08,948 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 17:03:08,951 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 17:03:08,951 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 17:03:08,952 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 17:03:08,952 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 17:03:08,952 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 17:03:08,952 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 17:03:08,953 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 17:03:08,953 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 17:03:08,953 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 17:03:08,953 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:222]
2025-04-04 17:03:08,953 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 17:03:08,954 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 17:03:08,954 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 17:03:08,954 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 17:03:08,954 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 17:03:08,955 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:239]
2025-04-04 17:03:08,955 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-04 17:03:11,793 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 17:03:11,794 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 17:03:11,794 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-04 17:03:11,794 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 17:03:11,795 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-04 17:03:11,795 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 17:03:12,283 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:03:12,285 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 17:03:12,285 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 17:03:12,285 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 17:03:12,286 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-04 17:03:15,812 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 17:03:15,998 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:03:15,999 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:210]
2025-04-04 17:03:16,000 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:381]
2025-04-04 17:03:16,000 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:382]
2025-04-04 17:03:16,047 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-04 17:03:16,047 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-04 17:03:16,048 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 17:03:16,054 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-04 17:03:16,240 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:03:16,241 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [runner.py:386]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 384, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 17:03:16,247 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 17:03:16,247 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 17:03:17,153 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 17:03:17,154 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 17:03:17,157 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 17:03:17,159 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 17:03:17,161 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 17:03:17,186 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 17:03:17,211 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 17:03:17,213 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 17:03:17,213 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 17:03:19,383 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 17:03:19,460 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-04 17:03:26,227 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-04 17:03:28,183 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-04 17:03:28,183 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-04 17:03:28,217 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-04 17:03:28,217 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-04 17:03:28,229 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-04 17:03:28,231 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-04 17:03:28,231 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-04 17:03:28,231 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-04 17:03:29,109 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-04 17:04:51,496 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-04 17:04:51,497 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-04 17:04:51,499 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:526]
2025-04-04 17:04:51,499 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:552]
2025-04-04 17:04:51,501 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:563]
2025-04-04 17:04:51,501 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:568]
2025-04-04 17:04:51,503 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-04 17:04:51,507 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-04 17:04:51,508 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-04 17:04:51,508 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:573]
2025-04-04 17:04:51,509 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:575]
2025-04-04 17:04:51,510 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:582]
2025-04-04 17:04:51,510 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:602]
2025-04-04 17:04:51,511 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:608]
2025-04-04 17:04:51,511 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:616]
2025-04-04 17:04:51,511 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:619]
2025-04-04 17:04:51,512 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:04:51,512 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:619]
2025-04-04 17:04:51,512 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:04:51,512 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:619]
2025-04-04 17:04:51,512 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:04:51,512 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:619]
2025-04-04 17:04:51,512 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:04:51,512 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:619]
2025-04-04 17:04:51,513 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:04:51,513 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 17:04:51,513 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:04:51,513 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 17:04:51,513 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 17:04:51,513 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 17:04:51,513 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 17:04:51,513 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:631]
2025-04-04 17:04:51,522 - WafLogger - DEBUG - Starting the execution recording. [runner.py:637]
2025-04-04 17:04:51,523 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-04 17:04:51,523 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-04 17:04:51,524 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-04 17:04:51,528 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-04 17:04:53,843 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 17:04:53,843 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 17:04:53,846 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 17:04:53,847 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 17:04:53,851 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 17:04:53,852 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 17:04:53,853 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 17:04:53,853 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 17:04:53,853 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 17:04:53,854 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 17:04:53,854 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 17:04:53,871 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 17:04:53,872 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 17:04:53,873 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 17:04:53,873 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 17:04:53,874 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 17:04:53,874 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 17:04:53,875 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 17:04:53,876 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 17:04:53,876 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 17:04:53,876 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 17:04:53,877 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 17:04:53,877 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 17:04:53,877 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 17:04:53,877 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 17:04:53,877 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 17:04:53,877 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 17:04:53,878 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 17:04:53,878 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 17:04:53,878 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 17:04:53,878 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 17:04:53,878 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 17:04:53,878 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 17:04:53,879 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 17:04:53,879 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 17:04:53,879 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 17:04:53,883 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 17:04:53,884 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 17:04:53,884 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 17:04:53,884 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 17:04:53,885 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 17:04:53,885 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 17:04:53,885 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 17:04:53,885 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 17:04:53,885 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 17:04:53,885 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:222]
2025-04-04 17:04:53,886 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 17:04:53,886 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 17:04:53,886 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 17:04:53,886 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 17:04:53,886 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 17:04:53,886 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:239]
2025-04-04 17:04:53,886 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-04 17:04:56,523 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 17:04:56,525 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 17:04:56,525 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-04 17:04:56,525 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 17:04:56,526 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-04 17:04:56,526 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 17:04:56,931 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:04:56,932 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 17:04:56,933 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 17:04:56,933 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 17:04:56,933 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-04 17:05:00,131 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 17:05:00,375 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:05:00,375 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 17:05:00,376 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 17:05:01,197 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 17:05:01,198 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 17:05:01,200 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 17:05:01,202 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 17:05:01,204 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 17:05:01,227 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 17:05:01,244 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 17:05:01,244 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 17:05:01,244 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 17:05:03,111 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 17:05:03,175 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-04 17:05:09,871 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-04 17:05:11,688 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:619]
2025-04-04 17:05:11,688 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:05:11,688 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:619]
2025-04-04 17:05:11,689 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:05:11,689 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:619]
2025-04-04 17:05:11,689 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:620]
2025-04-04 17:05:11,689 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:623]
2025-04-04 17:05:11,689 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:624]
2025-04-04 17:05:11,689 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:628]
2025-04-04 17:05:11,689 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:629]
2025-04-04 17:05:11,690 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:649]
2025-04-04 17:05:11,692 - WafLogger - DEBUG - Starting the execution recording. [runner.py:655]
2025-04-04 17:05:11,693 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-04 17:05:11,694 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-04 17:05:11,694 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-04 17:05:11,696 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-04 17:05:13,863 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-04 17:05:13,863 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-04 17:05:13,865 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-04 17:05:13,865 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-04 17:05:13,869 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-04 17:05:13,869 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-04 17:05:13,870 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-04 17:05:13,870 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-04 17:05:13,870 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-04 17:05:13,870 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-04 17:05:13,870 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-04 17:05:13,884 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-04 17:05:13,884 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-04 17:05:13,885 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-04 17:05:13,886 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-04 17:05:13,886 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-04 17:05:13,886 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-04 17:05:13,886 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-04 17:05:13,887 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-04 17:05:13,887 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-04 17:05:13,887 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-04 17:05:13,887 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-04 17:05:13,888 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-04 17:05:13,888 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-04 17:05:13,888 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-04 17:05:13,888 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-04 17:05:13,889 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-04 17:05:13,889 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-04 17:05:13,889 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-04 17:05:13,889 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-04 17:05:13,890 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-04 17:05:13,890 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-04 17:05:13,890 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-04 17:05:13,891 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-04 17:05:13,891 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-04 17:05:13,891 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:121]
2025-04-04 17:05:13,891 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:123]
2025-04-04 17:05:13,892 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-04 17:05:13,892 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-04 17:05:13,895 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-04 17:05:13,895 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-04 17:05:13,896 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-04 17:05:13,896 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-04 17:05:13,897 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-04 17:05:13,898 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-04 17:05:13,899 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-04 17:05:13,900 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-04 17:05:13,900 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-04 17:05:13,900 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:222]
2025-04-04 17:05:13,901 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-04 17:05:13,901 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-04 17:05:13,901 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-04 17:05:13,901 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-04 17:05:13,902 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-04 17:05:13,902 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:239]
2025-04-04 17:05:13,902 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-04 17:05:16,639 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-04 17:05:16,640 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-04 17:05:16,642 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-04 17:05:16,645 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-04 17:05:16,645 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-04 17:05:16,645 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-04 17:05:17,125 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:05:17,126 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-04 17:05:17,127 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-04 17:05:17,128 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-04 17:05:17,128 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-04 17:05:21,124 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-04 17:05:21,327 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:05:21,329 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:210]
2025-04-04 17:05:21,330 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:381]
2025-04-04 17:05:21,331 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:382]
2025-04-04 17:05:21,347 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-04 17:05:21,348 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-04 17:05:21,348 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 17:05:21,353 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-04 17:05:21,564 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-04 17:05:21,565 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]
 [runner.py:386]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 384, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF780D3A545+20677]
	simdutf::get_active_implementation [0x00007FF780C96CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780F8D75A+1807418]
	(No symbol) [0x00007FF780AD72AC]
	(No symbol) [0x00007FF780AD758B]
	(No symbol) [0x00007FF780B185A7]
	(No symbol) [0x00007FF780AF849F]
	(No symbol) [0x00007FF780ACD6ED]
	(No symbol) [0x00007FF780B15D61]
	(No symbol) [0x00007FF780AF81C3]
	(No symbol) [0x00007FF780ACCC36]
	(No symbol) [0x00007FF780ACC0C4]
	(No symbol) [0x00007FF780ACCA63]
	(No symbol) [0x00007FF780BB5BDD]
	(No symbol) [0x00007FF780BC2042]
	(No symbol) [0x00007FF780BBAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF780E142AA+262026]
	simdutf::get_active_implementation [0x00007FF780CA4421+546385]
	simdutf::get_active_implementation [0x00007FF780C9D6D4+518404]
	simdutf::get_active_implementation [0x00007FF780C9D819+518729]
	simdutf::get_active_implementation [0x00007FF780C8F3C6+460278]
	BaseThreadInitThunk [0x00007FFC60FFE8D7+23]
	RtlUserThreadStart [0x00007FFC6323BF6C+44]

2025-04-04 17:05:21,570 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-04 17:05:21,571 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-04 17:05:22,607 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-04 17:05:22,607 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-04 17:05:22,609 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-04 17:05:22,612 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-04 17:05:22,615 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-04 17:05:22,651 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-04 17:05:22,677 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-04 17:05:22,677 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-04 17:05:22,677 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-04 17:05:24,990 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-04 17:05:25,060 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-04 17:05:31,709 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-04 17:05:33,550 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-04 17:05:33,551 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-04 17:05:33,592 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-04 17:05:33,594 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-04 17:05:33,610 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-04 17:05:33,613 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-04 17:05:33,613 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-04 17:05:33,614 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-04 17:05:34,485 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-05 12:24:47,161 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-05 12:24:47,181 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-05 12:24:47,184 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:527]
2025-04-05 12:24:59,651 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-05 12:24:59,651 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-05 12:24:59,653 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:527]
2025-04-05 12:25:34,327 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-05 12:25:34,327 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-05 12:25:34,329 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:527]
2025-04-05 12:25:34,330 - WafLogger - ERROR - The syntax for running is 'runner.exe start' or to check the version use 'runner.exe --version' [runner.py:687]
2025-04-05 12:28:26,789 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-05 12:28:26,790 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-05 12:28:26,792 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:527]
2025-04-05 12:28:26,793 - WafLogger - DEBUG - Version: 3.0 [runner.py:550]
2025-04-05 12:28:47,053 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-05 12:28:47,054 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-05 12:28:47,055 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:527]
2025-04-05 12:28:47,056 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:553]
2025-04-05 12:28:47,059 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:564]
2025-04-05 12:28:47,059 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:569]
2025-04-05 12:28:47,237 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 12:28:47,239 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 12:28:47,240 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 12:28:47,241 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:574]
2025-04-05 12:28:47,241 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:576]
2025-04-05 12:28:47,243 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:583]
2025-04-05 12:28:47,249 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:603]
2025-04-05 12:28:47,249 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:609]
2025-04-05 12:28:47,249 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:617]
2025-04-05 12:28:47,250 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:620]
2025-04-05 12:28:47,250 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:28:47,250 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:620]
2025-04-05 12:28:47,254 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:28:47,255 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:620]
2025-04-05 12:28:47,255 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:28:47,255 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:620]
2025-04-05 12:28:47,255 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:28:47,255 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:620]
2025-04-05 12:28:47,255 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:28:47,255 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:620]
2025-04-05 12:28:47,255 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:28:47,255 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:624]
2025-04-05 12:28:47,256 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:625]
2025-04-05 12:28:47,256 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:629]
2025-04-05 12:28:47,256 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:630]
2025-04-05 12:28:47,256 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:632]
2025-04-05 12:28:47,266 - WafLogger - DEBUG - Starting the execution recording. [runner.py:638]
2025-04-05 12:28:47,267 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-05 12:28:47,269 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-05 12:28:47,269 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-05 12:28:47,440 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-05 12:28:49,629 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-05 12:28:49,630 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 12:28:49,632 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-05 12:28:49,632 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-05 12:28:49,687 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-05 12:28:49,688 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-05 12:28:49,689 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-05 12:28:49,690 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-05 12:28:49,690 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-05 12:28:49,733 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-05 12:28:49,733 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-05 12:28:49,775 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-05 12:28:49,783 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-05 12:28:49,785 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-05 12:28:49,787 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-05 12:28:49,787 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-05 12:28:49,787 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 12:28:49,788 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-05 12:28:49,788 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-05 12:28:49,788 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-05 12:28:49,789 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 12:28:49,789 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-05 12:28:49,789 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-05 12:28:49,789 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-05 12:28:49,789 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 12:28:49,790 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-05 12:28:49,790 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-05 12:28:49,790 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-05 12:28:49,790 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 12:28:49,791 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-05 12:28:49,791 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-05 12:28:49,791 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-05 12:28:49,791 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-05 12:28:49,791 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 12:28:49,791 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-05 12:28:49,791 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-05 12:28:49,794 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-05 12:28:49,795 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-05 12:28:49,795 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-05 12:28:49,796 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 12:28:49,796 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-05 12:28:49,797 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-05 12:28:49,797 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 12:28:49,797 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-05 12:28:49,798 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-05 12:28:49,798 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:222]
2025-04-05 12:28:49,798 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 12:28:49,799 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 12:28:49,799 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-05 12:28:49,799 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-05 12:28:49,800 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-05 12:28:49,800 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:239]
2025-04-05 12:28:49,800 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 12:28:58,698 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 12:28:58,699 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 12:28:58,699 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 12:28:58,700 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 12:28:58,701 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 12:28:58,701 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 12:28:59,292 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:28:59,293 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-05 12:28:59,294 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-05 12:28:59,294 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 12:28:59,294 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 12:29:02,642 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 12:29:02,864 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:29:02,867 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-05 12:29:02,868 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-05 12:29:04,843 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-05 12:29:04,843 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 12:29:04,847 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 12:29:04,849 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 12:29:04,896 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 12:29:04,990 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 12:29:04,998 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 12:29:04,999 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 12:29:04,999 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 12:29:07,303 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 12:29:07,382 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 12:29:15,567 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-05 12:29:18,551 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:620]
2025-04-05 12:29:18,551 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:29:18,551 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:620]
2025-04-05 12:29:18,551 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:29:18,552 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:620]
2025-04-05 12:29:18,552 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:29:18,552 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:624]
2025-04-05 12:29:18,552 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:625]
2025-04-05 12:29:18,554 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:629]
2025-04-05 12:29:18,554 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:630]
2025-04-05 12:29:18,554 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:650]
2025-04-05 12:29:18,558 - WafLogger - DEBUG - Starting the execution recording. [runner.py:656]
2025-04-05 12:29:18,559 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-05 12:29:18,560 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-05 12:29:18,560 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-05 12:29:18,563 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-05 12:29:20,896 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-05 12:29:20,897 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 12:29:20,899 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-05 12:29:20,899 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-05 12:29:20,905 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-05 12:29:20,906 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-05 12:29:20,907 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-05 12:29:20,907 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-05 12:29:20,908 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-05 12:29:20,948 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-05 12:29:20,949 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-05 12:29:20,977 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-05 12:29:20,978 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-05 12:29:20,979 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-05 12:29:20,980 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-05 12:29:20,981 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-05 12:29:20,981 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 12:29:20,981 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-05 12:29:20,981 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-05 12:29:20,981 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-05 12:29:20,981 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 12:29:20,982 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-05 12:29:20,982 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-05 12:29:20,982 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-05 12:29:20,982 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 12:29:20,982 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-05 12:29:20,983 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-05 12:29:20,983 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-05 12:29:20,983 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 12:29:20,983 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-05 12:29:20,983 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-05 12:29:20,983 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-05 12:29:20,984 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-05 12:29:20,984 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 12:29:20,984 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-05 12:29:20,985 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:121]
2025-04-05 12:29:20,985 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:123]
2025-04-05 12:29:20,985 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 12:29:20,986 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-05 12:29:20,989 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-05 12:29:20,989 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-05 12:29:20,990 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-05 12:29:20,990 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 12:29:20,990 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-05 12:29:20,990 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-05 12:29:20,990 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 12:29:20,991 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-05 12:29:20,991 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-05 12:29:20,991 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:222]
2025-04-05 12:29:20,991 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 12:29:20,991 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 12:29:20,992 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-05 12:29:20,992 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-05 12:29:20,992 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-05 12:29:20,992 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:239]
2025-04-05 12:29:20,992 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 12:29:29,988 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 12:29:29,996 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 12:29:30,001 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 12:29:30,003 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 12:29:30,003 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 12:29:30,003 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 12:29:30,650 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:29:30,652 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-05 12:29:30,652 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-05 12:29:30,653 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 12:29:30,653 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 12:29:34,243 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 12:29:34,810 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:29:34,812 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:210]
2025-04-05 12:29:34,813 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:381]
2025-04-05 12:29:34,813 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:382]
2025-04-05 12:29:34,868 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 12:29:34,868 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 12:29:34,868 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7AB3DA545+20677]
	simdutf::get_active_implementation [0x00007FF7AB336CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7AB62D75A+1807418]
	(No symbol) [0x00007FF7AB1772AC]
	(No symbol) [0x00007FF7AB17758B]
	(No symbol) [0x00007FF7AB1B85A7]
	(No symbol) [0x00007FF7AB19849F]
	(No symbol) [0x00007FF7AB16D6ED]
	(No symbol) [0x00007FF7AB1B5D61]
	(No symbol) [0x00007FF7AB1981C3]
	(No symbol) [0x00007FF7AB16CC36]
	(No symbol) [0x00007FF7AB16C0C4]
	(No symbol) [0x00007FF7AB16CA63]
	(No symbol) [0x00007FF7AB255BDD]
	(No symbol) [0x00007FF7AB262042]
	(No symbol) [0x00007FF7AB25AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7AB4B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7AB344421+546385]
	simdutf::get_active_implementation [0x00007FF7AB33D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7AB33D819+518729]
	simdutf::get_active_implementation [0x00007FF7AB32F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7AB3DA545+20677]
	simdutf::get_active_implementation [0x00007FF7AB336CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7AB62D75A+1807418]
	(No symbol) [0x00007FF7AB1772AC]
	(No symbol) [0x00007FF7AB17758B]
	(No symbol) [0x00007FF7AB1B85A7]
	(No symbol) [0x00007FF7AB19849F]
	(No symbol) [0x00007FF7AB16D6ED]
	(No symbol) [0x00007FF7AB1B5D61]
	(No symbol) [0x00007FF7AB1981C3]
	(No symbol) [0x00007FF7AB16CC36]
	(No symbol) [0x00007FF7AB16C0C4]
	(No symbol) [0x00007FF7AB16CA63]
	(No symbol) [0x00007FF7AB255BDD]
	(No symbol) [0x00007FF7AB262042]
	(No symbol) [0x00007FF7AB25AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7AB4B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7AB344421+546385]
	simdutf::get_active_implementation [0x00007FF7AB33D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7AB33D819+518729]
	simdutf::get_active_implementation [0x00007FF7AB32F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 12:29:35,126 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 12:29:35,466 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:29:35,470 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7AB3DA545+20677]
	simdutf::get_active_implementation [0x00007FF7AB336CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7AB62D75A+1807418]
	(No symbol) [0x00007FF7AB1772AC]
	(No symbol) [0x00007FF7AB17758B]
	(No symbol) [0x00007FF7AB1B85A7]
	(No symbol) [0x00007FF7AB19849F]
	(No symbol) [0x00007FF7AB16D6ED]
	(No symbol) [0x00007FF7AB1B5D61]
	(No symbol) [0x00007FF7AB1981C3]
	(No symbol) [0x00007FF7AB16CC36]
	(No symbol) [0x00007FF7AB16C0C4]
	(No symbol) [0x00007FF7AB16CA63]
	(No symbol) [0x00007FF7AB255BDD]
	(No symbol) [0x00007FF7AB262042]
	(No symbol) [0x00007FF7AB25AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7AB4B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7AB344421+546385]
	simdutf::get_active_implementation [0x00007FF7AB33D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7AB33D819+518729]
	simdutf::get_active_implementation [0x00007FF7AB32F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:386]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 384, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7AB3DA545+20677]
	simdutf::get_active_implementation [0x00007FF7AB336CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7AB62D75A+1807418]
	(No symbol) [0x00007FF7AB1772AC]
	(No symbol) [0x00007FF7AB17758B]
	(No symbol) [0x00007FF7AB1B85A7]
	(No symbol) [0x00007FF7AB19849F]
	(No symbol) [0x00007FF7AB16D6ED]
	(No symbol) [0x00007FF7AB1B5D61]
	(No symbol) [0x00007FF7AB1981C3]
	(No symbol) [0x00007FF7AB16CC36]
	(No symbol) [0x00007FF7AB16C0C4]
	(No symbol) [0x00007FF7AB16CA63]
	(No symbol) [0x00007FF7AB255BDD]
	(No symbol) [0x00007FF7AB262042]
	(No symbol) [0x00007FF7AB25AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7AB4B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7AB344421+546385]
	simdutf::get_active_implementation [0x00007FF7AB33D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7AB33D819+518729]
	simdutf::get_active_implementation [0x00007FF7AB32F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 12:29:35,482 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-05 12:29:35,482 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-05 12:29:37,206 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-05 12:29:37,207 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 12:29:37,211 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 12:29:37,215 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 12:29:37,218 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 12:29:37,259 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 12:29:37,277 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 12:29:37,278 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 12:29:37,279 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 12:29:39,027 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 12:29:39,405 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 12:29:46,955 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-05 12:29:49,608 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-05 12:29:49,609 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-05 12:29:49,675 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-05 12:29:49,676 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-05 12:29:49,884 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-05 12:29:49,886 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-05 12:29:49,887 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-05 12:29:49,888 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-05 12:29:50,864 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-05 12:30:15,259 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-05 12:30:15,259 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-05 12:30:15,261 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:527]
2025-04-05 12:30:15,262 - WafLogger - ERROR - Only one of '--start', --start-parallel, '--version', or '--encrypt-file' can be used at a time. [runner.py:532]
2025-04-05 12:38:11,618 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-05 12:38:11,618 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-05 12:38:11,619 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:527]
2025-04-05 12:38:11,621 - WafLogger - ERROR - Only one of '--start', --start-parallel, '--version', or '--encrypt-file' can be used at a time. [runner.py:532]
2025-04-05 12:38:20,182 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-05 12:38:20,182 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-05 12:38:20,184 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:527]
2025-04-05 12:38:20,184 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:553]
2025-04-05 12:38:20,185 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:560]
2025-04-05 12:39:32,619 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:516]
2025-04-05 12:39:32,619 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:518]
2025-04-05 12:39:32,621 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:527]
2025-04-05 12:39:32,622 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:553]
2025-04-05 12:39:32,623 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:561]
2025-04-05 12:39:32,623 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:564]
2025-04-05 12:39:32,677 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 12:39:32,688 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 12:39:32,690 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 12:39:32,691 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:569]
2025-04-05 12:39:32,691 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:571]
2025-04-05 12:39:32,692 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:578]
2025-04-05 12:39:32,693 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:598]
2025-04-05 12:39:32,693 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:604]
2025-04-05 12:39:32,694 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:612]
2025-04-05 12:39:32,694 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:615]
2025-04-05 12:39:32,694 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:616]
2025-04-05 12:39:32,694 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:615]
2025-04-05 12:39:32,695 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:616]
2025-04-05 12:39:32,695 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:615]
2025-04-05 12:39:32,695 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:616]
2025-04-05 12:39:32,695 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:615]
2025-04-05 12:39:32,696 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:616]
2025-04-05 12:39:32,696 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:615]
2025-04-05 12:39:32,696 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:616]
2025-04-05 12:39:32,696 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:615]
2025-04-05 12:39:32,696 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:616]
2025-04-05 12:39:32,697 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:619]
2025-04-05 12:39:32,697 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:620]
2025-04-05 12:39:32,697 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:624]
2025-04-05 12:39:32,698 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:625]
2025-04-05 12:39:32,698 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:627]
2025-04-05 12:39:32,708 - WafLogger - DEBUG - Starting the execution recording. [runner.py:633]
2025-04-05 12:39:32,708 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-05 12:39:32,709 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-05 12:39:32,709 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-05 12:39:32,716 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-05 12:39:35,123 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-05 12:39:35,124 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 12:39:35,126 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-05 12:39:35,127 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-05 12:39:35,149 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-05 12:39:35,149 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-05 12:39:35,152 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-05 12:39:35,152 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-05 12:39:35,152 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-05 12:39:35,160 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-05 12:39:35,160 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-05 12:39:35,180 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-05 12:39:35,181 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-05 12:39:35,182 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-05 12:39:35,184 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-05 12:39:35,185 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-05 12:39:35,185 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 12:39:35,185 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-05 12:39:35,186 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-05 12:39:35,186 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-05 12:39:35,186 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 12:39:35,186 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-05 12:39:35,187 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-05 12:39:35,187 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-05 12:39:35,187 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 12:39:35,187 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-05 12:39:35,188 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-05 12:39:35,188 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-05 12:39:35,188 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 12:39:35,188 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-05 12:39:35,189 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-05 12:39:35,189 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-05 12:39:35,189 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-05 12:39:35,189 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 12:39:35,190 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-05 12:39:35,190 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-05 12:39:35,195 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-05 12:39:35,195 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-05 12:39:35,195 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-05 12:39:35,196 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 12:39:35,196 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-05 12:39:35,196 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-05 12:39:35,196 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 12:39:35,197 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-05 12:39:35,197 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-05 12:39:35,197 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:222]
2025-04-05 12:39:35,197 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 12:39:35,198 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 12:39:35,198 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-05 12:39:35,198 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-05 12:39:35,198 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-05 12:39:35,199 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:239]
2025-04-05 12:39:35,199 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 12:39:38,580 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 12:39:38,581 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 12:39:38,581 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 12:39:38,582 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 12:39:38,582 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 12:39:38,582 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 12:39:38,972 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:39:38,974 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-05 12:39:38,974 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-05 12:39:38,975 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 12:39:38,975 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 12:39:43,467 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 12:39:43,728 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:39:43,729 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-05 12:39:43,730 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-05 12:39:44,794 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-05 12:39:44,794 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 12:39:44,798 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 12:39:44,801 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 12:39:44,802 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 12:39:44,866 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 12:39:44,878 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 12:39:44,879 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 12:39:44,879 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 12:39:46,398 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 12:39:46,505 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 12:39:53,235 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-05 12:39:55,127 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:615]
2025-04-05 12:39:55,128 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:616]
2025-04-05 12:39:55,128 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:615]
2025-04-05 12:39:55,128 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:616]
2025-04-05 12:39:55,128 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:615]
2025-04-05 12:39:55,128 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:616]
2025-04-05 12:39:55,129 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:619]
2025-04-05 12:39:55,129 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:620]
2025-04-05 12:39:55,129 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:624]
2025-04-05 12:39:55,130 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:625]
2025-04-05 12:39:55,130 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:645]
2025-04-05 12:39:55,135 - WafLogger - DEBUG - Starting the execution recording. [runner.py:651]
2025-04-05 12:39:55,136 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-05 12:39:55,136 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-05 12:39:55,136 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-05 12:39:55,139 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-05 12:39:57,444 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-05 12:39:57,445 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 12:39:57,448 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-05 12:39:57,448 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-05 12:39:57,452 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-05 12:39:57,452 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-05 12:39:57,453 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-05 12:39:57,454 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-05 12:39:57,454 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-05 12:39:57,469 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-05 12:39:57,470 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-05 12:39:57,493 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-05 12:39:57,493 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-05 12:39:57,494 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-05 12:39:57,494 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-05 12:39:57,495 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-05 12:39:57,495 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 12:39:57,495 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-05 12:39:57,495 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-05 12:39:57,496 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-05 12:39:57,496 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 12:39:57,496 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-05 12:39:57,496 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-05 12:39:57,496 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-05 12:39:57,497 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 12:39:57,497 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-05 12:39:57,497 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-05 12:39:57,498 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-05 12:39:57,498 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 12:39:57,498 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-05 12:39:57,499 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-05 12:39:57,499 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-05 12:39:57,499 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-05 12:39:57,499 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 12:39:57,499 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-05 12:39:57,500 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:121]
2025-04-05 12:39:57,500 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:123]
2025-04-05 12:39:57,500 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 12:39:57,500 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-05 12:39:57,504 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-05 12:39:57,505 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-05 12:39:57,507 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-05 12:39:57,507 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 12:39:57,509 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-05 12:39:57,510 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-05 12:39:57,510 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 12:39:57,510 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-05 12:39:57,511 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-05 12:39:57,511 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:222]
2025-04-05 12:39:57,511 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 12:39:57,511 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 12:39:57,511 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-05 12:39:57,511 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-05 12:39:57,512 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-05 12:39:57,512 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:239]
2025-04-05 12:39:57,512 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 12:40:00,673 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 12:40:00,676 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 12:40:00,681 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 12:40:00,700 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 12:40:00,703 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 12:40:00,703 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 12:40:00,985 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:40:00,986 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-05 12:40:00,986 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-05 12:40:00,987 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 12:40:00,987 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 12:40:04,779 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 12:40:04,980 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:40:04,981 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:210]
2025-04-05 12:40:04,981 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:381]
2025-04-05 12:40:04,982 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:382]
2025-04-05 12:40:05,003 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 12:40:05,003 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 12:40:05,003 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF66B87A545+20677]
	simdutf::get_active_implementation [0x00007FF66B7D6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF66BACD75A+1807418]
	(No symbol) [0x00007FF66B6172AC]
	(No symbol) [0x00007FF66B61758B]
	(No symbol) [0x00007FF66B6585A7]
	(No symbol) [0x00007FF66B63849F]
	(No symbol) [0x00007FF66B60D6ED]
	(No symbol) [0x00007FF66B655D61]
	(No symbol) [0x00007FF66B6381C3]
	(No symbol) [0x00007FF66B60CC36]
	(No symbol) [0x00007FF66B60C0C4]
	(No symbol) [0x00007FF66B60CA63]
	(No symbol) [0x00007FF66B6F5BDD]
	(No symbol) [0x00007FF66B702042]
	(No symbol) [0x00007FF66B6FAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF66B9542AA+262026]
	simdutf::get_active_implementation [0x00007FF66B7E4421+546385]
	simdutf::get_active_implementation [0x00007FF66B7DD6D4+518404]
	simdutf::get_active_implementation [0x00007FF66B7DD819+518729]
	simdutf::get_active_implementation [0x00007FF66B7CF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF66B87A545+20677]
	simdutf::get_active_implementation [0x00007FF66B7D6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF66BACD75A+1807418]
	(No symbol) [0x00007FF66B6172AC]
	(No symbol) [0x00007FF66B61758B]
	(No symbol) [0x00007FF66B6585A7]
	(No symbol) [0x00007FF66B63849F]
	(No symbol) [0x00007FF66B60D6ED]
	(No symbol) [0x00007FF66B655D61]
	(No symbol) [0x00007FF66B6381C3]
	(No symbol) [0x00007FF66B60CC36]
	(No symbol) [0x00007FF66B60C0C4]
	(No symbol) [0x00007FF66B60CA63]
	(No symbol) [0x00007FF66B6F5BDD]
	(No symbol) [0x00007FF66B702042]
	(No symbol) [0x00007FF66B6FAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF66B9542AA+262026]
	simdutf::get_active_implementation [0x00007FF66B7E4421+546385]
	simdutf::get_active_implementation [0x00007FF66B7DD6D4+518404]
	simdutf::get_active_implementation [0x00007FF66B7DD819+518729]
	simdutf::get_active_implementation [0x00007FF66B7CF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 12:40:05,135 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 12:40:05,380 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:40:05,381 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF66B87A545+20677]
	simdutf::get_active_implementation [0x00007FF66B7D6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF66BACD75A+1807418]
	(No symbol) [0x00007FF66B6172AC]
	(No symbol) [0x00007FF66B61758B]
	(No symbol) [0x00007FF66B6585A7]
	(No symbol) [0x00007FF66B63849F]
	(No symbol) [0x00007FF66B60D6ED]
	(No symbol) [0x00007FF66B655D61]
	(No symbol) [0x00007FF66B6381C3]
	(No symbol) [0x00007FF66B60CC36]
	(No symbol) [0x00007FF66B60C0C4]
	(No symbol) [0x00007FF66B60CA63]
	(No symbol) [0x00007FF66B6F5BDD]
	(No symbol) [0x00007FF66B702042]
	(No symbol) [0x00007FF66B6FAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF66B9542AA+262026]
	simdutf::get_active_implementation [0x00007FF66B7E4421+546385]
	simdutf::get_active_implementation [0x00007FF66B7DD6D4+518404]
	simdutf::get_active_implementation [0x00007FF66B7DD819+518729]
	simdutf::get_active_implementation [0x00007FF66B7CF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:386]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 384, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF66B87A545+20677]
	simdutf::get_active_implementation [0x00007FF66B7D6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF66BACD75A+1807418]
	(No symbol) [0x00007FF66B6172AC]
	(No symbol) [0x00007FF66B61758B]
	(No symbol) [0x00007FF66B6585A7]
	(No symbol) [0x00007FF66B63849F]
	(No symbol) [0x00007FF66B60D6ED]
	(No symbol) [0x00007FF66B655D61]
	(No symbol) [0x00007FF66B6381C3]
	(No symbol) [0x00007FF66B60CC36]
	(No symbol) [0x00007FF66B60C0C4]
	(No symbol) [0x00007FF66B60CA63]
	(No symbol) [0x00007FF66B6F5BDD]
	(No symbol) [0x00007FF66B702042]
	(No symbol) [0x00007FF66B6FAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF66B9542AA+262026]
	simdutf::get_active_implementation [0x00007FF66B7E4421+546385]
	simdutf::get_active_implementation [0x00007FF66B7DD6D4+518404]
	simdutf::get_active_implementation [0x00007FF66B7DD819+518729]
	simdutf::get_active_implementation [0x00007FF66B7CF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 12:40:05,386 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-05 12:40:05,386 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-05 12:40:06,204 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-05 12:40:06,204 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 12:40:06,206 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 12:40:06,207 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 12:40:06,208 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 12:40:06,226 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 12:40:06,232 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 12:40:06,232 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 12:40:06,232 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 12:40:07,952 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 12:40:08,089 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 12:40:14,846 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-05 12:40:17,124 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-05 12:40:17,125 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-05 12:40:17,161 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-05 12:40:17,162 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-05 12:40:17,192 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-05 12:40:17,193 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-05 12:40:17,193 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-05 12:40:17,193 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-05 12:40:18,057 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-05 12:46:50,897 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:567]
2025-04-05 12:46:50,898 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:569]
2025-04-05 12:46:50,899 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:578]
2025-04-05 12:46:50,900 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:464]
2025-04-05 12:46:50,900 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:469]
2025-04-05 12:46:50,900 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:472]
2025-04-05 12:46:50,902 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 12:46:50,906 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 12:46:50,908 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 12:46:50,908 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:477]
2025-04-05 12:46:50,908 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:479]
2025-04-05 12:46:50,909 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:486]
2025-04-05 12:46:50,910 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:500]
2025-04-05 12:46:50,910 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:506]
2025-04-05 12:46:50,910 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:605]
2025-04-05 12:46:50,911 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:612]
2025-04-05 12:46:50,912 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:617]
2025-04-05 12:46:50,912 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:618]
2025-04-05 12:46:50,912 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:617]
2025-04-05 12:46:50,912 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:618]
2025-04-05 12:46:50,913 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:617]
2025-04-05 12:46:50,913 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:618]
2025-04-05 12:46:50,913 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:617]
2025-04-05 12:46:50,913 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:618]
2025-04-05 12:46:50,914 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:617]
2025-04-05 12:46:50,914 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:618]
2025-04-05 12:46:50,914 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:617]
2025-04-05 12:46:50,914 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:618]
2025-04-05 12:46:50,914 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:46:50,915 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:622]
2025-04-05 12:46:50,915 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:626]
2025-04-05 12:46:50,915 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:627]
2025-04-05 12:46:50,916 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:629]
2025-04-05 12:46:50,926 - WafLogger - DEBUG - Starting the execution recording. [runner.py:635]
2025-04-05 12:46:50,926 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-05 12:46:50,927 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-05 12:46:50,927 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-05 12:46:50,935 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-05 12:46:53,321 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-05 12:46:53,322 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 12:46:53,324 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-05 12:46:53,324 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-05 12:46:53,328 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-05 12:46:53,329 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-05 12:46:53,330 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-05 12:46:53,330 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-05 12:46:53,330 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-05 12:46:53,331 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-05 12:46:53,331 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-05 12:46:53,344 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-05 12:46:53,345 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-05 12:46:53,345 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-05 12:46:53,346 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-05 12:46:53,346 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-05 12:46:53,346 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 12:46:53,346 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-05 12:46:53,346 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-05 12:46:53,347 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-05 12:46:53,347 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 12:46:53,347 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-05 12:46:53,347 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-05 12:46:53,347 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-05 12:46:53,347 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 12:46:53,347 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-05 12:46:53,348 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-05 12:46:53,348 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-05 12:46:53,348 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 12:46:53,348 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-05 12:46:53,348 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-05 12:46:53,348 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-05 12:46:53,348 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-05 12:46:53,349 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 12:46:53,349 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-05 12:46:53,349 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-05 12:46:53,353 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-05 12:46:53,353 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-05 12:46:53,354 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-05 12:46:53,354 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 12:46:53,354 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-05 12:46:53,354 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-05 12:46:53,354 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 12:46:53,355 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-05 12:46:53,355 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-05 12:46:53,355 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:222]
2025-04-05 12:46:53,355 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 12:46:53,355 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 12:46:53,356 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-05 12:46:53,356 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-05 12:46:53,356 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-05 12:46:53,356 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:239]
2025-04-05 12:46:53,356 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 12:46:56,094 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 12:46:56,094 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 12:46:56,095 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 12:46:56,095 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 12:46:56,095 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 12:46:56,095 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 12:46:56,418 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:46:56,419 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-05 12:46:56,420 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-05 12:46:56,420 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 12:46:56,420 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 12:47:31,182 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 12:47:31,466 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:47:31,466 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-05 12:47:31,468 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-05 12:47:32,471 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-05 12:47:32,471 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 12:47:32,474 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 12:47:32,475 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 12:47:32,478 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 12:47:32,497 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 12:47:32,503 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 12:47:32,503 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 12:47:32,503 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 12:47:33,861 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 12:47:33,961 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 12:47:40,767 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-05 12:47:42,782 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:617]
2025-04-05 12:47:42,783 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:618]
2025-04-05 12:47:42,784 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:617]
2025-04-05 12:47:42,784 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:618]
2025-04-05 12:47:42,784 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:617]
2025-04-05 12:47:42,785 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:618]
2025-04-05 12:47:42,785 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:621]
2025-04-05 12:47:42,786 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:622]
2025-04-05 12:47:42,786 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:626]
2025-04-05 12:47:42,786 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:627]
2025-04-05 12:47:42,787 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:647]
2025-04-05 12:47:42,791 - WafLogger - DEBUG - Starting the execution recording. [runner.py:653]
2025-04-05 12:47:42,793 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:416]
2025-04-05 12:47:42,794 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:423]
2025-04-05 12:47:42,794 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:429]
2025-04-05 12:47:42,796 - WafLogger - DEBUG - Starting recording. [runner.py:438]
2025-04-05 12:47:45,045 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:68]
2025-04-05 12:47:45,045 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 12:47:45,048 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:75]
2025-04-05 12:47:45,048 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:85]
2025-04-05 12:47:45,053 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:90]
2025-04-05 12:47:45,053 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:96]
2025-04-05 12:47:45,055 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:99]
2025-04-05 12:47:45,055 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:102]
2025-04-05 12:47:45,055 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:103]
2025-04-05 12:47:45,059 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:105]
2025-04-05 12:47:45,059 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:108]
2025-04-05 12:47:45,072 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:110]
2025-04-05 12:47:45,073 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:117]
2025-04-05 12:47:45,075 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:119]
2025-04-05 12:47:45,075 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:121]
2025-04-05 12:47:45,075 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:123]
2025-04-05 12:47:45,076 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 12:47:45,076 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:173]
2025-04-05 12:47:45,076 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:121]
2025-04-05 12:47:45,076 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:123]
2025-04-05 12:47:45,077 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 12:47:45,079 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:178]
2025-04-05 12:47:45,079 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:121]
2025-04-05 12:47:45,080 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:123]
2025-04-05 12:47:45,080 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 12:47:45,080 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:183]
2025-04-05 12:47:45,080 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:121]
2025-04-05 12:47:45,080 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:123]
2025-04-05 12:47:45,081 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 12:47:45,081 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:139]
2025-04-05 12:47:45,081 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:188]
2025-04-05 12:47:45,081 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:121]
2025-04-05 12:47:45,081 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:123]
2025-04-05 12:47:45,082 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 12:47:45,082 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:193]
2025-04-05 12:47:45,082 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:121]
2025-04-05 12:47:45,082 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:123]
2025-04-05 12:47:45,083 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 12:47:45,083 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:198]
2025-04-05 12:47:45,086 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:208]
2025-04-05 12:47:45,087 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:210]
2025-04-05 12:47:45,087 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:213]
2025-04-05 12:47:45,087 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 12:47:45,088 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:210]
2025-04-05 12:47:45,088 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:217]
2025-04-05 12:47:45,088 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 12:47:45,090 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:210]
2025-04-05 12:47:45,090 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:221]
2025-04-05 12:47:45,091 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:222]
2025-04-05 12:47:45,091 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 12:47:45,091 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 12:47:45,091 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:210]
2025-04-05 12:47:45,091 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:231]
2025-04-05 12:47:45,091 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:238]
2025-04-05 12:47:45,091 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:239]
2025-04-05 12:47:45,092 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 12:47:48,350 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 12:47:48,351 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 12:47:48,351 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 12:47:48,351 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 12:47:48,351 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 12:47:48,352 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 12:47:48,766 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:47:48,768 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:210]
2025-04-05 12:47:48,768 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:285]
2025-04-05 12:47:48,769 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 12:47:48,769 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 12:47:52,410 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 12:47:52,968 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:47:52,969 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:210]
2025-04-05 12:47:52,970 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:381]
2025-04-05 12:47:52,970 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:382]
2025-04-05 12:47:52,989 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 12:47:52,989 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 12:47:52,990 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF70A69A545+20677]
	simdutf::get_active_implementation [0x00007FF70A5F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF70A8ED75A+1807418]
	(No symbol) [0x00007FF70A4372AC]
	(No symbol) [0x00007FF70A43758B]
	(No symbol) [0x00007FF70A4785A7]
	(No symbol) [0x00007FF70A45849F]
	(No symbol) [0x00007FF70A42D6ED]
	(No symbol) [0x00007FF70A475D61]
	(No symbol) [0x00007FF70A4581C3]
	(No symbol) [0x00007FF70A42CC36]
	(No symbol) [0x00007FF70A42C0C4]
	(No symbol) [0x00007FF70A42CA63]
	(No symbol) [0x00007FF70A515BDD]
	(No symbol) [0x00007FF70A522042]
	(No symbol) [0x00007FF70A51AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF70A7742AA+262026]
	simdutf::get_active_implementation [0x00007FF70A604421+546385]
	simdutf::get_active_implementation [0x00007FF70A5FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF70A5FD819+518729]
	simdutf::get_active_implementation [0x00007FF70A5EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF70A69A545+20677]
	simdutf::get_active_implementation [0x00007FF70A5F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF70A8ED75A+1807418]
	(No symbol) [0x00007FF70A4372AC]
	(No symbol) [0x00007FF70A43758B]
	(No symbol) [0x00007FF70A4785A7]
	(No symbol) [0x00007FF70A45849F]
	(No symbol) [0x00007FF70A42D6ED]
	(No symbol) [0x00007FF70A475D61]
	(No symbol) [0x00007FF70A4581C3]
	(No symbol) [0x00007FF70A42CC36]
	(No symbol) [0x00007FF70A42C0C4]
	(No symbol) [0x00007FF70A42CA63]
	(No symbol) [0x00007FF70A515BDD]
	(No symbol) [0x00007FF70A522042]
	(No symbol) [0x00007FF70A51AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF70A7742AA+262026]
	simdutf::get_active_implementation [0x00007FF70A604421+546385]
	simdutf::get_active_implementation [0x00007FF70A5FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF70A5FD819+518729]
	simdutf::get_active_implementation [0x00007FF70A5EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 12:47:53,079 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 12:47:53,299 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 12:47:53,300 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF70A69A545+20677]
	simdutf::get_active_implementation [0x00007FF70A5F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF70A8ED75A+1807418]
	(No symbol) [0x00007FF70A4372AC]
	(No symbol) [0x00007FF70A43758B]
	(No symbol) [0x00007FF70A4785A7]
	(No symbol) [0x00007FF70A45849F]
	(No symbol) [0x00007FF70A42D6ED]
	(No symbol) [0x00007FF70A475D61]
	(No symbol) [0x00007FF70A4581C3]
	(No symbol) [0x00007FF70A42CC36]
	(No symbol) [0x00007FF70A42C0C4]
	(No symbol) [0x00007FF70A42CA63]
	(No symbol) [0x00007FF70A515BDD]
	(No symbol) [0x00007FF70A522042]
	(No symbol) [0x00007FF70A51AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF70A7742AA+262026]
	simdutf::get_active_implementation [0x00007FF70A604421+546385]
	simdutf::get_active_implementation [0x00007FF70A5FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF70A5FD819+518729]
	simdutf::get_active_implementation [0x00007FF70A5EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:386]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 384, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF70A69A545+20677]
	simdutf::get_active_implementation [0x00007FF70A5F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF70A8ED75A+1807418]
	(No symbol) [0x00007FF70A4372AC]
	(No symbol) [0x00007FF70A43758B]
	(No symbol) [0x00007FF70A4785A7]
	(No symbol) [0x00007FF70A45849F]
	(No symbol) [0x00007FF70A42D6ED]
	(No symbol) [0x00007FF70A475D61]
	(No symbol) [0x00007FF70A4581C3]
	(No symbol) [0x00007FF70A42CC36]
	(No symbol) [0x00007FF70A42C0C4]
	(No symbol) [0x00007FF70A42CA63]
	(No symbol) [0x00007FF70A515BDD]
	(No symbol) [0x00007FF70A522042]
	(No symbol) [0x00007FF70A51AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF70A7742AA+262026]
	simdutf::get_active_implementation [0x00007FF70A604421+546385]
	simdutf::get_active_implementation [0x00007FF70A5FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF70A5FD819+518729]
	simdutf::get_active_implementation [0x00007FF70A5EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 12:47:53,305 - WafLogger - DEBUG - Gathering test summary results. [runner.py:401]
2025-04-05 12:47:53,305 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:403]
2025-04-05 12:47:54,160 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:406]
2025-04-05 12:47:54,163 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 12:47:54,167 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 12:47:54,171 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 12:47:54,172 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 12:47:54,191 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 12:47:54,199 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 12:47:54,200 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 12:47:54,200 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 12:47:56,058 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 12:47:56,136 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 12:48:02,896 - WafLogger - DEBUG - Finished recording. [runner.py:458]
2025-04-05 12:48:04,811 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-05 12:48:04,811 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-05 12:48:04,859 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-05 12:48:04,861 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-05 12:48:04,873 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-05 12:48:04,875 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-05 12:48:04,876 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-05 12:48:04,876 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-05 12:48:05,748 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-05 13:09:39,379 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:587]
2025-04-05 13:09:39,379 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:589]
2025-04-05 13:09:39,381 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:599]
2025-04-05 13:09:43,456 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-05 13:09:43,458 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:473]
2025-04-05 13:09:43,459 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:476]
2025-04-05 13:09:43,464 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 13:09:43,466 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 13:09:43,469 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 13:09:43,469 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:481]
2025-04-05 13:09:43,471 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:483]
2025-04-05 13:09:43,473 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:490]
2025-04-05 13:09:43,474 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:504]
2025-04-05 13:09:43,475 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:510]
2025-04-05 13:09:43,476 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:673]
2025-04-05 13:09:43,477 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:680]
2025-04-05 13:09:43,479 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:685]
2025-04-05 13:09:43,479 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:686]
2025-04-05 13:09:43,479 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:685]
2025-04-05 13:09:43,480 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:686]
2025-04-05 13:09:43,480 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:685]
2025-04-05 13:09:43,480 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:686]
2025-04-05 13:09:43,481 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:685]
2025-04-05 13:09:43,481 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:686]
2025-04-05 13:09:43,482 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:685]
2025-04-05 13:09:43,482 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:686]
2025-04-05 13:09:43,482 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:685]
2025-04-05 13:09:43,483 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:686]
2025-04-05 13:09:43,483 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:689]
2025-04-05 13:09:43,483 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:690]
2025-04-05 13:09:43,484 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:694]
2025-04-05 13:09:43,484 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:695]
2025-04-05 13:09:43,484 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:697]
2025-04-05 13:09:43,498 - WafLogger - DEBUG - Starting the execution recording. [runner.py:703]
2025-04-05 13:09:43,499 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 13:09:43,501 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 13:09:43,501 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 13:09:43,565 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 13:09:45,777 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 13:09:45,778 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 13:09:45,785 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 13:09:45,785 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 13:09:45,843 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 13:09:45,844 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 13:09:45,845 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 13:09:45,845 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 13:09:45,845 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 13:09:45,856 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 13:09:45,857 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 13:09:45,890 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 13:09:45,892 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 13:09:45,895 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 13:09:45,896 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 13:09:45,896 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 13:09:45,896 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 13:09:45,896 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 13:09:45,897 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 13:09:45,897 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 13:09:45,897 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 13:09:45,897 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 13:09:45,898 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 13:09:45,898 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 13:09:45,898 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 13:09:45,898 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 13:09:45,899 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 13:09:45,899 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 13:09:45,899 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 13:09:45,899 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 13:09:45,899 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 13:09:45,900 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 13:09:45,900 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 13:09:45,900 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 13:09:45,900 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 13:09:45,901 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 13:09:45,903 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 13:09:45,904 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 13:09:45,907 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 13:09:45,907 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 13:09:45,908 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 13:09:45,908 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 13:09:45,908 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 13:09:45,909 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 13:09:45,909 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 13:09:45,909 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 13:09:45,910 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 13:09:45,910 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 13:09:45,910 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 13:09:45,911 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 13:09:45,911 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 13:09:45,911 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:243]
2025-04-05 13:09:45,911 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 13:09:49,298 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 13:09:49,327 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 13:09:49,333 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 13:09:49,334 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 13:09:49,340 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 13:09:49,342 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 13:09:49,668 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 13:09:49,669 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 13:09:49,670 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 13:09:49,670 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 13:09:49,670 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 13:09:53,691 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 13:09:53,992 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 13:09:53,992 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 13:09:53,993 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 13:09:55,256 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 13:09:55,257 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 13:09:55,261 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 13:09:55,265 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 13:09:55,292 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 13:09:55,351 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 13:09:55,358 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 13:09:55,359 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 13:09:55,359 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 13:09:56,798 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 13:09:56,882 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 13:10:03,603 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 13:10:05,871 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:685]
2025-04-05 13:10:05,872 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:686]
2025-04-05 13:10:05,872 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:685]
2025-04-05 13:10:05,873 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:686]
2025-04-05 13:10:05,873 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:685]
2025-04-05 13:10:05,874 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:686]
2025-04-05 13:10:05,874 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:689]
2025-04-05 13:10:05,875 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:690]
2025-04-05 13:10:05,875 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:694]
2025-04-05 13:10:05,875 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:695]
2025-04-05 13:10:05,876 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:715]
2025-04-05 13:10:05,880 - WafLogger - DEBUG - Starting the execution recording. [runner.py:721]
2025-04-05 13:10:05,881 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 13:10:05,882 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 13:10:05,882 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 13:10:05,885 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 13:10:09,998 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 13:10:09,998 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 13:10:10,002 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 13:10:10,002 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 13:10:10,007 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 13:10:10,007 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 13:10:10,009 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 13:10:10,009 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 13:10:10,009 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 13:10:10,100 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 13:10:10,101 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 13:10:10,130 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 13:10:10,131 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 13:10:10,132 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 13:10:10,134 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 13:10:10,134 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 13:10:10,135 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 13:10:10,135 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 13:10:10,135 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 13:10:10,135 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 13:10:10,135 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 13:10:10,136 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 13:10:10,136 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 13:10:10,136 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 13:10:10,136 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 13:10:10,136 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 13:10:10,136 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 13:10:10,136 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 13:10:10,137 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 13:10:10,137 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 13:10:10,137 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 13:10:10,137 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 13:10:10,137 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 13:10:10,137 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 13:10:10,137 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 13:10:10,138 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 13:10:10,138 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 13:10:10,138 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 13:10:10,138 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 13:10:10,147 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 13:10:10,148 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 13:10:10,148 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 13:10:10,149 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 13:10:10,149 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 13:10:10,149 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 13:10:10,149 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 13:10:10,151 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 13:10:10,152 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 13:10:10,152 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 13:10:10,152 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 13:10:10,152 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 13:10:10,152 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 13:10:10,153 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 13:10:10,153 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 13:10:10,153 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:243]
2025-04-05 13:10:10,153 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 13:10:13,165 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 13:10:13,165 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 13:10:13,167 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 13:10:13,170 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 13:10:13,171 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 13:10:13,178 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 13:10:13,514 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 13:10:13,516 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 13:10:13,517 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 13:10:13,518 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 13:10:13,519 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 13:10:17,124 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 13:10:17,416 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 13:10:17,418 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 13:10:17,419 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 13:10:17,419 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 13:10:17,441 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 13:10:17,441 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 13:10:17,441 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7A193A545+20677]
	simdutf::get_active_implementation [0x00007FF7A1896CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A1B8D75A+1807418]
	(No symbol) [0x00007FF7A16D72AC]
	(No symbol) [0x00007FF7A16D758B]
	(No symbol) [0x00007FF7A17185A7]
	(No symbol) [0x00007FF7A16F849F]
	(No symbol) [0x00007FF7A16CD6ED]
	(No symbol) [0x00007FF7A1715D61]
	(No symbol) [0x00007FF7A16F81C3]
	(No symbol) [0x00007FF7A16CCC36]
	(No symbol) [0x00007FF7A16CC0C4]
	(No symbol) [0x00007FF7A16CCA63]
	(No symbol) [0x00007FF7A17B5BDD]
	(No symbol) [0x00007FF7A17C2042]
	(No symbol) [0x00007FF7A17BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A1A142AA+262026]
	simdutf::get_active_implementation [0x00007FF7A18A4421+546385]
	simdutf::get_active_implementation [0x00007FF7A189D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7A189D819+518729]
	simdutf::get_active_implementation [0x00007FF7A188F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7A193A545+20677]
	simdutf::get_active_implementation [0x00007FF7A1896CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A1B8D75A+1807418]
	(No symbol) [0x00007FF7A16D72AC]
	(No symbol) [0x00007FF7A16D758B]
	(No symbol) [0x00007FF7A17185A7]
	(No symbol) [0x00007FF7A16F849F]
	(No symbol) [0x00007FF7A16CD6ED]
	(No symbol) [0x00007FF7A1715D61]
	(No symbol) [0x00007FF7A16F81C3]
	(No symbol) [0x00007FF7A16CCC36]
	(No symbol) [0x00007FF7A16CC0C4]
	(No symbol) [0x00007FF7A16CCA63]
	(No symbol) [0x00007FF7A17B5BDD]
	(No symbol) [0x00007FF7A17C2042]
	(No symbol) [0x00007FF7A17BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A1A142AA+262026]
	simdutf::get_active_implementation [0x00007FF7A18A4421+546385]
	simdutf::get_active_implementation [0x00007FF7A189D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7A189D819+518729]
	simdutf::get_active_implementation [0x00007FF7A188F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 13:10:17,647 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 13:10:17,890 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 13:10:17,891 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7A193A545+20677]
	simdutf::get_active_implementation [0x00007FF7A1896CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A1B8D75A+1807418]
	(No symbol) [0x00007FF7A16D72AC]
	(No symbol) [0x00007FF7A16D758B]
	(No symbol) [0x00007FF7A17185A7]
	(No symbol) [0x00007FF7A16F849F]
	(No symbol) [0x00007FF7A16CD6ED]
	(No symbol) [0x00007FF7A1715D61]
	(No symbol) [0x00007FF7A16F81C3]
	(No symbol) [0x00007FF7A16CCC36]
	(No symbol) [0x00007FF7A16CC0C4]
	(No symbol) [0x00007FF7A16CCA63]
	(No symbol) [0x00007FF7A17B5BDD]
	(No symbol) [0x00007FF7A17C2042]
	(No symbol) [0x00007FF7A17BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A1A142AA+262026]
	simdutf::get_active_implementation [0x00007FF7A18A4421+546385]
	simdutf::get_active_implementation [0x00007FF7A189D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7A189D819+518729]
	simdutf::get_active_implementation [0x00007FF7A188F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7A193A545+20677]
	simdutf::get_active_implementation [0x00007FF7A1896CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A1B8D75A+1807418]
	(No symbol) [0x00007FF7A16D72AC]
	(No symbol) [0x00007FF7A16D758B]
	(No symbol) [0x00007FF7A17185A7]
	(No symbol) [0x00007FF7A16F849F]
	(No symbol) [0x00007FF7A16CD6ED]
	(No symbol) [0x00007FF7A1715D61]
	(No symbol) [0x00007FF7A16F81C3]
	(No symbol) [0x00007FF7A16CCC36]
	(No symbol) [0x00007FF7A16CC0C4]
	(No symbol) [0x00007FF7A16CCA63]
	(No symbol) [0x00007FF7A17B5BDD]
	(No symbol) [0x00007FF7A17C2042]
	(No symbol) [0x00007FF7A17BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7A1A142AA+262026]
	simdutf::get_active_implementation [0x00007FF7A18A4421+546385]
	simdutf::get_active_implementation [0x00007FF7A189D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7A189D819+518729]
	simdutf::get_active_implementation [0x00007FF7A188F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 13:10:17,898 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 13:10:17,899 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 13:10:18,815 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 13:10:18,816 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 13:10:18,822 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 13:10:18,824 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 13:10:18,826 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 13:10:18,847 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 13:10:18,855 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 13:10:18,855 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 13:10:18,855 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 13:10:20,889 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 13:10:20,999 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 13:10:27,798 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 13:10:29,796 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-05 13:10:29,796 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-05 13:10:29,831 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-05 13:10:29,832 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-05 13:10:29,858 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-05 13:10:29,859 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-05 13:10:29,859 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-05 13:10:29,859 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-05 13:10:30,727 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-05 13:11:22,454 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:587]
2025-04-05 13:11:22,454 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:589]
2025-04-05 13:11:22,456 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:599]
2025-04-05 13:11:25,573 - WafLogger - ERROR - The syntax for running is 'runner.exe --start' or to check the version use 'runner.exe --version' [runner.py:752]
2025-04-05 13:12:36,468 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:587]
2025-04-05 13:12:36,468 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:589]
2025-04-05 13:12:36,469 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:599]
2025-04-05 13:18:22,868 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:590]
2025-04-05 13:18:22,869 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:592]
2025-04-05 13:18:22,870 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:602]
2025-04-05 13:23:07,929 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:608]
2025-04-05 13:23:07,930 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:610]
2025-04-05 13:23:07,932 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:620]
2025-04-05 13:28:31,394 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:571]
2025-04-05 13:28:31,394 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:573]
2025-04-05 13:28:31,395 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:583]
2025-04-05 13:28:31,488 - WafLogger - DEBUG - Temporary file created at: C:\Users\vinay\AppData\Local\Temp\tmpq_haeukd.html [runner.py:621]
2025-04-05 13:28:31,488 - WafLogger - DEBUG - Please close the browser manually when you're done. [runner.py:622]
2025-04-05 13:28:53,699 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:571]
2025-04-05 13:28:53,699 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:573]
2025-04-05 13:28:53,700 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:583]
2025-04-05 13:28:53,789 - WafLogger - DEBUG - Temporary file created at: C:\Users\vinay\AppData\Local\Temp\tmpr4d_1hw_.html [runner.py:621]
2025-04-05 13:28:53,790 - WafLogger - DEBUG - Please close the browser manually when you're done. [runner.py:622]
2025-04-05 13:59:52,662 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:571]
2025-04-05 13:59:52,743 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:573]
2025-04-05 13:59:52,746 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:583]
2025-04-05 13:59:52,747 - WafLogger - DEBUG - Started encrypting file help_document.html. [runner.py:609]
2025-04-05 13:59:52,799 - WafLogger - DEBUG - Finished encrypting file help_document.html to enc_help_doc.enc [runner.py:616]
2025-04-05 14:01:04,556 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:571]
2025-04-05 14:01:04,556 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:573]
2025-04-05 14:01:04,557 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:583]
2025-04-05 14:01:04,663 - WafLogger - DEBUG - Temporary file created at: C:\Users\vinay\AppData\Local\Temp\tmp6xegfa9x.html [runner.py:605]
2025-04-05 14:01:04,663 - WafLogger - DEBUG - Please close the browser manually when you're done. [runner.py:606]
2025-04-05 15:17:24,307 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:571]
2025-04-05 15:17:24,395 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:572]
2025-04-05 15:17:24,400 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:582]
2025-04-05 15:17:24,402 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-05 15:17:24,404 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:473]
2025-04-05 15:17:24,404 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:476]
2025-04-05 15:17:24,406 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:17:24,407 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:17:24,424 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:17:24,425 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:481]
2025-04-05 15:17:24,426 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:483]
2025-04-05 15:17:24,429 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:490]
2025-04-05 15:17:24,430 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:504]
2025-04-05 15:17:24,430 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:510]
2025-04-05 15:17:24,431 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:704]
2025-04-05 15:17:24,433 - WafLogger - ERROR - Parallel execution can only be run in headless mode. [runner.py:716]
2025-04-05 15:17:49,747 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:571]
2025-04-05 15:17:49,747 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:572]
2025-04-05 15:17:49,748 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:582]
2025-04-05 15:17:49,750 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-05 15:17:49,750 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:473]
2025-04-05 15:17:49,750 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:476]
2025-04-05 15:17:49,751 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:17:49,751 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:17:49,752 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:17:49,752 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:481]
2025-04-05 15:17:49,753 - WafLogger - DEBUG - File does not exists [utilities.py:90]
2025-04-05 15:17:49,753 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:483]
2025-04-05 15:17:49,754 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:490]
2025-04-05 15:17:49,754 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:504]
2025-04-05 15:17:49,754 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:510]
2025-04-05 15:17:49,755 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:624]
2025-04-05 15:17:49,755 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:631]
2025-04-05 15:17:49,756 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:636]
2025-04-05 15:17:49,756 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:17:49,756 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:636]
2025-04-05 15:17:49,756 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:17:49,757 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:636]
2025-04-05 15:17:49,757 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:17:49,757 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS002_testscript.xlsx. [runner.py:636]
2025-04-05 15:17:49,757 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:17:49,757 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS002_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:640]
2025-04-05 15:17:49,757 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:641]
2025-04-05 15:17:49,757 - WafLogger - DEBUG - The file name TS002_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:645]
2025-04-05 15:17:49,757 - WafLogger - DEBUG - Checking if the file TS002_testscript.xlsx is present in chrome or edge folder. [runner.py:646]
2025-04-05 15:17:49,758 - WafLogger - DEBUG - The file TS002_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:683]
2025-04-05 15:17:49,767 - WafLogger - DEBUG - Starting the execution recording. [runner.py:689]
2025-04-05 15:17:49,769 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:17:49,769 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:17:49,769 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:17:49,821 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:17:52,070 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:17:52,070 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:17:52,076 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:17:52,077 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:17:52,130 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:17:52,130 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:17:52,132 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:17:52,132 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:17:52,133 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:17:52,133 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:17:52,133 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:17:52,177 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:17:52,187 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:17:52,189 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:17:52,189 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:17:52,190 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:17:52,190 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:17:52,190 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:17:52,190 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:17:52,191 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:17:52,191 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:17:52,191 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:17:52,192 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:17:52,192 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:17:52,192 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:17:52,192 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:17:52,193 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:17:52,193 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:17:52,193 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:17:52,193 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:17:52,193 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:17:52,194 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:17:52,194 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:17:52,194 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:17:52,194 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:17:52,195 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:17:52,198 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:17:52,198 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:17:52,199 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:17:52,199 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:17:52,199 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:17:52,199 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:17:52,200 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:17:52,200 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:17:52,200 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:17:52,201 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:17:52,202 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:17:52,202 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:17:52,202 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:17:52,202 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:17:52,203 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:17:52,203 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Chrome' to the keyword manager. [runner.py:239]
2025-04-05 15:17:52,203 - WafLogger - DEBUG - Launching Chrome ....... [keywords_manager.py:102]
2025-04-05 15:17:56,278 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:17:56,280 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:17:56,284 - WafLogger - DEBUG - Populating the browser details in the PDF report as Chrome [keywords_manager.py:115]
2025-04-05 15:17:56,286 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:17:56,288 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:17:56,289 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:17:56,860 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:17:56,865 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:17:56,867 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:17:56,867 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:17:56,868 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:18:00,219 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:18:00,419 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:18:00,420 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:18:00,420 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:18:01,623 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:18:01,623 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:18:01,627 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:18:01,628 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:18:01,655 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:18:01,727 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:18:01,745 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:18:01,746 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:18:01,746 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:18:04,065 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:18:04,132 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:18:10,937 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:18:12,878 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS003_testscript.xlsx. [runner.py:636]
2025-04-05 15:18:12,878 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:18:12,879 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS003_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:640]
2025-04-05 15:18:12,879 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:641]
2025-04-05 15:18:12,879 - WafLogger - DEBUG - The file name TS003_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:645]
2025-04-05 15:18:12,880 - WafLogger - DEBUG - Checking if the file TS003_testscript.xlsx is present in chrome or edge folder. [runner.py:646]
2025-04-05 15:18:12,880 - WafLogger - DEBUG - The file TS003_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:683]
2025-04-05 15:18:12,887 - WafLogger - DEBUG - Starting the execution recording. [runner.py:689]
2025-04-05 15:18:12,889 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:18:12,889 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:18:12,890 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:18:12,893 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:18:15,204 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:18:15,204 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:18:15,206 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:18:15,207 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:18:15,211 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:18:15,211 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:18:15,212 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:18:15,213 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:18:15,213 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:18:15,218 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:18:15,218 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:18:15,245 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:18:15,246 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:18:15,248 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:18:15,248 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:18:15,249 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:18:15,249 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:18:15,249 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:18:15,249 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:18:15,249 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:18:15,249 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:18:15,249 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:18:15,250 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:18:15,250 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:18:15,250 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:18:15,250 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:18:15,250 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:18:15,250 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:18:15,250 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:18:15,251 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:18:15,251 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:18:15,251 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:18:15,251 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:18:15,251 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:18:15,251 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:18:15,251 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:18:15,255 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:18:15,255 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:18:15,256 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:18:15,256 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:18:15,256 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:18:15,256 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:18:15,256 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:18:15,256 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:18:15,257 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:18:15,257 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:18:15,257 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:18:15,257 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:18:15,257 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:18:15,257 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:18:15,257 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:18:15,257 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Edge' to the keyword manager. [runner.py:239]
2025-04-05 15:18:15,257 - WafLogger - DEBUG - Launching Edge ....... [keywords_manager.py:102]
2025-04-05 15:18:19,241 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:18:19,243 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:18:19,244 - WafLogger - DEBUG - Populating the browser details in the PDF report as Edge [keywords_manager.py:120]
2025-04-05 15:18:19,245 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:18:19,246 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:18:19,246 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:18:19,637 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:18:19,638 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:18:19,638 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:18:19,639 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:18:19,639 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:18:23,247 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:18:23,494 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:18:23,495 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:18:23,496 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:18:24,378 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:18:24,378 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:18:24,381 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:18:24,383 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:18:24,384 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:18:24,406 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:18:24,440 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:18:24,440 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:18:24,441 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:18:26,100 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:18:26,165 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:18:32,983 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:18:34,846 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS004_testscript.xlsx. [runner.py:636]
2025-04-05 15:18:34,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:18:34,847 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS004_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:640]
2025-04-05 15:18:34,847 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:641]
2025-04-05 15:18:34,848 - WafLogger - DEBUG - The file name TS004_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:645]
2025-04-05 15:18:34,848 - WafLogger - DEBUG - Checking if the file TS004_testscript.xlsx is present in chrome or edge folder. [runner.py:646]
2025-04-05 15:18:34,849 - WafLogger - DEBUG - The file TS004_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:683]
2025-04-05 15:18:34,855 - WafLogger - DEBUG - Starting the execution recording. [runner.py:689]
2025-04-05 15:18:34,856 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:18:34,856 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:18:34,856 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:18:34,859 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:18:37,081 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:18:37,082 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:18:37,084 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:18:37,085 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:18:37,088 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:18:37,089 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:18:37,091 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:18:37,092 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:18:37,093 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:18:37,129 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:18:37,131 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:18:37,145 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:18:37,147 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:18:37,148 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:18:37,148 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:18:37,149 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:18:37,149 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:18:37,149 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:18:37,149 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:18:37,150 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:18:37,150 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:18:37,150 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:18:37,151 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:18:37,151 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:18:37,152 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:18:37,152 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:18:37,153 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:18:37,153 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:18:37,153 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:18:37,154 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:18:37,154 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:18:37,154 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:18:37,155 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:18:37,155 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:18:37,155 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:18:37,155 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:18:37,159 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:18:37,162 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:18:37,163 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:18:37,164 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:18:37,165 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:18:37,165 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:18:37,165 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:18:37,166 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:18:37,166 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:18:37,166 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:18:37,166 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:18:37,167 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:18:37,167 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:18:37,168 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:18:37,168 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:18:37,168 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Edge' to the keyword manager. [runner.py:239]
2025-04-05 15:18:37,168 - WafLogger - DEBUG - Launching Edge ....... [keywords_manager.py:102]
2025-04-05 15:18:40,044 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:18:40,060 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:18:40,065 - WafLogger - DEBUG - Populating the browser details in the PDF report as Edge [keywords_manager.py:120]
2025-04-05 15:18:40,066 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:18:40,066 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:18:40,070 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:18:40,480 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:18:40,482 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:18:40,482 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:18:40,483 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:18:40,483 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:18:44,041 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:18:44,346 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:18:44,347 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:18:44,347 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:18:45,517 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:18:45,518 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:18:45,520 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:18:45,523 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:18:45,524 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:18:45,549 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:18:45,555 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:18:45,555 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:18:45,555 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:18:47,055 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:18:47,141 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:18:53,892 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:18:55,837 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:636]
2025-04-05 15:18:55,837 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:18:55,837 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:636]
2025-04-05 15:18:55,838 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:18:55,838 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:636]
2025-04-05 15:18:55,838 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:18:55,838 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:640]
2025-04-05 15:18:55,838 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:641]
2025-04-05 15:18:55,839 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:645]
2025-04-05 15:18:55,839 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:646]
2025-04-05 15:18:55,839 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:648]
2025-04-05 15:18:55,846 - WafLogger - DEBUG - Starting the execution recording. [runner.py:654]
2025-04-05 15:18:55,848 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:18:55,850 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:18:55,850 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:18:55,854 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:18:58,122 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:18:58,123 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:18:58,125 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:18:58,126 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:18:58,132 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:18:58,132 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:18:58,135 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:18:58,136 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:18:58,136 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:18:58,137 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:18:58,137 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:18:58,152 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:18:58,153 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:18:58,154 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:18:58,155 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:18:58,155 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:18:58,155 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:18:58,155 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:18:58,156 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:18:58,156 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:18:58,156 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:18:58,156 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:18:58,156 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:18:58,157 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:18:58,157 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:18:58,157 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:18:58,158 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:18:58,158 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:18:58,159 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:18:58,160 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:18:58,161 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:18:58,162 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:18:58,163 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:18:58,163 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:18:58,163 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:18:58,163 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:18:58,169 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:18:58,169 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:18:58,170 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:18:58,170 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:18:58,170 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:18:58,171 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:18:58,171 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:18:58,171 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:18:58,171 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:18:58,171 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:18:58,171 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:18:58,172 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:18:58,172 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:18:58,172 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:18:58,172 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:18:58,172 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:243]
2025-04-05 15:18:58,173 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 15:19:01,065 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:19:01,066 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:19:01,066 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 15:19:01,066 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:19:01,068 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:19:01,068 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:19:01,501 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:19:01,502 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:19:01,503 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:19:01,504 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:19:01,504 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:19:05,351 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:19:05,592 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:19:05,593 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:19:05,593 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:19:06,539 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:19:06,540 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:19:06,542 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:19:06,546 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:19:06,548 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:19:06,581 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:19:06,603 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:19:06,604 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:19:06,604 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:19:08,595 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:19:08,675 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:19:15,399 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:19:17,911 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS005_testscript.xlsx. [runner.py:636]
2025-04-05 15:19:17,912 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:19:17,912 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS005_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:640]
2025-04-05 15:19:17,913 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:641]
2025-04-05 15:19:17,913 - WafLogger - DEBUG - The file name TS005_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:645]
2025-04-05 15:19:17,916 - WafLogger - DEBUG - Checking if the file TS005_testscript.xlsx is present in chrome or edge folder. [runner.py:646]
2025-04-05 15:19:17,916 - WafLogger - DEBUG - The file TS005_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:648]
2025-04-05 15:19:17,921 - WafLogger - DEBUG - Starting the execution recording. [runner.py:654]
2025-04-05 15:19:17,923 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:19:17,923 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:19:17,924 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:19:17,927 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:19:20,158 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:19:20,159 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:19:20,161 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:19:20,161 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:19:20,166 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:19:20,167 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:19:20,168 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:19:20,168 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:19:20,169 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:19:20,266 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:19:20,267 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:19:20,281 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:19:20,283 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:19:20,284 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:19:20,284 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:19:20,285 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:19:20,285 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:19:20,285 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:19:20,285 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:19:20,286 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:19:20,286 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:19:20,286 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:19:20,287 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:19:20,287 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:19:20,288 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:19:20,288 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:19:20,288 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:19:20,288 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:19:20,289 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:19:20,289 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:19:20,289 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:19:20,290 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:19:20,290 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:19:20,290 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:19:20,290 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:19:20,291 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:19:20,291 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:19:20,291 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:19:20,291 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:19:20,294 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:19:20,295 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:19:20,295 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:19:20,296 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:19:20,296 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:19:20,296 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:19:20,296 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:19:20,297 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:19:20,297 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:19:20,297 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:19:20,298 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:19:20,298 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:19:20,299 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:19:20,299 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:19:20,299 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:19:20,299 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:243]
2025-04-05 15:19:20,300 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 15:19:22,981 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:19:22,981 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:19:22,982 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 15:19:22,982 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:19:22,983 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:19:22,983 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:19:23,412 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:19:23,413 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:19:23,413 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:19:23,413 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:19:23,414 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:19:26,909 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:19:27,106 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:19:27,108 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:19:27,109 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:19:27,109 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:19:27,127 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:19:27,128 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:19:27,128 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00F7C7F3+24435]
	(No symbol) [0x00F02074]
	(No symbol) [0x00DD06E3]
	(No symbol) [0x00E18B39]
	(No symbol) [0x00E18E8B]
	(No symbol) [0x00E61AC2]
	(No symbol) [0x00E3D804]
	(No symbol) [0x00E5F20A]
	(No symbol) [0x00E3D5B6]
	(No symbol) [0x00E0C54F]
	(No symbol) [0x00E0D894]
	GetHandleVerifier [0x012870A3+3213347]
	GetHandleVerifier [0x0129B0C9+3295305]
	GetHandleVerifier [0x0129558C+3271948]
	GetHandleVerifier [0x01017360+658144]
	(No symbol) [0x00F0B27D]
	(No symbol) [0x00F08208]
	(No symbol) [0x00F083A9]
	(No symbol) [0x00EFAAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00F7C7F3+24435]
	(No symbol) [0x00F02074]
	(No symbol) [0x00DD06E3]
	(No symbol) [0x00E18B39]
	(No symbol) [0x00E18E8B]
	(No symbol) [0x00E61AC2]
	(No symbol) [0x00E3D804]
	(No symbol) [0x00E5F20A]
	(No symbol) [0x00E3D5B6]
	(No symbol) [0x00E0C54F]
	(No symbol) [0x00E0D894]
	GetHandleVerifier [0x012870A3+3213347]
	GetHandleVerifier [0x0129B0C9+3295305]
	GetHandleVerifier [0x0129558C+3271948]
	GetHandleVerifier [0x01017360+658144]
	(No symbol) [0x00F0B27D]
	(No symbol) [0x00F08208]
	(No symbol) [0x00F083A9]
	(No symbol) [0x00EFAAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]

2025-04-05 15:19:27,280 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:19:27,568 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:19:27,569 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00F7C7F3+24435]
	(No symbol) [0x00F02074]
	(No symbol) [0x00DD06E3]
	(No symbol) [0x00E18B39]
	(No symbol) [0x00E18E8B]
	(No symbol) [0x00E61AC2]
	(No symbol) [0x00E3D804]
	(No symbol) [0x00E5F20A]
	(No symbol) [0x00E3D5B6]
	(No symbol) [0x00E0C54F]
	(No symbol) [0x00E0D894]
	GetHandleVerifier [0x012870A3+3213347]
	GetHandleVerifier [0x0129B0C9+3295305]
	GetHandleVerifier [0x0129558C+3271948]
	GetHandleVerifier [0x01017360+658144]
	(No symbol) [0x00F0B27D]
	(No symbol) [0x00F08208]
	(No symbol) [0x00F083A9]
	(No symbol) [0x00EFAAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00F7C7F3+24435]
	(No symbol) [0x00F02074]
	(No symbol) [0x00DD06E3]
	(No symbol) [0x00E18B39]
	(No symbol) [0x00E18E8B]
	(No symbol) [0x00E61AC2]
	(No symbol) [0x00E3D804]
	(No symbol) [0x00E5F20A]
	(No symbol) [0x00E3D5B6]
	(No symbol) [0x00E0C54F]
	(No symbol) [0x00E0D894]
	GetHandleVerifier [0x012870A3+3213347]
	GetHandleVerifier [0x0129B0C9+3295305]
	GetHandleVerifier [0x0129558C+3271948]
	GetHandleVerifier [0x01017360+658144]
	(No symbol) [0x00F0B27D]
	(No symbol) [0x00F08208]
	(No symbol) [0x00F083A9]
	(No symbol) [0x00EFAAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]

2025-04-05 15:19:27,577 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:19:27,577 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:19:28,510 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:19:28,511 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:19:28,514 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:19:28,515 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:19:28,516 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:19:28,545 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:19:28,564 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:19:28,565 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:19:28,565 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:19:30,770 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:19:30,848 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:19:37,495 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:19:39,425 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:636]
2025-04-05 15:19:39,426 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:19:39,426 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:636]
2025-04-05 15:19:39,427 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:19:39,427 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:636]
2025-04-05 15:19:39,427 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:19:39,428 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:640]
2025-04-05 15:19:39,428 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:641]
2025-04-05 15:19:39,429 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:645]
2025-04-05 15:19:39,429 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:646]
2025-04-05 15:19:39,430 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:666]
2025-04-05 15:19:39,435 - WafLogger - DEBUG - Starting the execution recording. [runner.py:672]
2025-04-05 15:19:39,436 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:19:39,437 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:19:39,437 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:19:39,439 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:19:41,707 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:19:41,707 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:19:41,710 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:19:41,710 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:19:41,714 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:19:41,714 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:19:41,716 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:19:41,716 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:19:41,716 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:19:41,787 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:19:41,787 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:19:41,810 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:19:41,811 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:19:41,812 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:19:41,814 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:19:41,814 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:19:41,814 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:19:41,815 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:19:41,815 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:19:41,815 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:19:41,815 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:19:41,816 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:19:41,816 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:19:41,816 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:19:41,816 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:19:41,817 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:19:41,817 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:19:41,817 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:19:41,817 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:19:41,818 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:19:41,818 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:19:41,819 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:19:41,819 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:19:41,819 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:19:41,819 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:19:41,821 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:19:41,823 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:19:41,824 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:19:41,824 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:19:41,829 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:19:41,831 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:19:41,832 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:19:41,832 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:19:41,833 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:19:41,833 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:19:41,833 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:19:41,834 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:19:41,834 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:19:41,834 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:19:41,834 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:19:41,835 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:19:41,835 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:19:41,835 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:19:41,835 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:19:41,836 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:243]
2025-04-05 15:19:41,836 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 15:19:44,759 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:19:44,764 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:19:44,766 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 15:19:44,767 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:19:44,767 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:19:44,769 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:19:45,218 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:19:45,219 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:19:45,220 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:19:45,220 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:19:45,221 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:19:48,871 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:19:49,277 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:19:49,278 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:19:49,278 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:19:49,279 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:19:49,309 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:19:49,310 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:19:49,310 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6BEBDA545+20677]
	simdutf::get_active_implementation [0x00007FF6BEB36CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BEE2D75A+1807418]
	(No symbol) [0x00007FF6BE9772AC]
	(No symbol) [0x00007FF6BE97758B]
	(No symbol) [0x00007FF6BE9B85A7]
	(No symbol) [0x00007FF6BE99849F]
	(No symbol) [0x00007FF6BE96D6ED]
	(No symbol) [0x00007FF6BE9B5D61]
	(No symbol) [0x00007FF6BE9981C3]
	(No symbol) [0x00007FF6BE96CC36]
	(No symbol) [0x00007FF6BE96C0C4]
	(No symbol) [0x00007FF6BE96CA63]
	(No symbol) [0x00007FF6BEA55BDD]
	(No symbol) [0x00007FF6BEA62042]
	(No symbol) [0x00007FF6BEA5AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BECB42AA+262026]
	simdutf::get_active_implementation [0x00007FF6BEB44421+546385]
	simdutf::get_active_implementation [0x00007FF6BEB3D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6BEB3D819+518729]
	simdutf::get_active_implementation [0x00007FF6BEB2F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6BEBDA545+20677]
	simdutf::get_active_implementation [0x00007FF6BEB36CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BEE2D75A+1807418]
	(No symbol) [0x00007FF6BE9772AC]
	(No symbol) [0x00007FF6BE97758B]
	(No symbol) [0x00007FF6BE9B85A7]
	(No symbol) [0x00007FF6BE99849F]
	(No symbol) [0x00007FF6BE96D6ED]
	(No symbol) [0x00007FF6BE9B5D61]
	(No symbol) [0x00007FF6BE9981C3]
	(No symbol) [0x00007FF6BE96CC36]
	(No symbol) [0x00007FF6BE96C0C4]
	(No symbol) [0x00007FF6BE96CA63]
	(No symbol) [0x00007FF6BEA55BDD]
	(No symbol) [0x00007FF6BEA62042]
	(No symbol) [0x00007FF6BEA5AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BECB42AA+262026]
	simdutf::get_active_implementation [0x00007FF6BEB44421+546385]
	simdutf::get_active_implementation [0x00007FF6BEB3D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6BEB3D819+518729]
	simdutf::get_active_implementation [0x00007FF6BEB2F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:19:49,313 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:19:49,610 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:19:49,611 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6BEBDA545+20677]
	simdutf::get_active_implementation [0x00007FF6BEB36CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BEE2D75A+1807418]
	(No symbol) [0x00007FF6BE9772AC]
	(No symbol) [0x00007FF6BE97758B]
	(No symbol) [0x00007FF6BE9B85A7]
	(No symbol) [0x00007FF6BE99849F]
	(No symbol) [0x00007FF6BE96D6ED]
	(No symbol) [0x00007FF6BE9B5D61]
	(No symbol) [0x00007FF6BE9981C3]
	(No symbol) [0x00007FF6BE96CC36]
	(No symbol) [0x00007FF6BE96C0C4]
	(No symbol) [0x00007FF6BE96CA63]
	(No symbol) [0x00007FF6BEA55BDD]
	(No symbol) [0x00007FF6BEA62042]
	(No symbol) [0x00007FF6BEA5AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BECB42AA+262026]
	simdutf::get_active_implementation [0x00007FF6BEB44421+546385]
	simdutf::get_active_implementation [0x00007FF6BEB3D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6BEB3D819+518729]
	simdutf::get_active_implementation [0x00007FF6BEB2F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6BEBDA545+20677]
	simdutf::get_active_implementation [0x00007FF6BEB36CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BEE2D75A+1807418]
	(No symbol) [0x00007FF6BE9772AC]
	(No symbol) [0x00007FF6BE97758B]
	(No symbol) [0x00007FF6BE9B85A7]
	(No symbol) [0x00007FF6BE99849F]
	(No symbol) [0x00007FF6BE96D6ED]
	(No symbol) [0x00007FF6BE9B5D61]
	(No symbol) [0x00007FF6BE9981C3]
	(No symbol) [0x00007FF6BE96CC36]
	(No symbol) [0x00007FF6BE96C0C4]
	(No symbol) [0x00007FF6BE96CA63]
	(No symbol) [0x00007FF6BEA55BDD]
	(No symbol) [0x00007FF6BEA62042]
	(No symbol) [0x00007FF6BEA5AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BECB42AA+262026]
	simdutf::get_active_implementation [0x00007FF6BEB44421+546385]
	simdutf::get_active_implementation [0x00007FF6BEB3D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6BEB3D819+518729]
	simdutf::get_active_implementation [0x00007FF6BEB2F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:19:49,623 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:19:49,624 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:19:50,829 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:19:50,829 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:19:50,831 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:19:50,835 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:19:50,837 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:19:50,875 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:19:50,898 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:19:50,901 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:19:50,903 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:19:52,793 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:19:52,868 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:19:59,566 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:20:01,694 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS005_testscript.xlsx. [runner.py:636]
2025-04-05 15:20:01,694 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:637]
2025-04-05 15:20:01,694 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS005_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:640]
2025-04-05 15:20:01,695 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:641]
2025-04-05 15:20:01,695 - WafLogger - DEBUG - The file name TS005_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:645]
2025-04-05 15:20:01,695 - WafLogger - DEBUG - Checking if the file TS005_testscript.xlsx is present in chrome or edge folder. [runner.py:646]
2025-04-05 15:20:01,695 - WafLogger - DEBUG - The file TS005_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:666]
2025-04-05 15:20:01,700 - WafLogger - DEBUG - Starting the execution recording. [runner.py:672]
2025-04-05 15:20:01,701 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:20:01,702 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:20:01,702 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:20:01,704 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:20:03,943 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:20:03,944 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:20:03,946 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:20:03,947 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:20:03,951 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:20:03,951 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:20:03,952 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:20:03,953 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:20:03,953 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:20:04,092 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:20:04,093 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:20:04,117 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:20:04,118 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:20:04,119 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:20:04,120 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:20:04,120 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:20:04,121 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:20:04,121 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:20:04,121 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:20:04,122 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:20:04,122 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:20:04,122 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:20:04,122 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:20:04,123 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:20:04,123 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:20:04,123 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:20:04,123 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:20:04,124 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:20:04,124 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:20:04,124 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:20:04,124 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:20:04,125 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:20:04,125 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:20:04,125 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:20:04,125 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:20:04,126 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:20:04,126 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:20:04,126 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:20:04,127 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:20:04,130 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:20:04,131 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:20:04,131 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:20:04,131 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:20:04,132 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:20:04,133 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:20:04,133 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:20:04,134 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:20:04,136 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:20:04,137 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:20:04,138 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:20:04,138 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:20:04,139 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:20:04,139 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:20:04,139 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:20:04,139 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:243]
2025-04-05 15:20:04,140 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 15:20:07,533 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:20:07,536 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:20:07,537 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 15:20:07,538 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:20:07,539 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:20:07,541 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:20:07,943 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:20:07,943 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:20:07,944 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:20:07,944 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:20:07,945 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:20:11,909 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:20:12,172 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:20:12,173 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:20:12,173 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:20:12,174 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:20:12,197 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:20:12,198 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:20:12,199 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6BEBDA545+20677]
	simdutf::get_active_implementation [0x00007FF6BEB36CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BEE2D75A+1807418]
	(No symbol) [0x00007FF6BE9772AC]
	(No symbol) [0x00007FF6BE97758B]
	(No symbol) [0x00007FF6BE9B85A7]
	(No symbol) [0x00007FF6BE99849F]
	(No symbol) [0x00007FF6BE96D6ED]
	(No symbol) [0x00007FF6BE9B5D61]
	(No symbol) [0x00007FF6BE9981C3]
	(No symbol) [0x00007FF6BE96CC36]
	(No symbol) [0x00007FF6BE96C0C4]
	(No symbol) [0x00007FF6BE96CA63]
	(No symbol) [0x00007FF6BEA55BDD]
	(No symbol) [0x00007FF6BEA62042]
	(No symbol) [0x00007FF6BEA5AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BECB42AA+262026]
	simdutf::get_active_implementation [0x00007FF6BEB44421+546385]
	simdutf::get_active_implementation [0x00007FF6BEB3D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6BEB3D819+518729]
	simdutf::get_active_implementation [0x00007FF6BEB2F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6BEBDA545+20677]
	simdutf::get_active_implementation [0x00007FF6BEB36CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BEE2D75A+1807418]
	(No symbol) [0x00007FF6BE9772AC]
	(No symbol) [0x00007FF6BE97758B]
	(No symbol) [0x00007FF6BE9B85A7]
	(No symbol) [0x00007FF6BE99849F]
	(No symbol) [0x00007FF6BE96D6ED]
	(No symbol) [0x00007FF6BE9B5D61]
	(No symbol) [0x00007FF6BE9981C3]
	(No symbol) [0x00007FF6BE96CC36]
	(No symbol) [0x00007FF6BE96C0C4]
	(No symbol) [0x00007FF6BE96CA63]
	(No symbol) [0x00007FF6BEA55BDD]
	(No symbol) [0x00007FF6BEA62042]
	(No symbol) [0x00007FF6BEA5AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BECB42AA+262026]
	simdutf::get_active_implementation [0x00007FF6BEB44421+546385]
	simdutf::get_active_implementation [0x00007FF6BEB3D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6BEB3D819+518729]
	simdutf::get_active_implementation [0x00007FF6BEB2F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:20:12,205 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:20:12,431 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:20:12,451 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6BEBDA545+20677]
	simdutf::get_active_implementation [0x00007FF6BEB36CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BEE2D75A+1807418]
	(No symbol) [0x00007FF6BE9772AC]
	(No symbol) [0x00007FF6BE97758B]
	(No symbol) [0x00007FF6BE9B85A7]
	(No symbol) [0x00007FF6BE99849F]
	(No symbol) [0x00007FF6BE96D6ED]
	(No symbol) [0x00007FF6BE9B5D61]
	(No symbol) [0x00007FF6BE9981C3]
	(No symbol) [0x00007FF6BE96CC36]
	(No symbol) [0x00007FF6BE96C0C4]
	(No symbol) [0x00007FF6BE96CA63]
	(No symbol) [0x00007FF6BEA55BDD]
	(No symbol) [0x00007FF6BEA62042]
	(No symbol) [0x00007FF6BEA5AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BECB42AA+262026]
	simdutf::get_active_implementation [0x00007FF6BEB44421+546385]
	simdutf::get_active_implementation [0x00007FF6BEB3D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6BEB3D819+518729]
	simdutf::get_active_implementation [0x00007FF6BEB2F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6BEBDA545+20677]
	simdutf::get_active_implementation [0x00007FF6BEB36CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BEE2D75A+1807418]
	(No symbol) [0x00007FF6BE9772AC]
	(No symbol) [0x00007FF6BE97758B]
	(No symbol) [0x00007FF6BE9B85A7]
	(No symbol) [0x00007FF6BE99849F]
	(No symbol) [0x00007FF6BE96D6ED]
	(No symbol) [0x00007FF6BE9B5D61]
	(No symbol) [0x00007FF6BE9981C3]
	(No symbol) [0x00007FF6BE96CC36]
	(No symbol) [0x00007FF6BE96C0C4]
	(No symbol) [0x00007FF6BE96CA63]
	(No symbol) [0x00007FF6BEA55BDD]
	(No symbol) [0x00007FF6BEA62042]
	(No symbol) [0x00007FF6BEA5AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6BECB42AA+262026]
	simdutf::get_active_implementation [0x00007FF6BEB44421+546385]
	simdutf::get_active_implementation [0x00007FF6BEB3D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6BEB3D819+518729]
	simdutf::get_active_implementation [0x00007FF6BEB2F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:20:12,492 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:20:12,498 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:20:13,468 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:20:13,469 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:20:13,471 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:20:13,473 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:20:13,474 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:20:13,493 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:20:13,502 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:20:13,503 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:20:13,504 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:20:15,283 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:20:15,341 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:20:22,136 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:20:24,006 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-05 15:20:24,006 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-05 15:20:24,050 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-05 15:20:24,052 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-05 15:20:24,149 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-05 15:20:24,151 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-05 15:20:24,152 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-05 15:20:24,152 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-05 15:20:25,082 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-05 15:34:03,606 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:571]
2025-04-05 15:34:03,625 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:572]
2025-04-05 15:34:03,628 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:582]
2025-04-05 15:34:03,629 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-05 15:34:03,629 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:473]
2025-04-05 15:34:03,630 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:476]
2025-04-05 15:34:03,632 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:34:03,657 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:34:03,659 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:34:03,659 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:481]
2025-04-05 15:34:03,659 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:483]
2025-04-05 15:34:03,662 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:490]
2025-04-05 15:34:03,662 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:504]
2025-04-05 15:34:03,666 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:510]
2025-04-05 15:34:03,666 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:625]
2025-04-05 15:34:03,667 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:632]
2025-04-05 15:34:03,668 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:637]
2025-04-05 15:34:03,668 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:34:03,668 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:637]
2025-04-05 15:34:03,669 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:34:03,669 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:637]
2025-04-05 15:34:03,670 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:34:03,670 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS002_testscript.xlsx. [runner.py:637]
2025-04-05 15:34:03,670 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:34:03,670 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS002_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:34:03,671 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:34:03,671 - WafLogger - DEBUG - The file name TS002_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:34:03,671 - WafLogger - DEBUG - Checking if the file TS002_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:34:03,671 - WafLogger - DEBUG - The file TS002_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:684]
2025-04-05 15:34:03,682 - WafLogger - DEBUG - Starting the execution recording. [runner.py:690]
2025-04-05 15:34:03,683 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:34:03,684 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:34:03,684 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:34:03,738 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:34:06,142 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:34:06,143 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:34:06,147 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:34:06,147 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:34:06,243 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:34:06,243 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:34:06,246 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:34:06,246 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:34:06,246 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:34:06,267 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:34:06,269 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:34:06,301 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:34:06,301 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:34:06,302 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:34:06,303 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:34:06,304 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:34:06,304 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:34:06,304 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:34:06,304 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:34:06,305 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:34:06,305 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:34:06,305 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:34:06,305 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:34:06,306 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:34:06,306 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:34:06,306 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:34:06,306 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:34:06,307 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:34:06,307 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:34:06,307 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:34:06,307 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:34:06,307 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:34:06,308 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:34:06,308 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:34:06,308 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:34:06,309 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:34:06,312 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:34:06,313 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:34:06,313 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:34:06,313 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:34:06,314 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:34:06,314 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:34:06,314 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:34:06,314 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:34:06,315 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:34:06,316 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:34:06,317 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:34:06,317 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:34:06,317 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:34:06,318 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:34:06,318 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:34:06,318 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Chrome' to the keyword manager. [runner.py:239]
2025-04-05 15:34:06,318 - WafLogger - DEBUG - Launching Chrome ....... [keywords_manager.py:102]
2025-04-05 15:34:09,384 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:34:09,385 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:34:09,385 - WafLogger - DEBUG - Populating the browser details in the PDF report as Chrome [keywords_manager.py:115]
2025-04-05 15:34:09,386 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:34:09,386 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:34:09,391 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:34:10,077 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:34:10,078 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:34:10,078 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:34:10,079 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:34:10,079 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:34:13,380 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:34:13,599 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:34:13,600 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:34:13,600 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:34:14,667 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:34:14,667 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:34:14,671 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:34:14,673 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:34:14,695 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:34:14,774 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:34:14,781 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:34:14,781 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:34:14,782 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:34:16,318 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:34:16,387 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:34:23,279 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:34:25,694 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS003_testscript.xlsx. [runner.py:637]
2025-04-05 15:34:25,694 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:34:25,696 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS003_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:34:25,696 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:34:25,697 - WafLogger - DEBUG - The file name TS003_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:34:25,697 - WafLogger - DEBUG - Checking if the file TS003_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:34:25,697 - WafLogger - DEBUG - The file TS003_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:684]
2025-04-05 15:34:25,703 - WafLogger - DEBUG - Starting the execution recording. [runner.py:690]
2025-04-05 15:34:25,704 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:34:25,705 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:34:25,705 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:34:25,709 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:34:28,429 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:34:28,430 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:34:28,431 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:34:28,432 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:34:28,436 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:34:28,436 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:34:28,438 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:34:28,438 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:34:28,438 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:34:28,474 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:34:28,475 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:34:28,495 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:34:28,496 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:34:28,497 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:34:28,498 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:34:28,498 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:34:28,498 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:34:28,499 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:34:28,499 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:34:28,499 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:34:28,499 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:34:28,500 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:34:28,500 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:34:28,500 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:34:28,500 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:34:28,501 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:34:28,501 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:34:28,501 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:34:28,502 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:34:28,502 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:34:28,502 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:34:28,502 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:34:28,503 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:34:28,503 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:34:28,503 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:34:28,503 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:34:28,508 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:34:28,509 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:34:28,510 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:34:28,510 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:34:28,510 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:34:28,510 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:34:28,511 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:34:28,511 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:34:28,512 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:34:28,512 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:34:28,512 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:34:28,512 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:34:28,513 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:34:28,513 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:34:28,513 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:34:28,513 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Edge' to the keyword manager. [runner.py:239]
2025-04-05 15:34:28,513 - WafLogger - DEBUG - Launching Edge ....... [keywords_manager.py:102]
2025-04-05 15:34:31,650 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:34:31,670 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:34:31,684 - WafLogger - DEBUG - Populating the browser details in the PDF report as Edge [keywords_manager.py:120]
2025-04-05 15:34:31,715 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:34:31,725 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:34:31,729 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:34:32,048 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:34:32,050 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:34:32,050 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:34:32,051 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:34:32,051 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:34:35,698 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:34:35,999 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:34:36,000 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:34:36,000 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:34:36,870 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:34:36,871 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:34:36,873 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:34:36,875 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:34:36,876 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:34:36,897 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:34:36,903 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:34:36,906 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:34:36,907 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:34:38,237 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:34:38,304 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:34:45,165 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:34:47,036 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS004_testscript.xlsx. [runner.py:637]
2025-04-05 15:34:47,036 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:34:47,036 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS004_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:34:47,036 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:34:47,037 - WafLogger - DEBUG - The file name TS004_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:34:47,037 - WafLogger - DEBUG - Checking if the file TS004_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:34:47,037 - WafLogger - DEBUG - The file TS004_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:684]
2025-04-05 15:34:47,042 - WafLogger - DEBUG - Starting the execution recording. [runner.py:690]
2025-04-05 15:34:47,043 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:34:47,043 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:34:47,043 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:34:47,046 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:34:49,314 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:34:49,314 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:34:49,317 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:34:49,317 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:34:49,321 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:34:49,323 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:34:49,324 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:34:49,324 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:34:49,324 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:34:49,396 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:34:49,397 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:34:49,417 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:34:49,417 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:34:49,418 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:34:49,418 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:34:49,419 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:34:49,419 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:34:49,419 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:34:49,419 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:34:49,420 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:34:49,420 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:34:49,420 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:34:49,420 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:34:49,420 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:34:49,421 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:34:49,421 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:34:49,421 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:34:49,422 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:34:49,422 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:34:49,423 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:34:49,423 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:34:49,423 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:34:49,423 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:34:49,424 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:34:49,424 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:34:49,424 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:34:49,427 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:34:49,428 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:34:49,428 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:34:49,429 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:34:49,429 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:34:49,429 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:34:49,429 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:34:49,430 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:34:49,430 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:34:49,430 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:34:49,430 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:34:49,430 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:34:49,431 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:34:49,431 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:34:49,431 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:34:49,432 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Edge' to the keyword manager. [runner.py:239]
2025-04-05 15:34:49,432 - WafLogger - DEBUG - Launching Edge ....... [keywords_manager.py:102]
2025-04-05 15:34:52,274 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:34:52,283 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:34:52,290 - WafLogger - DEBUG - Populating the browser details in the PDF report as Edge [keywords_manager.py:120]
2025-04-05 15:34:52,302 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:34:52,303 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:34:52,309 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:34:52,648 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:34:52,649 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:34:52,649 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:34:52,650 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:34:52,651 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:34:55,996 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:34:56,211 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:34:56,213 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:34:56,213 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:34:57,384 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:34:57,384 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:34:57,387 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:34:57,391 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:34:57,392 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:34:57,425 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:34:57,431 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:34:57,432 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:34:57,432 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:34:59,013 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:34:59,099 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:35:05,907 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:35:07,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:637]
2025-04-05 15:35:07,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:35:07,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:637]
2025-04-05 15:35:07,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:35:07,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:637]
2025-04-05 15:35:07,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:35:07,848 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:35:07,848 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:35:07,848 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:35:07,849 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:35:07,849 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:649]
2025-04-05 15:35:07,851 - WafLogger - DEBUG - Starting the execution recording. [runner.py:655]
2025-04-05 15:35:07,852 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:35:07,853 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:35:07,853 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:35:07,857 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:35:10,201 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:35:10,246 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:35:10,249 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:35:10,250 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:35:10,254 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:35:10,255 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:35:10,256 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:35:10,257 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:35:10,257 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:35:10,274 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:35:10,274 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:35:10,299 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:35:10,300 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:35:10,301 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:35:10,301 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:35:10,301 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:35:10,302 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:35:10,302 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:35:10,302 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:35:10,303 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:35:10,303 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:35:10,303 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:35:10,304 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:35:10,304 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:35:10,304 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:35:10,305 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:35:10,305 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:35:10,305 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:35:10,306 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:35:10,306 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:35:10,306 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:35:10,306 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:35:10,307 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:35:10,307 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:35:10,307 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:35:10,308 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:35:10,314 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:35:10,316 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:35:10,316 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:35:10,316 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:35:10,317 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:35:10,317 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:35:10,317 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:35:10,318 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:35:10,318 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:35:10,318 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:35:10,318 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:35:10,318 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:35:10,319 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:35:10,319 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:35:10,319 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:35:10,319 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:243]
2025-04-05 15:35:10,320 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 15:35:13,184 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:35:13,186 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:35:13,188 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 15:35:13,189 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:35:13,189 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:35:13,190 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:35:13,481 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:35:13,482 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:35:13,482 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:35:13,482 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:35:13,483 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:35:17,051 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:35:17,238 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:35:17,240 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:35:17,240 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:35:18,109 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:35:18,109 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:35:18,112 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:35:18,114 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:35:18,116 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:35:18,144 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:35:18,154 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:35:18,154 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:35:18,154 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:35:19,455 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:35:19,512 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:35:26,213 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:35:28,057 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS005_testscript.xlsx. [runner.py:637]
2025-04-05 15:35:28,058 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:35:28,058 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS005_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:35:28,058 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:35:28,059 - WafLogger - DEBUG - The file name TS005_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:35:28,059 - WafLogger - DEBUG - Checking if the file TS005_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:35:28,059 - WafLogger - DEBUG - The file TS005_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:649]
2025-04-05 15:35:28,062 - WafLogger - DEBUG - Starting the execution recording. [runner.py:655]
2025-04-05 15:35:28,063 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:35:28,063 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:35:28,064 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:35:28,067 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:35:30,357 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:35:30,358 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:35:30,360 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:35:30,361 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:35:30,364 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:35:30,365 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:35:30,366 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:35:30,366 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:35:30,366 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:35:30,451 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:35:30,452 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:35:30,480 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:35:30,481 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:35:30,481 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:35:30,482 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:35:30,482 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:35:30,482 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:35:30,483 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:35:30,483 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:35:30,483 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:35:30,483 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:35:30,483 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:35:30,484 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:35:30,484 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:35:30,484 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:35:30,484 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:35:30,485 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:35:30,485 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:35:30,486 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:35:30,486 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:35:30,486 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:35:30,486 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:35:30,487 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:35:30,487 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:35:30,487 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:35:30,487 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:35:30,488 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:35:30,488 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:35:30,488 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:35:30,491 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:35:30,491 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:35:30,492 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:35:30,492 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:35:30,492 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:35:30,493 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:35:30,493 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:35:30,493 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:35:30,493 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:35:30,494 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:35:30,494 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:35:30,494 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:35:30,494 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:35:30,495 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:35:30,495 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:35:30,495 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:243]
2025-04-05 15:35:30,495 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 15:35:33,597 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:35:33,597 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:35:33,598 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 15:35:33,598 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:35:33,598 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:35:33,599 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:35:33,996 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:35:33,997 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:35:33,998 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:35:33,998 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:35:33,998 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:35:37,518 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:35:37,739 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:35:37,740 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:35:37,740 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:35:37,740 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:35:37,763 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:35:37,764 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:35:37,764 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]

2025-04-05 15:35:37,983 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:35:38,289 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:35:38,290 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]

2025-04-05 15:35:38,299 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:35:38,299 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:35:39,131 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:35:39,131 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:35:39,133 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:35:39,134 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:35:39,135 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:35:39,151 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:35:39,157 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:35:39,157 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:35:39,157 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:35:40,634 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:35:40,725 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:35:47,482 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:35:49,810 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:637]
2025-04-05 15:35:49,810 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:35:49,811 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:637]
2025-04-05 15:35:49,811 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:35:49,811 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:637]
2025-04-05 15:35:49,812 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:35:49,812 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:35:49,813 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:35:49,813 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:35:49,813 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:35:49,814 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:667]
2025-04-05 15:35:49,820 - WafLogger - DEBUG - Starting the execution recording. [runner.py:673]
2025-04-05 15:35:49,821 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:35:49,821 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:35:49,822 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:35:49,824 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:35:52,053 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:35:52,054 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:35:52,056 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:35:52,058 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:35:52,062 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:35:52,064 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:35:52,064 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:35:52,065 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:35:52,065 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:35:52,139 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:35:52,140 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:35:52,162 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:35:52,163 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:35:52,164 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:35:52,165 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:35:52,165 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:35:52,165 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:35:52,166 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:35:52,167 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:35:52,167 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:35:52,167 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:35:52,168 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:35:52,169 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:35:52,169 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:35:52,169 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:35:52,169 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:35:52,170 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:35:52,170 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:35:52,170 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:35:52,170 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:35:52,171 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:35:52,171 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:35:52,171 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:35:52,171 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:35:52,172 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:35:52,172 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:35:52,172 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:35:52,173 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:35:52,173 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:35:52,177 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:35:52,178 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:35:52,178 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:35:52,178 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:35:52,179 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:35:52,179 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:35:52,179 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:35:52,180 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:35:52,180 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:35:52,180 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:35:52,180 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:35:52,180 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:35:52,181 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:35:52,181 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:35:52,181 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:35:52,181 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:243]
2025-04-05 15:35:52,182 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 15:35:54,959 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:35:54,972 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:35:54,984 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 15:35:54,988 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:35:54,990 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:35:54,992 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:35:55,388 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:35:55,390 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:35:55,391 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:35:55,391 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:35:55,391 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:35:59,101 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:35:59,369 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:35:59,370 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:35:59,371 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:35:59,371 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:35:59,407 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:35:59,408 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:35:59,408 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF704A9A545+20677]
	simdutf::get_active_implementation [0x00007FF7049F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704CED75A+1807418]
	(No symbol) [0x00007FF7048372AC]
	(No symbol) [0x00007FF70483758B]
	(No symbol) [0x00007FF7048785A7]
	(No symbol) [0x00007FF70485849F]
	(No symbol) [0x00007FF70482D6ED]
	(No symbol) [0x00007FF704875D61]
	(No symbol) [0x00007FF7048581C3]
	(No symbol) [0x00007FF70482CC36]
	(No symbol) [0x00007FF70482C0C4]
	(No symbol) [0x00007FF70482CA63]
	(No symbol) [0x00007FF704915BDD]
	(No symbol) [0x00007FF704922042]
	(No symbol) [0x00007FF70491AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704B742AA+262026]
	simdutf::get_active_implementation [0x00007FF704A04421+546385]
	simdutf::get_active_implementation [0x00007FF7049FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7049FD819+518729]
	simdutf::get_active_implementation [0x00007FF7049EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF704A9A545+20677]
	simdutf::get_active_implementation [0x00007FF7049F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704CED75A+1807418]
	(No symbol) [0x00007FF7048372AC]
	(No symbol) [0x00007FF70483758B]
	(No symbol) [0x00007FF7048785A7]
	(No symbol) [0x00007FF70485849F]
	(No symbol) [0x00007FF70482D6ED]
	(No symbol) [0x00007FF704875D61]
	(No symbol) [0x00007FF7048581C3]
	(No symbol) [0x00007FF70482CC36]
	(No symbol) [0x00007FF70482C0C4]
	(No symbol) [0x00007FF70482CA63]
	(No symbol) [0x00007FF704915BDD]
	(No symbol) [0x00007FF704922042]
	(No symbol) [0x00007FF70491AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704B742AA+262026]
	simdutf::get_active_implementation [0x00007FF704A04421+546385]
	simdutf::get_active_implementation [0x00007FF7049FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7049FD819+518729]
	simdutf::get_active_implementation [0x00007FF7049EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:35:59,412 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:35:59,670 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:35:59,670 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF704A9A545+20677]
	simdutf::get_active_implementation [0x00007FF7049F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704CED75A+1807418]
	(No symbol) [0x00007FF7048372AC]
	(No symbol) [0x00007FF70483758B]
	(No symbol) [0x00007FF7048785A7]
	(No symbol) [0x00007FF70485849F]
	(No symbol) [0x00007FF70482D6ED]
	(No symbol) [0x00007FF704875D61]
	(No symbol) [0x00007FF7048581C3]
	(No symbol) [0x00007FF70482CC36]
	(No symbol) [0x00007FF70482C0C4]
	(No symbol) [0x00007FF70482CA63]
	(No symbol) [0x00007FF704915BDD]
	(No symbol) [0x00007FF704922042]
	(No symbol) [0x00007FF70491AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704B742AA+262026]
	simdutf::get_active_implementation [0x00007FF704A04421+546385]
	simdutf::get_active_implementation [0x00007FF7049FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7049FD819+518729]
	simdutf::get_active_implementation [0x00007FF7049EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF704A9A545+20677]
	simdutf::get_active_implementation [0x00007FF7049F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704CED75A+1807418]
	(No symbol) [0x00007FF7048372AC]
	(No symbol) [0x00007FF70483758B]
	(No symbol) [0x00007FF7048785A7]
	(No symbol) [0x00007FF70485849F]
	(No symbol) [0x00007FF70482D6ED]
	(No symbol) [0x00007FF704875D61]
	(No symbol) [0x00007FF7048581C3]
	(No symbol) [0x00007FF70482CC36]
	(No symbol) [0x00007FF70482C0C4]
	(No symbol) [0x00007FF70482CA63]
	(No symbol) [0x00007FF704915BDD]
	(No symbol) [0x00007FF704922042]
	(No symbol) [0x00007FF70491AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704B742AA+262026]
	simdutf::get_active_implementation [0x00007FF704A04421+546385]
	simdutf::get_active_implementation [0x00007FF7049FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7049FD819+518729]
	simdutf::get_active_implementation [0x00007FF7049EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:35:59,678 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:35:59,678 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:36:00,949 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:36:00,950 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:36:00,953 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:36:00,955 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:36:00,956 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:36:00,990 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:36:01,007 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:36:01,009 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:36:01,010 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:36:02,973 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:36:03,052 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:36:09,873 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:36:11,829 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS005_testscript.xlsx. [runner.py:637]
2025-04-05 15:36:11,830 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:36:11,830 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS005_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:36:11,831 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:36:11,831 - WafLogger - DEBUG - The file name TS005_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:36:11,832 - WafLogger - DEBUG - Checking if the file TS005_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:36:11,832 - WafLogger - DEBUG - The file TS005_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:667]
2025-04-05 15:36:11,837 - WafLogger - DEBUG - Starting the execution recording. [runner.py:673]
2025-04-05 15:36:11,838 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:420]
2025-04-05 15:36:11,839 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:427]
2025-04-05 15:36:11,839 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:433]
2025-04-05 15:36:11,841 - WafLogger - DEBUG - Starting recording. [runner.py:442]
2025-04-05 15:36:14,091 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:36:14,091 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:36:14,093 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:36:14,094 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:36:14,101 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:36:14,102 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:36:14,103 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:36:14,103 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:36:14,104 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:36:14,178 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:36:14,179 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:36:14,201 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:36:14,201 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:36:14,202 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:36:14,203 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:36:14,203 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:36:14,203 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:36:14,203 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:36:14,204 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:36:14,204 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:36:14,204 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:36:14,204 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:36:14,205 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:36:14,205 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:36:14,205 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:36:14,205 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:36:14,205 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:36:14,206 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:36:14,206 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:36:14,206 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:36:14,206 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:36:14,207 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:36:14,207 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:36:14,207 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:36:14,207 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:36:14,208 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:36:14,208 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:36:14,208 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:36:14,208 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:36:14,212 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:36:14,212 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:36:14,212 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:36:14,213 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:36:14,213 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:36:14,213 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:36:14,214 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:36:14,214 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:36:14,214 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:36:14,215 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:36:14,215 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:36:14,215 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:36:14,216 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:36:14,216 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:36:14,216 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:36:14,217 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:243]
2025-04-05 15:36:14,217 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 15:36:17,037 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:36:17,040 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:36:17,040 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 15:36:17,042 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:36:17,043 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:36:17,045 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:36:17,379 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:36:17,380 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:36:17,381 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:36:17,382 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:36:17,382 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:36:20,980 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:36:21,280 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:36:21,281 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:36:21,282 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:36:21,283 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:36:21,303 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:36:21,303 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:36:21,304 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF704A9A545+20677]
	simdutf::get_active_implementation [0x00007FF7049F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704CED75A+1807418]
	(No symbol) [0x00007FF7048372AC]
	(No symbol) [0x00007FF70483758B]
	(No symbol) [0x00007FF7048785A7]
	(No symbol) [0x00007FF70485849F]
	(No symbol) [0x00007FF70482D6ED]
	(No symbol) [0x00007FF704875D61]
	(No symbol) [0x00007FF7048581C3]
	(No symbol) [0x00007FF70482CC36]
	(No symbol) [0x00007FF70482C0C4]
	(No symbol) [0x00007FF70482CA63]
	(No symbol) [0x00007FF704915BDD]
	(No symbol) [0x00007FF704922042]
	(No symbol) [0x00007FF70491AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704B742AA+262026]
	simdutf::get_active_implementation [0x00007FF704A04421+546385]
	simdutf::get_active_implementation [0x00007FF7049FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7049FD819+518729]
	simdutf::get_active_implementation [0x00007FF7049EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF704A9A545+20677]
	simdutf::get_active_implementation [0x00007FF7049F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704CED75A+1807418]
	(No symbol) [0x00007FF7048372AC]
	(No symbol) [0x00007FF70483758B]
	(No symbol) [0x00007FF7048785A7]
	(No symbol) [0x00007FF70485849F]
	(No symbol) [0x00007FF70482D6ED]
	(No symbol) [0x00007FF704875D61]
	(No symbol) [0x00007FF7048581C3]
	(No symbol) [0x00007FF70482CC36]
	(No symbol) [0x00007FF70482C0C4]
	(No symbol) [0x00007FF70482CA63]
	(No symbol) [0x00007FF704915BDD]
	(No symbol) [0x00007FF704922042]
	(No symbol) [0x00007FF70491AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704B742AA+262026]
	simdutf::get_active_implementation [0x00007FF704A04421+546385]
	simdutf::get_active_implementation [0x00007FF7049FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7049FD819+518729]
	simdutf::get_active_implementation [0x00007FF7049EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:36:21,311 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:36:21,620 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:36:21,622 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF704A9A545+20677]
	simdutf::get_active_implementation [0x00007FF7049F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704CED75A+1807418]
	(No symbol) [0x00007FF7048372AC]
	(No symbol) [0x00007FF70483758B]
	(No symbol) [0x00007FF7048785A7]
	(No symbol) [0x00007FF70485849F]
	(No symbol) [0x00007FF70482D6ED]
	(No symbol) [0x00007FF704875D61]
	(No symbol) [0x00007FF7048581C3]
	(No symbol) [0x00007FF70482CC36]
	(No symbol) [0x00007FF70482C0C4]
	(No symbol) [0x00007FF70482CA63]
	(No symbol) [0x00007FF704915BDD]
	(No symbol) [0x00007FF704922042]
	(No symbol) [0x00007FF70491AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704B742AA+262026]
	simdutf::get_active_implementation [0x00007FF704A04421+546385]
	simdutf::get_active_implementation [0x00007FF7049FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7049FD819+518729]
	simdutf::get_active_implementation [0x00007FF7049EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF704A9A545+20677]
	simdutf::get_active_implementation [0x00007FF7049F6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704CED75A+1807418]
	(No symbol) [0x00007FF7048372AC]
	(No symbol) [0x00007FF70483758B]
	(No symbol) [0x00007FF7048785A7]
	(No symbol) [0x00007FF70485849F]
	(No symbol) [0x00007FF70482D6ED]
	(No symbol) [0x00007FF704875D61]
	(No symbol) [0x00007FF7048581C3]
	(No symbol) [0x00007FF70482CC36]
	(No symbol) [0x00007FF70482C0C4]
	(No symbol) [0x00007FF70482CA63]
	(No symbol) [0x00007FF704915BDD]
	(No symbol) [0x00007FF704922042]
	(No symbol) [0x00007FF70491AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF704B742AA+262026]
	simdutf::get_active_implementation [0x00007FF704A04421+546385]
	simdutf::get_active_implementation [0x00007FF7049FD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7049FD819+518729]
	simdutf::get_active_implementation [0x00007FF7049EF3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:36:21,630 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:36:21,630 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:36:22,939 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:36:22,939 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:36:22,941 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:36:22,944 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:36:22,946 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:36:22,985 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:36:22,997 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:36:22,997 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:36:22,998 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:36:24,832 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:36:24,989 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:36:31,845 - WafLogger - DEBUG - Finished recording. [runner.py:462]
2025-04-05 15:36:33,759 - WafLogger - DEBUG - 0hrs:2min:30sec:0ms [runner.py:704]
2025-04-05 15:36:33,763 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-05 15:36:33,764 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-05 15:36:33,815 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-05 15:36:33,816 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-05 15:36:33,858 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-05 15:36:33,860 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-05 15:36:33,860 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-05 15:36:33,861 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-05 15:36:34,738 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-05 15:38:32,985 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:571]
2025-04-05 15:38:32,985 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:572]
2025-04-05 15:38:32,988 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:582]
2025-04-05 15:38:32,988 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-05 15:38:32,988 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:473]
2025-04-05 15:38:32,989 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:476]
2025-04-05 15:38:32,990 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:38:33,000 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:38:33,090 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:38:33,091 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:481]
2025-04-05 15:38:33,092 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:483]
2025-04-05 15:38:33,095 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:490]
2025-04-05 15:38:33,096 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:504]
2025-04-05 15:38:33,097 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:510]
2025-04-05 15:38:33,097 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:625]
2025-04-05 15:38:33,098 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:632]
2025-04-05 15:38:33,099 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:637]
2025-04-05 15:38:33,099 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:38:33,100 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:637]
2025-04-05 15:38:33,100 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:38:33,101 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:637]
2025-04-05 15:38:33,101 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:38:33,102 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS002_testscript.xlsx. [runner.py:637]
2025-04-05 15:38:33,102 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:38:33,102 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS002_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:38:33,103 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:38:33,103 - WafLogger - DEBUG - The file name TS002_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:38:33,104 - WafLogger - DEBUG - Checking if the file TS002_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:38:33,104 - WafLogger - DEBUG - The file TS002_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:684]
2025-04-05 15:38:34,910 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:38:34,910 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:38:34,913 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:38:34,913 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:38:34,917 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:38:34,917 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:38:34,918 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:38:34,918 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:38:34,918 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:38:35,005 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:38:35,005 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:38:35,028 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:38:35,029 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:38:35,029 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:38:35,030 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:38:35,030 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:38:35,030 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:38:35,030 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:38:35,030 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:38:35,031 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:38:35,031 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:38:35,031 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:38:35,031 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:38:35,031 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:38:35,031 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:38:35,031 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:38:35,031 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:38:35,032 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:38:35,032 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:38:35,032 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:38:35,032 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:38:35,032 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:38:35,032 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:38:35,032 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:38:35,032 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:38:35,033 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:38:35,035 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:38:35,036 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:38:35,036 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:38:35,036 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:38:35,036 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:38:35,036 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:38:35,036 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:38:35,036 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:38:35,036 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:38:35,037 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:38:35,037 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:38:35,037 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:38:35,037 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:38:35,037 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:38:35,037 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:38:35,037 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Chrome' to the keyword manager. [runner.py:239]
2025-04-05 15:38:35,037 - WafLogger - DEBUG - Launching Chrome ....... [keywords_manager.py:102]
2025-04-05 15:38:37,308 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:38:37,308 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:38:37,308 - WafLogger - DEBUG - Populating the browser details in the PDF report as Chrome [keywords_manager.py:115]
2025-04-05 15:38:37,308 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:38:37,309 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:38:37,309 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:38:37,309 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:38:37,310 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:38:37,310 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:38:37,310 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:38:37,310 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:38:41,175 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:38:41,902 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:38:41,903 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:38:41,903 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:38:42,770 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:38:42,770 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:38:42,771 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:38:42,772 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:38:42,773 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:38:42,807 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:38:42,809 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:38:42,809 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:38:42,810 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:38:43,864 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:38:43,916 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:38:50,452 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS003_testscript.xlsx. [runner.py:637]
2025-04-05 15:38:50,452 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:38:50,453 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS003_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:38:50,453 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:38:50,453 - WafLogger - DEBUG - The file name TS003_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:38:50,453 - WafLogger - DEBUG - Checking if the file TS003_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:38:50,454 - WafLogger - DEBUG - The file TS003_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:684]
2025-04-05 15:38:52,123 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:38:52,124 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:38:52,127 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:38:52,128 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:38:52,131 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:38:52,132 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:38:52,133 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:38:52,133 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:38:52,133 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:38:52,170 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:38:52,171 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:38:52,186 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:38:52,187 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:38:52,188 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:38:52,188 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:38:52,189 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:38:52,189 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:38:52,189 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:38:52,190 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:38:52,190 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:38:52,190 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:38:52,190 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:38:52,191 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:38:52,191 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:38:52,191 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:38:52,192 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:38:52,192 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:38:52,193 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:38:52,193 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:38:52,193 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:38:52,193 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:38:52,194 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:38:52,194 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:38:52,194 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:38:52,195 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:38:52,195 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:38:52,198 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:38:52,199 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:38:52,199 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:38:52,199 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:38:52,200 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:38:52,200 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:38:52,200 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:38:52,201 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:38:52,201 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:38:52,201 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:38:52,202 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:38:52,202 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:38:52,202 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:38:52,203 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:38:52,203 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:38:52,203 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Edge' to the keyword manager. [runner.py:239]
2025-04-05 15:38:52,204 - WafLogger - DEBUG - Launching Edge ....... [keywords_manager.py:102]
2025-04-05 15:38:54,794 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:38:54,795 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:38:54,795 - WafLogger - DEBUG - Populating the browser details in the PDF report as Edge [keywords_manager.py:120]
2025-04-05 15:38:54,795 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:38:54,795 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:38:54,795 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:38:54,795 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:38:54,796 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:38:54,796 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:38:54,797 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:38:54,797 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:38:59,554 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:39:00,186 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:39:00,186 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:39:00,187 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:39:01,120 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:39:01,120 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:39:01,122 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:39:01,124 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:39:01,125 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:39:01,140 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:39:01,142 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:39:01,143 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:39:01,143 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:39:02,200 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:39:02,256 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:39:08,764 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS004_testscript.xlsx. [runner.py:637]
2025-04-05 15:39:08,764 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:39:08,765 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS004_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:39:08,765 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:39:08,766 - WafLogger - DEBUG - The file name TS004_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:39:08,767 - WafLogger - DEBUG - Checking if the file TS004_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:39:08,767 - WafLogger - DEBUG - The file TS004_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:684]
2025-04-05 15:39:10,547 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:39:10,547 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:39:10,549 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:39:10,549 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:39:10,553 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:39:10,553 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:39:10,554 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:39:10,554 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:39:10,554 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:39:10,645 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:39:10,646 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:39:10,667 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:39:10,668 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:39:10,669 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:39:10,669 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:39:10,669 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:39:10,669 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:39:10,669 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:39:10,670 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:39:10,670 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:39:10,670 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:39:10,670 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:39:10,670 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:39:10,670 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:39:10,670 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:39:10,671 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:39:10,671 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:39:10,671 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:39:10,671 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:39:10,671 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:39:10,671 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:39:10,671 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:39:10,672 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:39:10,672 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:39:10,672 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:39:10,672 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:39:10,675 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:39:10,675 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:39:10,676 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:39:10,676 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:39:10,676 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:39:10,677 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:39:10,677 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:39:10,677 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:39:10,677 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:39:10,677 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:39:10,679 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:39:10,679 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:39:10,679 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:39:10,679 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:39:10,679 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:39:10,679 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Edge' to the keyword manager. [runner.py:239]
2025-04-05 15:39:10,679 - WafLogger - DEBUG - Launching Edge ....... [keywords_manager.py:102]
2025-04-05 15:39:13,260 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:39:13,261 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:39:13,261 - WafLogger - DEBUG - Populating the browser details in the PDF report as Edge [keywords_manager.py:120]
2025-04-05 15:39:13,261 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:39:13,261 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:39:13,261 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:39:13,262 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:39:13,262 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:39:13,263 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:39:13,263 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:39:13,263 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:39:18,543 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:39:19,131 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:39:19,132 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:39:19,132 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:39:19,874 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:39:19,875 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:39:19,876 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:39:19,878 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:39:19,878 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:39:19,896 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:39:19,899 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:39:19,899 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:39:19,900 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:39:20,928 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:39:20,981 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:39:27,398 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:637]
2025-04-05 15:39:27,398 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:39:27,399 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:637]
2025-04-05 15:39:27,399 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:39:27,399 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:637]
2025-04-05 15:39:27,399 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:39:27,399 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:39:27,400 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:39:27,400 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:39:27,400 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:39:27,401 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:649]
2025-04-05 15:39:29,116 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:39:29,116 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:39:29,119 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:39:29,120 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:39:29,123 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:39:29,124 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:39:29,125 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:39:29,125 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:39:29,125 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:39:29,146 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:39:29,146 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:39:29,168 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:39:29,169 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:39:29,170 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:39:29,170 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:39:29,171 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:39:29,171 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:39:29,171 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:39:29,171 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:39:29,172 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:39:29,172 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:39:29,172 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:39:29,173 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:39:29,173 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:39:29,173 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:39:29,173 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:39:29,174 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:39:29,174 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:39:29,174 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:39:29,175 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:39:29,175 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:39:29,175 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:39:29,176 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:39:29,176 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:39:29,176 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:39:29,176 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:39:29,180 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:39:29,180 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:39:29,181 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:39:29,181 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:39:29,181 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:39:29,183 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:39:29,183 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:39:29,183 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:39:29,184 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:39:29,184 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:39:29,184 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:39:29,185 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:39:29,185 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:39:29,185 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:39:29,186 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:39:29,186 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:243]
2025-04-05 15:39:29,186 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 15:39:31,423 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:39:31,423 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:39:31,426 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 15:39:31,429 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:39:31,430 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:39:31,431 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:39:31,431 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:39:31,432 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:39:31,432 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:39:31,432 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:39:31,432 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:39:35,417 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:39:36,069 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:39:36,069 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:39:36,070 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:39:36,853 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:39:36,853 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:39:36,854 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:39:36,856 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:39:36,858 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:39:36,881 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:39:36,885 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:39:36,885 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:39:36,886 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:39:37,931 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:39:37,997 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:39:44,488 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS005_testscript.xlsx. [runner.py:637]
2025-04-05 15:39:44,488 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:39:44,488 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS005_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:39:44,489 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:39:44,489 - WafLogger - DEBUG - The file name TS005_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:39:44,489 - WafLogger - DEBUG - Checking if the file TS005_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:39:44,490 - WafLogger - DEBUG - The file TS005_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:649]
2025-04-05 15:39:46,256 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:39:46,257 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:39:46,259 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:39:46,259 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:39:46,263 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:39:46,263 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:39:46,264 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:39:46,264 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:39:46,265 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:39:46,347 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:39:46,347 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:39:46,371 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:39:46,372 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:39:46,373 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:39:46,374 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:39:46,374 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:39:46,374 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:39:46,374 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:39:46,374 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:39:46,375 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:39:46,375 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:39:46,375 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:39:46,375 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:39:46,375 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:39:46,376 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:39:46,376 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:39:46,376 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:39:46,376 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:39:46,376 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:39:46,376 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:39:46,376 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:39:46,377 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:39:46,377 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:39:46,377 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:39:46,377 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:39:46,377 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:39:46,377 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:39:46,378 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:39:46,378 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:39:46,382 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:39:46,383 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:39:46,383 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:39:46,383 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:39:46,384 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:39:46,384 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:39:46,384 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:39:46,384 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:39:46,385 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:39:46,385 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:39:46,385 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:39:46,385 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:39:46,385 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:39:46,385 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:39:46,385 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:39:46,385 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:243]
2025-04-05 15:39:46,385 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 15:39:48,587 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:39:48,587 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:39:48,588 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 15:39:48,588 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:39:48,588 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:39:48,588 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:39:48,588 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:39:48,588 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:39:48,589 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:39:48,589 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:39:48,589 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:39:52,535 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:39:53,368 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:39:53,369 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:39:53,369 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:39:53,369 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:39:53,391 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:39:53,391 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:39:53,391 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]

2025-04-05 15:39:53,573 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:39:54,166 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:39:54,166 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]

2025-04-05 15:39:54,169 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:39:54,169 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:39:54,893 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:39:54,894 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:39:54,895 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:39:54,896 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:39:54,897 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:39:54,914 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:39:54,939 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:39:54,939 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:39:54,939 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:39:56,135 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:39:56,215 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:40:02,797 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:637]
2025-04-05 15:40:02,797 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:40:02,797 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:637]
2025-04-05 15:40:02,798 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:40:02,798 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:637]
2025-04-05 15:40:02,798 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:40:02,798 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:40:02,798 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:40:02,798 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:40:02,798 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:40:02,799 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:667]
2025-04-05 15:40:04,517 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:40:04,518 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:40:04,520 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:40:04,520 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:40:04,524 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:40:04,524 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:40:04,525 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:40:04,525 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:40:04,525 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:40:04,540 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:40:04,540 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:40:04,560 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:40:04,560 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:40:04,561 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:40:04,562 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:40:04,562 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:40:04,562 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:40:04,563 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:40:04,563 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:40:04,564 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:40:04,564 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:40:04,564 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:40:04,565 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:40:04,565 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:40:04,565 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:40:04,565 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:40:04,565 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:40:04,566 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:40:04,566 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:40:04,566 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:40:04,566 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:40:04,566 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:40:04,566 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:40:04,566 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:40:04,567 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:40:04,567 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:40:04,567 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:40:04,567 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:40:04,568 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:40:04,570 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:40:04,571 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:40:04,571 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:40:04,571 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:40:04,572 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:40:04,572 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:40:04,572 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:40:04,573 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:40:04,573 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:40:04,573 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:40:04,574 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:40:04,574 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:40:04,574 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:40:04,574 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:40:04,574 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:40:04,574 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:243]
2025-04-05 15:40:04,574 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 15:40:06,828 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:40:06,828 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:40:06,829 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 15:40:06,829 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:40:06,829 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:40:06,829 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:40:06,829 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:40:06,830 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:40:06,830 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:40:06,830 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:40:06,830 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:40:11,047 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:40:11,673 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:40:11,675 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:40:11,675 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:40:11,675 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:40:11,701 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:40:11,701 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:40:11,702 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:40:11,707 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:40:12,368 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:40:12,369 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:40:12,373 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:40:12,373 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:40:13,212 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:40:13,213 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:40:13,215 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:40:13,216 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:40:13,218 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:40:13,238 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:40:13,245 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:40:13,245 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:40:13,245 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:40:14,403 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:40:14,493 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:40:21,010 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS005_testscript.xlsx. [runner.py:637]
2025-04-05 15:40:21,011 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:638]
2025-04-05 15:40:21,011 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS005_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:641]
2025-04-05 15:40:21,011 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:642]
2025-04-05 15:40:21,011 - WafLogger - DEBUG - The file name TS005_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:646]
2025-04-05 15:40:21,011 - WafLogger - DEBUG - Checking if the file TS005_testscript.xlsx is present in chrome or edge folder. [runner.py:647]
2025-04-05 15:40:21,011 - WafLogger - DEBUG - The file TS005_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:667]
2025-04-05 15:40:22,714 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:40:22,714 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:40:22,716 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:40:22,717 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:40:22,720 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:40:22,721 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:40:22,721 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:40:22,722 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:40:22,722 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:40:22,724 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:40:22,724 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:40:22,736 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:40:22,737 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:40:22,737 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:40:22,739 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:40:22,739 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:40:22,739 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:40:22,739 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:40:22,739 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:40:22,739 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:40:22,739 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:40:22,739 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:40:22,740 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:40:22,740 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:40:22,740 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:40:22,740 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:40:22,740 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:40:22,741 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:40:22,741 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:40:22,741 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:40:22,741 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:40:22,741 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:40:22,741 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:40:22,742 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:40:22,742 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:40:22,742 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:40:22,742 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:40:22,742 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:40:22,742 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:40:22,745 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:40:22,745 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:40:22,746 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:40:22,746 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:40:22,746 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:40:22,746 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:40:22,746 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:40:22,747 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:40:22,747 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:40:22,747 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:40:22,747 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:40:22,747 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:40:22,748 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:40:22,748 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:40:22,748 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:40:22,748 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:243]
2025-04-05 15:40:22,748 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 15:40:24,979 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:40:24,979 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:40:24,979 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 15:40:24,979 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:40:24,980 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:40:24,980 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:40:24,980 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:40:24,981 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:40:24,981 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:40:24,981 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:40:24,981 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:40:29,072 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:40:29,578 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:40:29,579 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:40:29,579 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:40:29,579 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:40:29,599 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:40:29,599 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:40:29,599 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:40:29,604 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:40:30,275 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:40:30,276 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:40:30,283 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:40:30,283 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:40:30,982 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:40:30,982 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:40:30,984 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:40:30,986 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:40:30,987 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:40:31,006 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:40:31,010 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:40:31,011 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:40:31,011 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:40:32,245 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:40:32,313 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:40:38,818 - WafLogger - INFO - 0hrs:2min:6sec:0ms [runner.py:704]
2025-04-05 15:40:38,820 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-05 15:40:38,821 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-05 15:40:38,855 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-05 15:40:38,855 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-05 15:40:38,868 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-05 15:40:38,869 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-05 15:40:38,869 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-05 15:40:38,869 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-05 15:40:39,729 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
2025-04-05 15:40:59,409 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:571]
2025-04-05 15:40:59,409 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:572]
2025-04-05 15:40:59,410 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:582]
2025-04-05 15:40:59,412 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-05 15:40:59,412 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:473]
2025-04-05 15:40:59,412 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:476]
2025-04-05 15:40:59,414 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:40:59,415 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:40:59,418 - WafLogger - DEBUG - Folder and its content removed [utilities.py:106]
2025-04-05 15:40:59,418 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:481]
2025-04-05 15:40:59,419 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:483]
2025-04-05 15:40:59,420 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:490]
2025-04-05 15:40:59,420 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:504]
2025-04-05 15:40:59,421 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:510]
2025-04-05 15:40:59,421 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:713]
2025-04-05 15:40:59,422 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:728]
2025-04-05 15:40:59,428 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:736]
2025-04-05 15:40:59,429 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,429 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:736]
2025-04-05 15:40:59,429 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,430 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:736]
2025-04-05 15:40:59,430 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,430 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS002_testscript.xlsx. [runner.py:736]
2025-04-05 15:40:59,430 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,430 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS002_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:740]
2025-04-05 15:40:59,430 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:741]
2025-04-05 15:40:59,431 - WafLogger - DEBUG - The file name TS002_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:745]
2025-04-05 15:40:59,431 - WafLogger - DEBUG - Checking if the file TS002_testscript.xlsx is present in chrome or edge folder. [runner.py:746]
2025-04-05 15:40:59,431 - WafLogger - DEBUG - The file TS002_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:754]
2025-04-05 15:40:59,431 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS003_testscript.xlsx. [runner.py:736]
2025-04-05 15:40:59,431 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,432 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS003_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:740]
2025-04-05 15:40:59,432 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:741]
2025-04-05 15:40:59,432 - WafLogger - DEBUG - The file name TS003_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:745]
2025-04-05 15:40:59,432 - WafLogger - DEBUG - Checking if the file TS003_testscript.xlsx is present in chrome or edge folder. [runner.py:746]
2025-04-05 15:40:59,433 - WafLogger - DEBUG - The file TS003_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:754]
2025-04-05 15:40:59,433 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS004_testscript.xlsx. [runner.py:736]
2025-04-05 15:40:59,433 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,434 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\TS004_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:740]
2025-04-05 15:40:59,434 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:741]
2025-04-05 15:40:59,434 - WafLogger - DEBUG - The file name TS004_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:745]
2025-04-05 15:40:59,434 - WafLogger - DEBUG - Checking if the file TS004_testscript.xlsx is present in chrome or edge folder. [runner.py:746]
2025-04-05 15:40:59,435 - WafLogger - DEBUG - The file TS004_testscript.xlsx is present in test_scripts folder. Launching the execution and browser will be choosen from test script. [runner.py:754]
2025-04-05 15:40:59,435 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:736]
2025-04-05 15:40:59,435 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,435 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:736]
2025-04-05 15:40:59,436 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,436 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:736]
2025-04-05 15:40:59,436 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,436 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:740]
2025-04-05 15:40:59,437 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:741]
2025-04-05 15:40:59,437 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:745]
2025-04-05 15:40:59,437 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:746]
2025-04-05 15:40:59,437 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:748]
2025-04-05 15:40:59,438 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS005_testscript.xlsx. [runner.py:736]
2025-04-05 15:40:59,438 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,438 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS005_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:740]
2025-04-05 15:40:59,438 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:741]
2025-04-05 15:40:59,439 - WafLogger - DEBUG - The file name TS005_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:745]
2025-04-05 15:40:59,439 - WafLogger - DEBUG - Checking if the file TS005_testscript.xlsx is present in chrome or edge folder. [runner.py:746]
2025-04-05 15:40:59,439 - WafLogger - DEBUG - The file TS005_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:748]
2025-04-05 15:40:59,439 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:736]
2025-04-05 15:40:59,440 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,440 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:736]
2025-04-05 15:40:59,440 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,440 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:736]
2025-04-05 15:40:59,441 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,441 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:740]
2025-04-05 15:40:59,441 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:741]
2025-04-05 15:40:59,441 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:745]
2025-04-05 15:40:59,441 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:746]
2025-04-05 15:40:59,441 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:751]
2025-04-05 15:40:59,442 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS005_testscript.xlsx. [runner.py:736]
2025-04-05 15:40:59,442 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:737]
2025-04-05 15:40:59,442 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS005_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:740]
2025-04-05 15:40:59,442 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:741]
2025-04-05 15:40:59,442 - WafLogger - DEBUG - The file name TS005_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:745]
2025-04-05 15:40:59,442 - WafLogger - DEBUG - Checking if the file TS005_testscript.xlsx is present in chrome or edge folder. [runner.py:746]
2025-04-05 15:40:59,442 - WafLogger - DEBUG - The file TS005_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:751]
2025-04-05 15:41:02,643 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:41:02,643 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:41:02,646 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:41:02,647 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:41:02,648 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:41:02,649 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:41:02,651 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:41:02,651 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:41:02,652 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:41:02,653 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:41:02,654 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:41:02,654 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:41:02,654 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:41:02,655 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:41:02,655 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:41:02,658 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:41:02,659 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:41:02,659 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:41:02,659 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:41:02,661 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:41:02,661 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:41:02,661 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
ceeding execution. [runner.py:106]
2025-04-05 15:41:02,661 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:41:02,661 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:41:02,662 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:41:02,669 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:41:02,670 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:41:02,672 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:41:02,672 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:41:02,672 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:41:02,672 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:41:02,672 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:41:02,672 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:41:02,673 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:41:02,674 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:41:02,674 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:41:02,675 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,675 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,675 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:41:02,675 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:41:02,676 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,676 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,676 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:41:02,676 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:41:02,677 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,677 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,677 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:41:02,678 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:41:02,678 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,678 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,678 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:41:02,678 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:41:02,679 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:41:02,679 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:41:02,680 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,680 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,681 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:41:02,681 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:41:02,681 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:41:02,683 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:41:02,683 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:41:02,683 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:41:02,684 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:41:02,685 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:41:02,686 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:41:02,686 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,686 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:41:02,686 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,686 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:41:02,686 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:41:02,686 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:41:02,686 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:41:02,687 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,687 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,687 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:41:02,687 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:41:02,687 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:41:02,687 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:41:02,687 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,687 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:41:02,688 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:41:02,689 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:41:02,689 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:41:02,689 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:41:02,689 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:41:02,689 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,689 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:41:02,689 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,689 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:41:02,689 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:41:02,690 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:41:02,690 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:41:02,690 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:41:02,690 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:41:02,690 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Edge' to the keyword manager. [runner.py:239]
2025-04-05 15:41:02,690 - WafLogger - DEBUG - Launching Edge ....... [keywords_manager.py:102]
2025-04-05 15:41:02,690 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:41:02,691 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:41:02,691 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:41:02,692 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:41:02,692 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:41:02,692 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:41:02,692 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:41:02,692 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:41:02,693 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:41:02,693 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:41:02,693 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,693 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:41:02,708 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
41:02,696 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:41:02,694 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:41:02,842 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:41:02,842 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:41:02,843 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:41:02,843 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:41:02,843 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,843 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:41:02,844 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,844 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:41:02,845 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:41:02,845 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:41:02,845 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:41:02,846 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:41:02,846 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:41:02,846 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:41:02,846 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:41:02,847 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,847 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:41:02,847 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:41:02,847 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,847 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:41:02,847 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:41:02,847 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:41:02,847 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:41:02,847 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:41:02,848 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:41:02,848 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,848 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:41:02,848 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:41:02,848 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,848 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,848 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:41:02,849 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
unner.py:177]
2025-04-05 15:41:02,849 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,849 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:41:02,849 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:41:02,849 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:41:02,849 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:41:02,850 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,850 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:41:02,850 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:41:02,850 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,850 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:243]
2025-04-05 15:41:02,850 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:41:02,850 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:41:02,850 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,851 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 15:41:02,851 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,851 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:41:02,851 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:41:02,851 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,851 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:41:02,851 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,852 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:41:02,852 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:41:02,853 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,853 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,853 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:41:02,853 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:41:02,854 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:41:02,854 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,854 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,855 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:41:02,855 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:41:02,859 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:41:02,861 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:41:02,861 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:41:02,861 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:41:02,862 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:41:02,862 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:41:02,863 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:41:02,864 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:41:02,864 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:41:02,864 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:41:02,865 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:41:02,865 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:41:02,865 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:41:02,866 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:41:02,867 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:41:02,867 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:41:02,869 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:41:02,869 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:41:02,870 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:41:02,870 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:41:02,870 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:41:02,871 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:41:02,871 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Edge' to the keyword manager. [runner.py:239]
2025-04-05 15:41:02,871 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:41:02,871 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:41:02,872 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:226]
2025-04-05 15:41:02,872 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:41:02,872 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:41:02,872 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:41:02,873 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:41:02,873 - WafLogger - DEBUG - The 'launch_browser' paramater is empty. Taking this paramater from test script excel file. [runner.py:238]
2025-04-05 15:41:02,873 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'Chrome' to the keyword manager. [runner.py:239]
2025-04-05 15:41:02,873 - WafLogger - DEBUG - Launching Chrome ....... [keywords_manager.py:102]
2025-04-05 15:41:02,874 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:41:02,876 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:41:02,878 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:41:02,880 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:41:02,880 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,880 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,880 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:41:02,881 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:41:02,881 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,881 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,881 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:41:02,882 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:41:02,882 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,883 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,883 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:41:02,883 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:41:02,884 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,885 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,885 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:41:02,886 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:41:02,887 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:41:02,887 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,888 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,888 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:41:02,888 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:41:02,890 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:41:02,890 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
2025-04-05 15:41:02,891 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:41:02,898 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:41:02,899 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:41:02,899 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:41:02,901 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:41:02,901 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:41:02,902 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:41:02,902 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:41:02,903 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:41:02,903 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:41:02,904 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:41:02,904 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:41:02,905 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:41:02,907 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:41:02,908 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:41:02,908 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:41:02,908 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:243]
2025-04-05 15:41:02,909 - WafLogger - DEBUG - Launching chrome ....... [keywords_manager.py:102]
2025-04-05 15:41:06,990 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:41:06,991 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:41:06,994 - WafLogger - DEBUG - Populating the browser details in the PDF report as chrome [keywords_manager.py:115]
2025-04-05 15:41:07,003 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:41:07,004 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:41:07,004 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:41:07,004 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:07,006 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:41:07,012 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:41:07,012 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:41:07,013 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:41:07,077 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:41:07,079 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:41:07,082 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:41:07,083 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
5]
2025-04-05 15:41:07,083 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:41:07,086 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
chrome [keywords_manager.py:115]
2025-04-05 15:41:07,086 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:41:07,086 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:41:07,086 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:07,086 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:41:07,086 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:41:07,087 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:07,087 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:41:07,088 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:41:07,090 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:41:07,093 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:41:07,094 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:41:07,094 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:41:07,095 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:41:07,095 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:41:07,219 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:41:07,227 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:41:07,227 - WafLogger - DEBUG - Populating the browser details in the PDF report as Edge [keywords_manager.py:120]
2025-04-05 15:41:07,228 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:41:07,228 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:41:07,228 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:41:07,228 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:07,229 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:41:07,229 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:41:07,230 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:41:07,230 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:41:10,985 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:41:10,986 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:41:10,986 - WafLogger - DEBUG - Populating the browser details in the PDF report as Edge [keywords_manager.py:120]
2025-04-05 15:41:10,987 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:41:10,994 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:41:10,996 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:41:10,998 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:11,000 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:41:11,001 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:41:11,001 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:41:11,002 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:41:13,147 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:41:13,152 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:41:13,642 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:41:14,315 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:41:14,328 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:14,329 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:41:14,329 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:41:14,329 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:14,330 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:41:14,331 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:41:14,331 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:41:14,366 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:41:14,373 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:41:14,383 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]

2025-04-05 15:41:14,499 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:41:14,770 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:14,782 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:41:14,795 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:41:15,099 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:41:15,283 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:15,285 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:41:15,286 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:41:15,357 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:15,359 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: chrome=134.0.6998.178); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00B1C7F3+24435]
	(No symbol) [0x00AA2074]
	(No symbol) [0x009706E3]
	(No symbol) [0x009B8B39]
	(No symbol) [0x009B8E8B]
	(No symbol) [0x00A01AC2]
	(No symbol) [0x009DD804]
	(No symbol) [0x009FF20A]
	(No symbol) [0x009DD5B6]
	(No symbol) [0x009AC54F]
	(No symbol) [0x009AD894]
	GetHandleVerifier [0x00E270A3+3213347]
	GetHandleVerifier [0x00E3B0C9+3295305]
	GetHandleVerifier [0x00E3558C+3271948]
	GetHandleVerifier [0x00BB7360+658144]
	(No symbol) [0x00AAB27D]
	(No symbol) [0x00AA8208]
	(No symbol) [0x00AA83A9]
	(No symbol) [0x00A9AAC0]
	BaseThreadInitThunk [0x76025D49+25]
	RtlInitializeExceptionChain [0x7755CE3B+107]
	RtlGetAppContainerNamedObjectPath [0x7755CDC1+561]

2025-04-05 15:41:15,439 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:41:15,440 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:41:15,889 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:15,890 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:41:15,890 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:41:16,142 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:41:16,142 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:41:16,146 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:41:16,147 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:41:16,169 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:41:16,237 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:41:16,241 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:41:16,242 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:41:16,242 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:41:16,339 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:41:16,340 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:41:16,343 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:41:16,346 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:41:16,348 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:41:16,375 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:41:16,387 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:41:16,389 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:41:16,389 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:41:17,588 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:41:17,662 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:41:17,982 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:41:18,040 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:41:27,362 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:41:27,363 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:72]
2025-04-05 15:41:27,363 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:41:27,363 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:76]
2025-04-05 15:41:27,365 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:41:27,365 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:79]
2025-04-05 15:41:27,366 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:41:27,366 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:89]
2025-04-05 15:41:27,381 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:41:27,381 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:94]
2025-04-05 15:41:27,382 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:41:27,382 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:100]
2025-04-05 15:41:27,383 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:41:27,384 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:41:27,384 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:103]
2025-04-05 15:41:27,385 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:41:27,385 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:106]
2025-04-05 15:41:27,385 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:107]
2025-04-05 15:41:27,386 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:41:27,386 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:41:27,386 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:109]
2025-04-05 15:41:27,387 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:112]
2025-04-05 15:41:27,401 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:41:27,401 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:114]
2025-04-05 15:41:27,402 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:41:27,402 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:121]
2025-04-05 15:41:27,403 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:41:27,403 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:123]
2025-04-05 15:41:27,403 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:41:27,403 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:125]
2025-04-05 15:41:27,404 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,404 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,404 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,404 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,404 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:41:27,404 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:177]
2025-04-05 15:41:27,404 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:41:27,405 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:125]
2025-04-05 15:41:27,405 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,405 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,405 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,405 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,405 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:41:27,405 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:182]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:125]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:187]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:41:27,406 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:125]
2025-04-05 15:41:27,407 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,407 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,407 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,407 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,407 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:143]
2025-04-05 15:41:27,407 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:41:27,407 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:192]
2025-04-05 15:41:27,408 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:41:27,408 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:125]
2025-04-05 15:41:27,408 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,408 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,408 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,409 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,409 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:41:27,409 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:197]
2025-04-05 15:41:27,409 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:41:27,409 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:125]
2025-04-05 15:41:27,409 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:127]
2025-04-05 15:41:27,409 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:131]
er.py:127]
2025-04-05 15:41:27,409 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
ck' is a valid keyword. [runner.py:131]
2025-04-05 15:41:27,410 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:202]
2025-04-05 15:41:27,412 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:41:27,412 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:212]
2025-04-05 15:41:27,413 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:41:27,413 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:214]
2025-04-05 15:41:27,413 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:41:27,413 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:217]
2025-04-05 15:41:27,413 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:41:27,413 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:56]
2025-04-05 15:41:27,414 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:41:27,414 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:214]
2025-04-05 15:41:27,414 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:41:27,414 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:221]
2025-04-05 15:41:27,414 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:41:27,414 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:68]
2025-04-05 15:41:27,414 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:41:27,414 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:214]
2025-04-05 15:41:27,415 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:41:27,415 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:225]
2025-04-05 15:41:27,415 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:41:27,415 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:226]
2025-04-05 15:41:27,415 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:41:27,415 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:78]
2025-04-05 15:41:27,415 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:41:27,415 - WafLogger - DEBUG - Step is captured to be added to PDF report. [pdf_report_manager.py:77]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:214]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:235]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:242]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:243]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:243]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 15:41:27,416 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:102]
2025-04-05 15:41:29,892 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:41:29,893 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:41:29,893 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 15:41:29,893 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:41:29,893 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:41:29,894 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:41:29,894 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:29,894 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:41:29,895 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:41:29,895 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:41:29,895 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:41:31,998 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:104]
2025-04-05 15:41:32,000 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:111]
2025-04-05 15:41:32,001 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:120]
2025-04-05 15:41:32,001 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:146]
2025-04-05 15:41:32,001 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:54]
2025-04-05 15:41:32,002 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:124]
2025-04-05 15:41:32,002 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:32,004 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:214]
2025-04-05 15:41:32,004 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:289]
2025-04-05 15:41:32,005 - WafLogger - DEBUG - Opening URL [keywords_manager.py:274]
2025-04-05 15:41:32,005 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:65]
2025-04-05 15:41:33,831 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:41:34,506 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:34,508 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:41:34,508 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:41:34,508 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:41:34,531 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:41:34,531 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:41:34,531 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:41:34,538 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:41:35,181 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:35,182 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:41:35,188 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:41:35,189 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:41:35,816 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:279]
2025-04-05 15:41:35,945 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:41:35,945 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:41:35,946 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:41:35,947 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:41:35,948 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:41:35,962 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:41:35,964 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:41:35,964 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:41:35,965 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:41:36,650 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:36,652 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:214]
2025-04-05 15:41:36,652 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:385]
2025-04-05 15:41:36,653 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:386]
2025-04-05 15:41:36,674 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:434]
2025-04-05 15:41:36,675 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:86]
2025-04-05 15:41:36,675 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [keywords_manager.py:381]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:41:36,681 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:382]
2025-04-05 15:41:37,351 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:41:37,396 - WafLogger - DEBUG - Sub Step is captured to be added to PDF report. [pdf_report_manager.py:89]
2025-04-05 15:41:37,396 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]
 [runner.py:390]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 388, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 373, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 82, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 431, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6EA82A545+20677]
	simdutf::get_active_implementation [0x00007FF6EA786CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EAA7D75A+1807418]
	(No symbol) [0x00007FF6EA5C72AC]
	(No symbol) [0x00007FF6EA5C758B]
	(No symbol) [0x00007FF6EA6085A7]
	(No symbol) [0x00007FF6EA5E849F]
	(No symbol) [0x00007FF6EA5BD6ED]
	(No symbol) [0x00007FF6EA605D61]
	(No symbol) [0x00007FF6EA5E81C3]
	(No symbol) [0x00007FF6EA5BCC36]
	(No symbol) [0x00007FF6EA5BC0C4]
	(No symbol) [0x00007FF6EA5BCA63]
	(No symbol) [0x00007FF6EA6A5BDD]
	(No symbol) [0x00007FF6EA6B2042]
	(No symbol) [0x00007FF6EA6AAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6EA9042AA+262026]
	simdutf::get_active_implementation [0x00007FF6EA794421+546385]
	simdutf::get_active_implementation [0x00007FF6EA78D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6EA78D819+518729]
	simdutf::get_active_implementation [0x00007FF6EA77F3C6+460278]
	BaseThreadInitThunk [0x00007FFEF02FE8D7+23]
	RtlUserThreadStart [0x00007FFEF0D5BF6C+44]

2025-04-05 15:41:37,403 - WafLogger - DEBUG - Gathering test summary results. [runner.py:405]
2025-04-05 15:41:37,403 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:407]
2025-04-05 15:41:37,426 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:41:38,273 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:410]
2025-04-05 15:41:38,273 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:45]
2025-04-05 15:41:38,275 - WafLogger - DEBUG - Finalizing the data to be added to PDF report. [pdf_report_manager.py:121]
2025-04-05 15:41:38,276 - WafLogger - DEBUG - Encoding the logo png file [pdf_reporting.py:69]
2025-04-05 15:41:38,277 - WafLogger - DEBUG - Decrypting the PDF report template [pdf_reporting.py:117]
2025-04-05 15:41:38,301 - WafLogger - DEBUG - Generated the PDF report template with appropriate data [pdf_reporting.py:126]
2025-04-05 15:41:38,304 - WafLogger - DEBUG - Creating the PDF report header template [pdf_reporting.py:80]
2025-04-05 15:41:38,304 - WafLogger - DEBUG - Creating the PDF report footer template [pdf_reporting.py:99]
2025-04-05 15:41:38,305 - WafLogger - DEBUG - Starting creation of PDF report from template with populated data [pdf_reporting.py:142]
2025-04-05 15:41:39,562 - WafLogger - DEBUG - Completed creation of PDF report from template with populated data [pdf_reporting.py:167]
2025-04-05 15:41:39,628 - WafLogger - DEBUG - Closing Browser [driver_functions.py:43]
2025-04-05 15:41:46,215 - WafLogger - INFO - 0hrs:0min:47sec:0ms [runner.py:772]
2025-04-05 15:41:46,224 - WafLogger - DEBUG - Checking if output.xlsx file exists before creating the test summary PDF report. [pdf_report_manager.py:148]
2025-04-05 15:41:46,225 - WafLogger - DEBUG - Output.xlsx exists and starting to create test summary PDF report. [pdf_report_manager.py:150]
2025-04-05 15:41:46,278 - WafLogger - DEBUG - Encoding the logo png file [pdf_ts_reporting.py:52]
2025-04-05 15:41:46,278 - WafLogger - DEBUG - Decrypting the test summary report PDF template [pdf_ts_reporting.py:100]
2025-04-05 15:41:46,293 - WafLogger - DEBUG - Generated the test summary report PDF template with appropriate data [pdf_ts_reporting.py:109]
2025-04-05 15:41:46,294 - WafLogger - DEBUG - Creating the test summary report PDF header template [pdf_ts_reporting.py:63]
2025-04-05 15:41:46,295 - WafLogger - DEBUG - Creating the test summary report PDF footer template [pdf_ts_reporting.py:82]
2025-04-05 15:41:46,295 - WafLogger - DEBUG - Starting creation of test dummary PDF report from template with populated data [pdf_ts_reporting.py:127]
2025-04-05 15:41:47,180 - WafLogger - DEBUG - Completed creation of test summary PDF report from template with populated data [pdf_ts_reporting.py:151]
