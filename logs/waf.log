2025-04-02 09:39:02,580 - WafLogger - DEBUG - Testing debug message.
2025-04-02 09:39:02,582 - WafLogger - INFO - Testing info message.
2025-04-02 09:39:02,583 - WafLogger - WARNING - Testing warning message.
2025-04-02 09:39:02,584 - WafLogger - ERROR - Testing error message.
2025-04-02 09:39:02,584 - WafLogger - CRITICAL - Testing critical message.
2025-04-02 09:41:37,494 - WafLogger - DEBUG - Testing debug message. [logger_config.py:38]
2025-04-02 09:41:37,495 - WafLogger - INFO - Testing info message. [logger_config.py:39]
2025-04-02 09:41:37,495 - WafLogger - WARNING - Testing warning message. [logger_config.py:40]
2025-04-02 09:41:37,495 - WafLogger - ERROR - Testing error message. [logger_config.py:41]
2025-04-02 09:41:37,496 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:42]
2025-04-02 09:48:07,968 - WafLogger - DEBUG - Testing debug message. [logger_config.py:38]
2025-04-02 09:48:07,969 - WafLogger - INFO - Testing info message. [logger_config.py:39]
2025-04-02 09:48:07,969 - WafLogger - WARNING - Testing warning message. [logger_config.py:40]
2025-04-02 09:48:07,969 - WafLogger - ERROR - Testing error message. [logger_config.py:41]
2025-04-02 09:48:07,970 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:42]
2025-04-02 10:38:25,024 - WafLogger - ERROR - Testing error message. [logger_config.py:52]
2025-04-02 10:38:25,033 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:53]
2025-04-02 10:44:09,672 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:44:09,673 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 10:49:26,401 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:49:26,401 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 10:50:57,022 - WafLogger - DEBUG - Testing debug message. [logger_config.py:48]
2025-04-02 10:50:57,022 - WafLogger - INFO - Testing info message. [logger_config.py:49]
2025-04-02 10:50:57,023 - WafLogger - WARNING - Testing warning message. [logger_config.py:50]
2025-04-02 10:50:57,023 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:50:57,023 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 10:52:04,433 - WafLogger - DEBUG - Testing debug message. [logger_config.py:48]
2025-04-02 10:52:04,434 - WafLogger - INFO - Testing info message. [logger_config.py:49]
2025-04-02 10:52:04,434 - WafLogger - WARNING - Testing warning message. [logger_config.py:50]
2025-04-02 10:52:04,435 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:52:04,435 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 10:52:39,275 - WafLogger - DEBUG - Testing debug message. [logger_config.py:49]
2025-04-02 10:52:39,276 - WafLogger - INFO - Testing info message. [logger_config.py:50]
2025-04-02 10:52:39,277 - WafLogger - WARNING - Testing warning message. [logger_config.py:51]
2025-04-02 10:52:39,277 - WafLogger - ERROR - Testing error message. [logger_config.py:52]
2025-04-02 10:52:39,277 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:53]
2025-04-02 10:53:23,828 - WafLogger - DEBUG - Testing debug message. [logger_config.py:50]
2025-04-02 10:53:23,828 - WafLogger - INFO - Testing info message. [logger_config.py:51]
2025-04-02 10:53:23,829 - WafLogger - WARNING - Testing warning message. [logger_config.py:52]
2025-04-02 10:53:23,829 - WafLogger - ERROR - Testing error message. [logger_config.py:53]
2025-04-02 10:53:23,830 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:54]
2025-04-02 10:54:15,694 - WafLogger - DEBUG - Testing debug message. [logger_config.py:51]
2025-04-02 10:54:15,695 - WafLogger - INFO - Testing info message. [logger_config.py:52]
2025-04-02 10:54:15,695 - WafLogger - WARNING - Testing warning message. [logger_config.py:53]
2025-04-02 10:54:15,695 - WafLogger - ERROR - Testing error message. [logger_config.py:54]
2025-04-02 10:54:15,696 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:55]
2025-04-02 10:54:57,028 - WafLogger - ERROR - Testing error message. [logger_config.py:54]
2025-04-02 10:54:57,029 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:55]
2025-04-02 10:55:21,083 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 10:55:21,084 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 11:06:22,696 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 11:06:22,745 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 11:06:22,772 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 11:06:43,152 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 11:06:43,153 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 11:06:43,528 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:23:51,939 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:23:51,958 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:23:51,960 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:23:51,961 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:23:51,966 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:23:51,967 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:23:51,968 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:23:51,969 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:23:51,970 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:23:51,997 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:23:51,998 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:23:52,065 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:23:52,073 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:23:52,077 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:23:52,078 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:23:52,078 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,078 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:23:52,079 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,079 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:23:52,079 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,080 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:23:52,080 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,081 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:23:52,081 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:23:52,083 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:24:17,065 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:24:17,067 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:24:17,148 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:24:17,149 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:24:17,154 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:24:17,155 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:24:17,156 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:24:17,157 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:24:17,158 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:24:17,188 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:24:17,190 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:24:17,210 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:24:17,211 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:24:17,212 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:24:17,213 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:24:17,214 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,215 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:24:17,216 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,217 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:24:17,218 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,219 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:24:17,219 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,220 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:24:17,220 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,221 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:94]
2025-04-02 12:24:17,222 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:96]
2025-04-02 12:24:17,230 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:30:14,462 - WafLogger - DEBUG - Testing debug message. [logger_config.py:48]
2025-04-02 12:30:14,463 - WafLogger - INFO - Testing info message. [logger_config.py:49]
2025-04-02 12:30:14,463 - WafLogger - WARNING - Testing warning message. [logger_config.py:50]
2025-04-02 12:30:14,464 - WafLogger - ERROR - Testing error message. [logger_config.py:51]
2025-04-02 12:30:14,464 - WafLogger - CRITICAL - Testing critical message. [logger_config.py:52]
2025-04-02 12:31:14,810 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:31:14,812 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:31:14,814 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:31:14,815 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:31:14,820 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:31:14,821 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:31:14,821 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:31:14,822 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:31:14,822 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:31:14,823 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:31:14,824 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:31:14,844 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:31:14,884 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:31:14,899 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:31:14,900 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:31:14,901 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,904 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:31:14,908 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,909 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:31:14,909 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,910 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:31:14,910 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,911 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:31:14,911 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:31:14,926 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:31:34,773 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:31:34,775 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:31:34,778 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:31:34,779 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:31:34,784 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:31:34,785 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:31:34,786 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:31:34,787 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:31:34,787 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:31:34,789 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:31:34,791 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:31:34,809 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:31:34,811 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:31:34,815 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:31:34,816 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:31:34,816 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,817 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:31:34,818 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,818 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:31:34,819 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,822 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:31:34,824 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,825 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:31:34,825 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,826 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:94]
2025-04-02 12:31:34,827 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:96]
2025-04-02 12:31:34,831 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:34:59,897 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:34:59,898 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:34:59,900 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:34:59,901 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:34:59,906 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:34:59,906 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:34:59,907 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:34:59,907 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:34:59,907 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:34:59,908 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:34:59,908 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:34:59,926 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:34:59,927 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:34:59,928 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:34:59,930 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:34:59,931 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,932 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:34:59,934 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,936 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:34:59,937 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,938 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:34:59,938 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,938 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:34:59,939 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:34:59,946 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 12:35:20,493 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 12:35:20,493 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 12:35:20,494 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 12:35:20,495 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:51]
2025-04-02 12:35:20,498 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:56]
2025-04-02 12:35:20,499 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:65]
2025-04-02 12:35:20,499 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:68]
2025-04-02 12:35:20,499 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:71]
2025-04-02 12:35:20,499 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:72]
2025-04-02 12:35:20,500 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:74]
2025-04-02 12:35:20,500 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:77]
2025-04-02 12:35:20,517 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:82]
2025-04-02 12:35:20,518 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:90]
2025-04-02 12:35:20,519 - WafLogger - DEBUG - Looping through the data frame. [runner.py:92]
2025-04-02 12:35:20,520 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:94]
2025-04-02 12:35:20,520 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,520 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:94]
2025-04-02 12:35:20,521 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,521 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:94]
2025-04-02 12:35:20,521 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,522 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:94]
2025-04-02 12:35:20,522 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,523 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:94]
2025-04-02 12:35:20,524 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,525 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:94]
2025-04-02 12:35:20,526 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:96]
2025-04-02 12:35:20,529 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:31:21,589 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 13:31:21,598 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 13:31:21,601 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 13:31:21,601 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 13:31:21,605 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 13:31:21,606 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 13:31:21,606 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 13:31:21,606 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 13:31:21,606 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 13:31:21,607 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 13:31:21,607 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 13:31:21,632 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 13:31:21,637 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 13:31:21,638 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 13:31:21,639 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 13:31:21,639 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,639 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,639 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 13:31:21,640 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 13:31:21,641 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,641 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,641 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 13:31:21,641 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 13:31:21,642 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,642 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,642 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 13:31:21,642 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 13:31:21,643 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 13:31:21,643 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 13:31:21,643 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 13:31:21,643 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 13:31:21,644 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 13:31:21,647 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 13:31:21,648 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 13:31:21,648 - WafLogger - DEBUG - Passing the keword 'tc_id' and input 'TC001' to the keword manager. [runner.py:177]
2025-04-02 13:31:21,649 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 13:31:21,649 - WafLogger - DEBUG - Passing the keword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keword manager. [runner.py:181]
2025-04-02 13:31:21,649 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 13:31:21,649 - WafLogger - DEBUG - Passing the keword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keword manager. [runner.py:185]
2025-04-02 13:31:21,650 - WafLogger - DEBUG - Passing the keword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keword manager. [runner.py:186]
2025-04-02 13:31:21,650 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:31:21,650 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 13:31:25,407 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 13:31:43,775 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 13:31:43,775 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 13:31:43,778 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 13:31:43,778 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 13:31:43,782 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 13:31:43,782 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 13:31:43,783 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 13:31:43,783 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 13:31:43,783 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 13:31:43,784 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 13:31:43,784 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 13:31:43,801 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 13:31:43,802 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 13:31:43,803 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 13:31:43,803 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 13:31:43,803 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,804 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 13:31:43,805 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 13:31:43,805 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,805 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,805 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 13:31:43,806 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 13:31:43,806 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,806 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,806 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,807 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 13:31:43,808 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 13:31:43,808 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 13:31:43,808 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 13:31:43,808 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 13:31:43,811 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 13:31:43,812 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 13:31:43,813 - WafLogger - DEBUG - Passing the keword 'tc_id' and input 'TC001' to the keword manager. [runner.py:177]
2025-04-02 13:31:43,813 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 13:31:43,813 - WafLogger - DEBUG - Passing the keword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keword manager. [runner.py:181]
2025-04-02 13:31:43,813 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 13:31:43,814 - WafLogger - DEBUG - Passing the keword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keword manager. [runner.py:185]
2025-04-02 13:31:43,814 - WafLogger - DEBUG - Passing the keword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keword manager. [runner.py:186]
2025-04-02 13:31:43,814 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:31:43,814 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 13:31:57,174 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 13:32:08,731 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 13:32:57,120 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 13:32:57,120 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 13:32:57,122 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 13:32:57,123 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 13:32:57,126 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 13:32:57,126 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 13:32:57,127 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 13:32:57,140 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 13:32:57,141 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 13:32:57,142 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 13:32:57,143 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 13:32:57,143 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,144 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,144 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 13:32:57,144 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 13:32:57,145 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,145 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,145 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 13:32:57,145 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 13:32:57,146 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,146 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,146 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 13:32:57,147 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 13:32:57,147 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,147 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,148 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 13:32:57,148 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 13:32:57,149 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 13:32:57,150 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 13:32:57,150 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 13:32:57,150 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 13:32:57,151 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 13:32:57,153 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 13:32:57,154 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 13:32:57,155 - WafLogger - DEBUG - Passing the keword 'tc_id' and input 'TC001' to the keword manager. [runner.py:177]
2025-04-02 13:32:57,155 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 13:32:57,155 - WafLogger - DEBUG - Passing the keword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keword manager. [runner.py:181]
2025-04-02 13:32:57,156 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 13:32:57,156 - WafLogger - DEBUG - Passing the keword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keword manager. [runner.py:185]
2025-04-02 13:32:57,157 - WafLogger - DEBUG - Passing the keword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keword manager. [runner.py:186]
2025-04-02 13:32:57,157 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:32:57,157 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 13:33:00,086 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 13:33:17,200 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 13:33:17,200 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 13:33:17,201 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 13:33:17,202 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 13:33:17,206 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 13:33:17,207 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 13:33:17,217 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 13:33:17,219 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 13:33:17,220 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 13:33:17,221 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 13:33:17,222 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,222 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,223 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 13:33:17,223 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 13:33:17,223 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,223 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 13:33:17,224 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 13:33:17,225 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 13:33:17,226 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 13:33:17,227 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 13:33:17,228 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 13:33:17,228 - WafLogger - DEBUG - Passing the keword 'tc_id' and input 'TC001' to the keword manager. [runner.py:177]
2025-04-02 13:33:17,228 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 13:33:17,229 - WafLogger - DEBUG - Passing the keword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keword manager. [runner.py:181]
2025-04-02 13:33:17,229 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 13:33:17,230 - WafLogger - DEBUG - Passing the keword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keword manager. [runner.py:185]
2025-04-02 13:33:17,230 - WafLogger - DEBUG - Passing the keword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keword manager. [runner.py:186]
2025-04-02 13:33:17,230 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 13:33:17,231 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 13:33:30,291 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 13:33:35,483 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:12:30,205 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:12:30,219 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:12:30,222 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:12:30,222 - WafLogger - ERROR - The syntax for running is 'runner.exe start' or to check the version use 'runner.exe --version' [runner.py:599]
2025-04-02 17:13:27,766 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:13:27,767 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:13:27,768 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:13:27,769 - WafLogger - ERROR - The syntax for running is 'runner.exe start' or to check the version use 'runner.exe --version' [runner.py:599]
2025-04-02 17:13:42,105 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:13:42,106 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:13:42,111 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:13:42,111 - WafLogger - ERROR - Only one of 'start', '--version', or '--encrypt-file' can be used at a time. [runner.py:447]
2025-04-02 17:14:15,503 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:14:15,503 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:16:15,083 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:16:15,083 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:16:27,112 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:16:27,113 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:16:27,114 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:16:27,114 - WafLogger - ERROR - '--output-file' can only be used with '--encrypt-file'. [runner.py:451]
2025-04-02 17:17:39,872 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:17:39,872 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:17:39,874 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:17:39,874 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:17:39,878 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:17:39,879 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:17:40,289 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:17:40,292 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:17:40,293 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:17:40,294 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:17:40,294 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:17:40,295 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:17:40,295 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:17:40,295 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,295 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:17:40,296 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,296 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:17:40,296 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,296 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:17:40,297 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,297 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:17:40,297 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,298 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:17:40,298 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:17:40,298 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:17:40,298 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:17:40,299 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:17:40,299 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:17:40,299 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:544]
2025-04-02 17:17:40,313 - WafLogger - DEBUG - Starting the execution recording. [runner.py:550]
2025-04-02 17:17:40,314 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:17:40,315 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:17:40,315 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:17:40,494 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:17:42,479 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:17:42,480 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:17:42,483 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:17:42,483 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:17:42,509 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:17:42,509 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:17:42,510 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:17:42,510 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:17:42,510 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:17:42,539 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:17:42,540 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:17:42,567 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:17:42,573 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:17:42,576 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:17:42,579 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:17:42,579 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,579 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,580 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:17:42,580 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:17:42,580 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,580 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,581 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:17:42,621 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:17:42,622 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,622 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,622 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:17:42,623 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:17:42,623 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,623 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:17:42,624 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:17:42,625 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:17:42,625 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:17:42,626 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:17:42,627 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:17:42,627 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:17:42,627 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:17:42,628 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:17:42,628 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:17:42,628 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:17:42,628 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:186]
2025-04-02 17:17:42,629 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:17:42,629 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:17:42,629 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:17:42,629 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:17:42,630 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:203]
2025-04-02 17:17:47,289 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:17:47,290 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:17:50,824 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:17:50,825 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:17:52,797 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:18:02,435 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:18:05,334 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:18:05,335 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:18:05,338 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:18:05,339 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:18:05,340 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:18:05,340 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:18:05,342 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:18:07,617 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:18:07,618 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:18:07,619 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:18:07,619 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:18:07,702 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:18:07,702 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:18:07,702 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:18:07,703 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:18:07,703 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:18:07,721 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:18:07,722 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:18:07,735 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:18:07,738 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:18:07,738 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:18:07,739 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:18:07,739 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,739 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,739 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:18:07,740 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:18:07,740 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,740 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,740 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:18:07,741 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:18:07,741 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,741 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,742 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:18:07,742 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:18:07,742 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,743 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,743 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:18:07,743 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:18:07,744 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:18:07,744 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,745 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,745 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:18:07,745 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 17:18:07,745 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 17:18:07,746 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 17:18:07,746 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:18:07,747 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:18:07,748 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:18:07,748 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:18:07,749 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:18:07,749 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:18:07,749 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:18:07,750 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:18:07,750 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:18:07,750 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:18:07,750 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:18:07,751 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:18:07,751 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:18:07,751 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:18:21,705 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:18:21,706 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:18:25,853 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:18:25,854 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 17:18:25,854 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 17:18:26,152 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 200, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF76167A545+20677]
	simdutf::get_active_implementation [0x00007FF7615D6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7618CD75A+1807418]
	(No symbol) [0x00007FF7614172AC]
	(No symbol) [0x00007FF76141758B]
	(No symbol) [0x00007FF7614585A7]
	(No symbol) [0x00007FF76143849F]
	(No symbol) [0x00007FF76140D6ED]
	(No symbol) [0x00007FF761455D61]
	(No symbol) [0x00007FF7614381C3]
	(No symbol) [0x00007FF76140CC36]
	(No symbol) [0x00007FF76140C0C4]
	(No symbol) [0x00007FF76140CA63]
	(No symbol) [0x00007FF7614F5BDD]
	(No symbol) [0x00007FF761502042]
	(No symbol) [0x00007FF7614FAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7617542AA+262026]
	simdutf::get_active_implementation [0x00007FF7615E4421+546385]
	simdutf::get_active_implementation [0x00007FF7615DD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7615DD819+518729]
	simdutf::get_active_implementation [0x00007FF7615CF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 34, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 206, in get_element
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 194, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 184, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 17:18:26,234 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:18:26,234 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:18:27,090 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:18:35,318 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:27:42,588 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:27:42,589 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:27:42,590 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:27:42,590 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:27:42,592 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:27:42,592 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:27:42,597 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:27:42,597 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:27:42,598 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:27:42,598 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,600 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:27:42,601 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:27:42,602 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in chrome folder. Launching the execution of test script on chrome browser. [runner.py:544]
2025-04-02 17:27:42,611 - WafLogger - DEBUG - Starting the execution recording. [runner.py:550]
2025-04-02 17:27:42,612 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:27:42,612 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:27:42,612 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:27:42,619 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:27:44,906 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:27:44,906 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:27:44,908 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:27:44,908 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:27:44,912 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:27:44,913 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:27:44,913 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:27:44,914 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:27:44,914 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:27:44,914 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:27:44,915 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:27:44,927 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:27:44,928 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,929 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,930 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:27:44,931 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:27:44,932 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:27:44,933 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:27:44,933 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:27:44,933 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:27:44,934 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:27:44,934 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:27:44,934 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:27:44,934 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Whatisthisstep
WhatisthisstepWhatisthisstep
WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:27:44,935 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe 
flsof lldfoe 
allfsfdfldf
sflsdflfdf' to the keyword manager. [runner.py:186]
2025-04-02 17:27:44,935 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:27:44,935 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:27:44,935 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:27:44,935 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:27:44,936 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'chrome' to the keyword manager. [runner.py:203]
2025-04-02 17:27:47,849 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:27:47,849 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:27:51,359 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:27:51,359 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:27:52,520 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:28:01,229 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:28:03,022 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:28:03,023 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:28:03,023 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:28:03,024 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:28:03,024 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:28:03,024 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,655 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:29:32,655 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:29:32,657 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:29:32,657 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:29:32,658 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:29:32,659 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:29:32,663 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:29:32,663 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:29:32,664 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:29:32,665 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:29:32,665 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:29:32,665 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:29:32,666 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:29:32,666 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,666 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:29:32,666 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,667 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:29:32,667 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,667 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:29:32,667 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,668 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:29:32,668 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,668 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:29:32,668 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:29:32,669 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:29:32,670 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:29:32,670 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:29:32,670 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:29:32,670 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:29:32,677 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:29:32,678 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:29:32,678 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:29:32,678 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:29:32,684 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:29:35,009 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:29:35,010 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:29:35,012 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:29:35,013 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:29:35,017 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:29:35,017 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:29:35,017 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:29:35,017 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:29:35,018 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:29:35,018 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:29:35,018 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:29:35,034 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:29:35,034 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:29:35,035 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:29:35,036 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,037 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:29:35,038 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 17:29:35,039 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:29:35,041 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:29:35,042 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:29:35,042 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:29:35,042 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:29:35,042 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:29:35,043 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:29:35,043 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:29:35,043 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:29:35,043 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:29:49,148 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:29:49,149 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:29:54,441 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:29:54,442 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 17:29:54,442 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 17:29:54,618 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 200, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 34, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 206, in get_element
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 194, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 184, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 17:29:54,623 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:29:54,623 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:29:55,537 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:30:03,909 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:42:08,063 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:42:08,063 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:42:08,065 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:42:08,065 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:42:08,066 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:42:08,066 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:42:08,070 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:42:08,070 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:42:08,071 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:42:08,072 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:42:08,072 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:42:08,072 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:42:08,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:42:08,074 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:42:08,075 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:42:08,076 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:42:08,076 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:42:08,076 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:42:08,086 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:42:08,087 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:42:08,087 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:42:08,087 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:42:08,093 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:42:10,198 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:42:10,201 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:42:10,204 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:42:10,204 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:42:10,209 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:42:10,210 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:42:10,211 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:42:10,211 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:42:10,211 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:42:10,211 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:42:10,212 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:42:10,223 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:42:10,224 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:42:10,225 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:42:10,225 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:42:10,226 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,227 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,228 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:42:10,228 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:42:10,229 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,229 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,229 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:42:10,230 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:42:10,231 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 17:42:10,232 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 17:42:10,233 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:42:10,234 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:42:10,234 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:42:10,234 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:42:10,234 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:42:10,235 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:42:10,235 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:42:10,235 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:42:10,235 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:42:10,236 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:36]
2025-04-02 17:42:10,236 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:42:10,236 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:42:10,236 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:42:10,236 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:42:23,375 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:42:23,375 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:42:28,291 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:42:28,291 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 17:42:28,291 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 17:42:28,483 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 200, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 34, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 206, in get_element
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 194, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 184, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 17:42:28,489 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:42:28,489 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:42:29,314 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:42:37,608 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:44:57,834 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:44:57,834 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:44:57,835 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:44:57,835 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:44:57,837 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:44:57,837 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:44:57,841 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:44:57,841 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:44:57,843 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:44:57,844 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:44:57,844 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:44:57,844 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:44:57,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:44:57,849 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:44:57,857 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:44:57,858 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:44:57,858 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:44:57,858 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:44:57,864 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:45:00,188 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:45:00,189 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:45:00,190 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:45:00,191 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:45:00,195 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:45:00,195 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:45:00,196 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:45:00,196 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:45:00,196 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:45:00,197 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:45:00,197 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:45:00,207 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:45:00,207 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:45:00,208 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:45:00,208 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:45:00,209 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,210 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,211 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:45:00,211 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:45:00,211 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:45:00,212 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 17:45:00,213 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:45:00,215 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:45:00,217 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:45:00,218 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:45:00,218 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:45:00,219 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:45:00,219 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:45:00,220 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:45:00,220 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:45:00,220 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 17:45:00,220 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:45:00,221 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:45:00,221 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:45:00,221 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:45:13,441 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:45:13,442 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:45:18,146 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 17:45:18,146 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 17:45:18,147 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 17:45:18,292 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 200, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 34, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 206, in get_element
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 192, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator +
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 17:45:18,296 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:45:18,297 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:45:19,097 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:45:27,336 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 17:46:17,417 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 17:46:17,417 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 17:46:17,419 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 17:46:17,419 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 17:46:17,421 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 17:46:17,421 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 17:46:17,424 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 17:46:17,425 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 17:46:17,426 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 17:46:17,426 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 17:46:17,427 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 17:46:17,427 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 17:46:17,428 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,429 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 17:46:17,429 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,429 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 17:46:17,430 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript - Copy.xlsx. [runner.py:532]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,431 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 17:46:17,432 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 17:46:17,439 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 17:46:17,440 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 17:46:17,440 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 17:46:17,440 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 17:46:17,446 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 17:46:19,781 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 17:46:19,782 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 17:46:19,784 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 17:46:19,784 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 17:46:19,790 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 17:46:19,790 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 17:46:19,792 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 17:46:19,792 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 17:46:19,793 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 17:46:19,793 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 17:46:19,793 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 17:46:19,805 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 17:46:19,805 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 17:46:19,806 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 17:46:19,806 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 17:46:19,807 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,807 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,807 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 17:46:19,807 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 17:46:19,808 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,808 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,808 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 17:46:19,808 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,809 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 17:46:19,810 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 17:46:19,811 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 17:46:19,812 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 17:46:19,812 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 17:46:19,812 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 17:46:19,813 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 17:46:19,814 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 17:46:19,814 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 17:46:19,814 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 17:46:19,815 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 17:46:19,815 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 17:46:32,904 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 17:46:32,904 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 17:46:38,066 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 17:46:38,066 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 17:46:38,952 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 17:46:47,093 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 18:12:41,933 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 18:12:41,933 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 18:12:41,935 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 18:12:41,935 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 18:12:41,936 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 18:12:41,937 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 18:12:41,940 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 18:12:41,941 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 18:12:41,941 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 18:12:41,943 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 18:12:41,943 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 18:12:41,943 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 18:12:41,943 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,944 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:12:41,945 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 18:12:41,946 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 18:12:41,947 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 18:12:41,955 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 18:12:41,956 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 18:12:41,956 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 18:12:41,956 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 18:12:41,961 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 18:12:44,210 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 18:12:44,210 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 18:12:44,212 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 18:12:44,212 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 18:12:44,217 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 18:12:44,217 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 18:12:44,218 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 18:12:44,218 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 18:12:44,218 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 18:12:44,303 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 18:12:44,304 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 18:12:44,320 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 18:12:44,321 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 18:12:44,322 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 18:12:44,323 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 18:12:44,323 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,323 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,324 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 18:12:44,325 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 18:12:44,325 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,325 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,325 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 18:12:44,327 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 18:12:44,327 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,328 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,328 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 18:12:44,328 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 18:12:44,329 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 18:12:44,329 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,329 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,329 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 18:12:44,330 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 18:12:44,330 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 18:12:44,330 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 18:12:44,330 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 18:12:44,331 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 18:12:44,332 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 18:12:44,332 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 18:12:44,332 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 18:12:44,332 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 18:12:44,333 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 18:12:44,333 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 18:12:44,334 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 18:12:57,386 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:28]
2025-04-02 18:12:57,519 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 18:12:57,519 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 18:12:57,519 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:32]
2025-04-02 18:13:01,480 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 18:13:01,481 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 18:13:01,481 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 18:13:01,507 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:190]
2025-04-02 18:13:01,508 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:42]
2025-04-02 18:13:01,714 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 187, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 38, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 191, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 192, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 43, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:13:01,721 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 18:13:01,722 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 18:13:02,699 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 18:13:04,278 - WafLogger - DEBUG - Closing Browser [driver_functions.py:24]
2025-04-02 18:13:11,075 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 18:14:44,694 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 18:14:44,694 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 18:14:44,695 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 18:14:44,696 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 18:14:44,698 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 18:14:44,698 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 18:14:44,702 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 18:14:44,702 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 18:14:44,703 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 18:14:44,703 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 18:14:44,704 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 18:14:44,704 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 18:14:44,705 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:14:44,706 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 18:14:44,707 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 18:14:44,708 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 18:14:44,740 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 18:14:44,740 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 18:14:44,749 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 18:14:44,750 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 18:14:44,750 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 18:14:44,750 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 18:14:44,756 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 18:14:47,037 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 18:14:47,037 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 18:14:47,039 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 18:14:47,040 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 18:14:47,044 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 18:14:47,044 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 18:14:47,044 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 18:14:47,045 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 18:14:47,045 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 18:14:47,045 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 18:14:47,045 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 18:14:47,056 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 18:14:47,058 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 18:14:47,058 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 18:14:47,059 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 18:14:47,059 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,059 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,060 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 18:14:47,060 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 18:14:47,060 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,060 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,061 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 18:14:47,061 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 18:14:47,062 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,062 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,062 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 18:14:47,063 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 18:14:47,064 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,064 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,064 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 18:14:47,064 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 18:14:47,065 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 18:14:47,066 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 18:14:47,066 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 18:14:47,067 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 18:14:47,068 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 18:14:47,068 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 18:14:47,069 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 18:14:47,069 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 18:14:47,070 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 18:14:47,070 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 18:14:47,070 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 18:14:47,071 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 18:14:47,071 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 18:14:47,071 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 18:14:47,071 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 18:14:47,071 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 18:14:59,974 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 18:15:00,159 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 18:15:00,159 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 18:15:00,160 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 18:15:05,706 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 18:15:05,706 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 18:15:05,706 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 18:15:05,723 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 18:15:05,723 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 18:15:05,884 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 192, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:15:05,892 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 18:15:05,892 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 18:15:06,720 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 18:15:08,205 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 18:15:15,050 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 18:17:43,252 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 18:17:43,252 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 18:17:43,254 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 18:17:43,255 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 18:17:43,256 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 18:17:43,256 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 18:17:43,260 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 18:17:43,260 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 18:17:43,261 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 18:17:43,262 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 18:17:43,262 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 18:17:43,262 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 18:17:43,263 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:17:43,263 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,263 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 18:17:43,263 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,264 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 18:17:43,264 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,264 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 18:17:43,264 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,265 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 18:17:43,265 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,265 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:17:43,266 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,266 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 18:17:43,267 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 18:17:43,268 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 18:17:43,274 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 18:17:43,275 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 18:17:43,276 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 18:17:43,276 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 18:17:43,280 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 18:17:45,517 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 18:17:45,518 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 18:17:45,520 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 18:17:45,521 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 18:17:45,525 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 18:17:45,525 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 18:17:45,525 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 18:17:45,526 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 18:17:45,526 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 18:17:45,526 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 18:17:45,527 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 18:17:45,539 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 18:17:45,539 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 18:17:45,540 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 18:17:45,541 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 18:17:45,541 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,541 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,542 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 18:17:45,542 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 18:17:45,543 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,543 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,543 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 18:17:45,543 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 18:17:45,544 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,544 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,544 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 18:17:45,545 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 18:17:45,545 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,545 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,546 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 18:17:45,546 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 18:17:45,546 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 18:17:45,547 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,547 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,548 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 18:17:45,549 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 18:17:45,549 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 18:17:45,549 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 18:17:45,550 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 18:17:45,551 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 18:17:45,551 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 18:17:45,552 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 18:17:45,552 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 18:17:45,553 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 18:17:45,553 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 18:17:45,553 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 18:17:45,554 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 18:17:45,554 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 18:17:45,555 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 18:17:45,556 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 18:17:45,556 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 18:17:45,556 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 18:17:58,527 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 18:17:58,684 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 18:17:58,684 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 18:17:58,685 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 18:18:03,379 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 18:18:03,380 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 18:18:03,380 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 18:18:03,403 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 18:18:03,403 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 18:18:03,536 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF7EF6DA545+20677]
	simdutf::get_active_implementation [0x00007FF7EF636CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF92D75A+1807418]
	(No symbol) [0x00007FF7EF4772AC]
	(No symbol) [0x00007FF7EF47758B]
	(No symbol) [0x00007FF7EF4B85A7]
	(No symbol) [0x00007FF7EF49849F]
	(No symbol) [0x00007FF7EF46D6ED]
	(No symbol) [0x00007FF7EF4B5D61]
	(No symbol) [0x00007FF7EF4981C3]
	(No symbol) [0x00007FF7EF46CC36]
	(No symbol) [0x00007FF7EF46C0C4]
	(No symbol) [0x00007FF7EF46CA63]
	(No symbol) [0x00007FF7EF555BDD]
	(No symbol) [0x00007FF7EF562042]
	(No symbol) [0x00007FF7EF55AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF7EF7B42AA+262026]
	simdutf::get_active_implementation [0x00007FF7EF644421+546385]
	simdutf::get_active_implementation [0x00007FF7EF63D6D4+518404]
	simdutf::get_active_implementation [0x00007FF7EF63D819+518729]
	simdutf::get_active_implementation [0x00007FF7EF62F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 192, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:18:03,542 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 18:18:03,543 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 18:18:04,389 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 18:18:06,002 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 18:18:12,750 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 18:47:35,964 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 18:47:36,012 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 18:47:36,014 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 18:47:36,015 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 18:47:36,019 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 18:47:36,020 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 18:47:36,025 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 18:47:36,026 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 18:47:36,029 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 18:47:36,029 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 18:47:36,030 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 18:47:36,031 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 18:47:36,032 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:47:36,032 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,033 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 18:47:36,033 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,035 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 18:47:36,035 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,036 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 18:47:36,036 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,037 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 18:47:36,038 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 18:47:36,039 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 18:47:36,039 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 18:47:36,039 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 18:47:36,039 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 18:47:36,056 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 18:47:36,058 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 18:47:36,059 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 18:47:36,059 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 18:47:36,123 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 18:47:38,454 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 18:47:38,455 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 18:47:38,457 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 18:47:38,457 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 18:47:38,461 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 18:47:38,461 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 18:47:38,462 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 18:47:38,462 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 18:47:38,462 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 18:47:38,463 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 18:47:38,463 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 18:47:38,492 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 18:47:38,501 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 18:47:38,504 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 18:47:38,505 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 18:47:38,506 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,507 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,508 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 18:47:38,509 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 18:47:38,509 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 18:47:38,509 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 18:47:38,509 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 18:47:38,511 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 18:47:38,512 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 18:47:38,513 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 18:47:38,513 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 18:47:38,514 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 18:47:38,514 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 18:47:38,514 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 18:47:38,515 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 18:47:38,515 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 18:47:38,515 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 18:47:38,515 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 18:47:38,515 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 18:47:38,516 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 18:47:51,964 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 18:47:51,965 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 18:47:51,966 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 18:47:51,966 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 18:47:51,966 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 18:47:52,146 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 18:47:52,147 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 18:47:52,147 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 18:47:56,613 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 18:47:56,613 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 18:47:56,613 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 18:47:56,652 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 18:47:56,653 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 18:47:56,653 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:188]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6E05FA545+20677]
	simdutf::get_active_implementation [0x00007FF6E0556CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6E084D75A+1807418]
	(No symbol) [0x00007FF6E03972AC]
	(No symbol) [0x00007FF6E039758B]
	(No symbol) [0x00007FF6E03D85A7]
	(No symbol) [0x00007FF6E03B849F]
	(No symbol) [0x00007FF6E038D6ED]
	(No symbol) [0x00007FF6E03D5D61]
	(No symbol) [0x00007FF6E03B81C3]
	(No symbol) [0x00007FF6E038CC36]
	(No symbol) [0x00007FF6E038C0C4]
	(No symbol) [0x00007FF6E038CA63]
	(No symbol) [0x00007FF6E0475BDD]
	(No symbol) [0x00007FF6E0482042]
	(No symbol) [0x00007FF6E047AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6E06D42AA+262026]
	simdutf::get_active_implementation [0x00007FF6E0564421+546385]
	simdutf::get_active_implementation [0x00007FF6E055D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6E055D819+518729]
	simdutf::get_active_implementation [0x00007FF6E054F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:47:56,683 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:189]
2025-04-02 18:47:56,835 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6E05FA545+20677]
	simdutf::get_active_implementation [0x00007FF6E0556CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6E084D75A+1807418]
	(No symbol) [0x00007FF6E03972AC]
	(No symbol) [0x00007FF6E039758B]
	(No symbol) [0x00007FF6E03D85A7]
	(No symbol) [0x00007FF6E03B849F]
	(No symbol) [0x00007FF6E038D6ED]
	(No symbol) [0x00007FF6E03D5D61]
	(No symbol) [0x00007FF6E03B81C3]
	(No symbol) [0x00007FF6E038CC36]
	(No symbol) [0x00007FF6E038C0C4]
	(No symbol) [0x00007FF6E038CA63]
	(No symbol) [0x00007FF6E0475BDD]
	(No symbol) [0x00007FF6E0482042]
	(No symbol) [0x00007FF6E047AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6E06D42AA+262026]
	simdutf::get_active_implementation [0x00007FF6E0564421+546385]
	simdutf::get_active_implementation [0x00007FF6E055D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6E055D819+518729]
	simdutf::get_active_implementation [0x00007FF6E054F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 191, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 182, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 18:47:56,838 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 18:47:56,838 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 18:47:57,842 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 18:47:57,842 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 18:48:00,488 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 18:48:07,313 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:18:47,755 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:18:47,828 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:18:47,830 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:18:47,830 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:18:47,835 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:18:47,836 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:18:47,839 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:18:47,840 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:18:47,842 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:18:47,843 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:18:47,843 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:18:47,844 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:18:47,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,845 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:18:47,845 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,846 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:18:47,846 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:18:47,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:18:47,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:18:47,849 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:18:47,849 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:18:47,850 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:18:47,850 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:18:47,850 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:18:47,865 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:18:47,866 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:18:47,869 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:18:47,869 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:18:47,932 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:18:50,290 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:18:50,290 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:18:50,293 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:18:50,293 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:18:50,298 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:18:50,298 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:18:50,298 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:18:50,299 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:18:50,299 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:18:50,299 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:18:50,299 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:18:50,327 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:18:50,333 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:18:50,335 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:18:50,336 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:18:50,336 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,336 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,336 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:18:50,337 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:18:50,338 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,339 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,339 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:18:50,339 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:18:50,340 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:18:50,341 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:18:50,343 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:18:50,343 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:18:50,344 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:18:50,345 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:18:50,345 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:18:50,345 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:18:50,345 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:18:50,345 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:18:50,346 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:18:50,346 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:18:50,346 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:18:50,347 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:18:50,347 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:19:03,479 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:19:03,479 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:19:03,479 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:19:03,481 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:19:03,481 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:19:03,481 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:19:03,643 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:19:03,643 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:19:03,643 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:19:03,644 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:19:09,449 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:19:09,582 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:19:09,582 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:19:09,583 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:19:09,605 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:19:09,606 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:19:09,606 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:19:09,612 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:19:09,746 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:19:09,749 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:19:09,749 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:19:10,633 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:19:10,633 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:19:12,890 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:19:20,158 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:22:40,262 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:22:40,263 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:22:40,264 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:22:40,264 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:22:40,268 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:22:40,268 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:22:40,272 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:22:40,272 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:22:40,274 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:22:40,275 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:22:40,275 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:22:40,275 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:22:40,277 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,277 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:22:40,277 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,278 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:22:40,278 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,278 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:22:40,278 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,279 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:22:40,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,279 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:22:40,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,280 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:22:40,280 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:22:40,280 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:22:40,280 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:22:40,281 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:22:40,281 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:22:40,281 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:22:40,290 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:22:40,291 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:22:40,291 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:22:40,291 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:22:40,300 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:22:42,664 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:22:42,665 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:22:42,667 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:22:42,668 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:22:42,672 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:22:42,672 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:22:42,673 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:22:42,673 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:22:42,674 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:22:42,674 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:22:42,674 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:22:42,688 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:22:42,689 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:22:42,690 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:22:42,690 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:22:42,691 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,691 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,692 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:22:42,692 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:22:42,693 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,693 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,693 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:22:42,694 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:22:42,694 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,696 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,696 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:22:42,696 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:22:42,697 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,698 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,698 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:22:42,699 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:22:42,699 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:22:42,699 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:22:42,699 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:22:42,701 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:22:42,702 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:22:42,702 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:22:42,703 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:22:42,703 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:22:42,703 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:22:42,703 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:22:42,704 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:22:42,704 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:22:42,704 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:22:42,704 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:22:42,704 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:22:42,705 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:22:55,741 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:22:55,741 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:22:55,741 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:22:55,742 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:22:55,742 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:22:55,742 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:22:55,913 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:22:55,913 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:22:55,914 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:22:55,914 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:23:01,636 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:23:01,796 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:23:01,797 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:23:01,798 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:23:01,819 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:23:01,820 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:23:01,820 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
2025-04-02 19:23:01,820 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:23:01,963 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:23:01,971 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:23:01,971 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:23:02,836 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:23:02,837 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:23:04,307 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:23:11,174 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:37:58,203 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:37:58,242 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:37:58,245 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:37:58,247 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:37:58,250 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:37:58,252 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:37:58,256 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:37:58,258 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:37:58,260 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:37:58,261 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:37:58,262 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:37:58,263 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:37:58,263 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:37:58,264 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,265 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:37:58,265 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,266 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:37:58,266 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,267 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:37:58,268 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,268 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:37:58,269 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,269 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:37:58,270 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,271 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:37:58,271 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,272 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:37:58,272 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,274 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:37:58,275 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:37:58,276 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:37:58,277 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:37:58,278 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:37:58,279 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:37:58,279 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:37:58,286 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:37:58,287 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:37:58,289 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:37:58,290 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:37:58,296 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:38:00,540 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:38:00,548 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:38:00,551 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:38:00,552 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:38:00,556 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:38:00,557 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:38:00,558 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:38:00,560 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:38:00,560 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:38:00,561 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:38:00,562 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:38:00,576 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:38:00,579 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:38:00,580 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:38:00,582 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:38:00,583 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,584 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,585 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:38:00,586 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:38:00,587 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,588 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,589 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:38:00,590 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:38:00,592 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,593 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,594 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:38:00,595 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:38:00,596 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,597 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,598 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:38:00,599 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:38:00,600 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:38:00,601 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,601 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,602 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:38:00,603 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:38:00,604 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:38:00,605 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:38:00,606 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:38:00,610 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:38:00,612 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:38:00,613 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:38:00,614 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:38:00,615 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:38:00,616 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:38:00,616 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:38:00,638 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:38:00,640 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:38:00,642 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:38:00,644 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:38:00,645 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:38:00,663 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:38:00,666 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:38:00,669 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:38:00,672 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:38:00,674 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:38:13,848 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:38:13,851 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:38:13,854 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:38:13,857 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:38:13,859 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:38:13,862 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:38:14,076 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:38:14,079 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:38:14,082 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:38:14,088 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:38:19,504 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:38:19,691 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:38:19,693 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:38:19,694 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:38:19,722 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:38:19,729 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:38:19,733 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:38:19,738 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:38:19,982 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:38:19,988 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:38:19,989 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:38:21,008 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:38:21,010 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:38:22,800 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:38:29,560 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:39:24,556 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:39:24,556 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:39:24,556 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:39:24,558 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:39:24,559 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:39:24,559 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:39:24,563 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:39:24,563 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:39:24,565 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:39:24,565 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:39:24,566 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,567 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,568 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:39:24,569 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:39:24,570 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:39:24,577 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:39:24,578 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:39:24,578 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:39:24,578 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:39:24,583 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:39:26,845 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:39:26,846 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:39:26,848 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:39:26,849 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:39:26,854 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:39:26,854 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:39:26,855 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:39:26,866 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:39:26,868 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:39:26,869 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:39:26,870 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:39:26,870 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,870 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,870 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:39:26,871 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:39:26,871 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,871 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,871 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:39:26,872 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:39:26,872 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,872 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,872 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:39:26,874 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:39:26,875 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,875 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,875 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:39:26,875 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:39:26,876 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:39:26,877 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:39:26,877 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:39:26,877 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:39:26,879 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:39:26,879 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:39:26,879 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:39:26,880 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:39:26,880 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:39:26,880 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:39:26,880 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:39:26,881 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:39:26,881 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:39:26,881 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:39:26,881 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:39:26,882 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:39:26,882 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:39:26,882 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:39:26,882 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:39:26,883 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:39:26,883 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:39:39,762 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:39:39,762 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:39:39,763 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:39:39,763 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:39:39,763 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:39:39,763 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:39:39,904 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:39:39,904 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:39:39,905 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:39:39,905 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:39:46,855 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:39:47,002 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:39:47,003 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:39:47,003 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:39:47,040 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:39:47,040 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:39:47,040 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:39:47,046 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:39:47,189 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:39:47,195 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:39:47,195 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:39:48,036 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:39:48,036 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:39:49,470 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:39:56,248 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:45:46,384 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:45:46,384 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:45:46,386 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:45:46,387 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:45:46,389 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:45:46,389 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:45:46,392 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:45:46,393 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:45:46,394 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:45:46,395 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:45:46,395 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:45:46,395 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:45:46,396 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:45:46,396 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,396 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:45:46,396 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,397 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:45:46,397 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,397 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:45:46,397 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,398 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:45:46,398 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,398 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:45:46,398 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,399 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:45:46,400 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:45:46,400 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:45:46,400 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:45:46,400 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:45:46,401 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:45:46,401 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:45:46,410 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:45:46,411 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:45:46,411 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:45:46,411 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:45:46,416 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:45:48,734 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:45:48,735 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:45:48,737 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:45:48,737 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:45:48,742 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:45:48,743 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:45:48,744 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:45:48,745 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:45:48,745 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:45:48,745 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:45:48,745 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:45:48,757 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:45:48,758 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:45:48,759 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:45:48,759 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:45:48,759 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:45:48,760 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:45:48,761 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,762 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,762 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:45:48,762 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:45:48,762 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:45:48,763 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:45:48,765 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:45:48,765 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:45:48,766 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:45:48,766 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:45:48,767 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:45:48,767 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:45:48,767 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:45:48,768 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:45:48,768 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:45:48,768 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:45:48,768 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:45:48,769 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:45:48,769 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:45:48,769 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:45:48,769 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:45:48,769 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:45:48,770 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:46:01,733 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:46:01,733 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:46:01,733 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:46:01,733 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:46:01,734 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:46:01,734 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:46:01,868 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:46:01,868 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:46:01,869 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:46:01,869 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:46:06,202 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:46:06,343 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:46:06,343 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:46:06,344 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:46:06,365 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:46:06,365 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:46:06,366 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
2025-04-02 19:46:06,366 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:46:06,495 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:46:06,501 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:46:06,501 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:46:07,340 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:46:07,340 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:46:08,784 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:46:15,605 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:50:41,406 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:50:41,406 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:50:41,408 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:50:41,408 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:50:41,410 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:50:41,410 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:50:41,415 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:50:41,415 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:50:41,416 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:50:41,417 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:50:41,418 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:50:41,419 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:50:41,420 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:50:41,420 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:50:41,420 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:50:41,420 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:50:41,427 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:50:41,428 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:50:41,429 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:50:41,429 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:50:41,434 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:50:43,854 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:50:43,855 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:50:43,858 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:50:43,859 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:50:43,863 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:50:43,864 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:50:43,864 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:50:43,864 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:50:43,865 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:50:43,865 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:50:43,865 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:50:43,874 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:50:43,875 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:50:43,876 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:50:43,877 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:50:43,878 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,878 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,878 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:50:43,879 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:50:43,879 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,879 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,879 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:50:43,880 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:50:43,880 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,880 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,881 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:50:43,881 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:50:43,881 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,882 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,882 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:50:43,883 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:50:43,883 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:50:43,885 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,885 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,886 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:50:43,888 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:50:43,888 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:50:43,888 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:50:43,888 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:50:43,890 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:50:43,891 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:50:43,892 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:50:43,892 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:50:43,892 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:50:43,892 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:50:43,893 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:50:43,893 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:50:43,894 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:50:43,894 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:50:43,894 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:50:43,895 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:50:43,895 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:50:57,085 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:50:57,086 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:50:57,087 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:50:57,087 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:50:57,088 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:50:57,089 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:50:57,225 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:50:57,226 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:50:57,226 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:50:57,226 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:51:01,868 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:51:02,020 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:51:02,021 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:51:02,022 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:51:02,043 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:51:02,044 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:51:02,045 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:51:02,056 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:51:02,221 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:51:02,228 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:51:02,228 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:51:03,109 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:51:03,109 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:51:04,718 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:51:11,481 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:53:07,838 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:53:07,838 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:53:07,839 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:53:07,840 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:53:07,841 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:53:07,841 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:53:07,845 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:53:07,845 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:53:07,846 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:53:07,846 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:53:07,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:53:07,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:53:07,850 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:53:07,850 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:53:07,850 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:53:07,850 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:53:07,851 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:53:07,851 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:53:07,857 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:53:07,858 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:53:07,858 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:53:07,858 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:53:07,863 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:53:10,198 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:53:10,200 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:53:10,202 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:53:10,203 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:53:10,208 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:53:10,208 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:53:10,210 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:53:10,210 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:53:10,210 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:53:10,211 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:53:10,211 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:53:10,226 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:53:10,227 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:53:10,228 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:53:10,229 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:53:10,230 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,230 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,230 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:53:10,230 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:53:10,231 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,232 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,232 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:53:10,232 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:53:10,232 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:53:10,233 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,233 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,233 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:53:10,234 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:53:10,234 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:53:10,235 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:53:10,235 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:53:10,238 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:53:10,239 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:53:10,239 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:53:10,239 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:53:10,240 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:53:10,240 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:53:10,240 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:53:10,240 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:53:10,241 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:53:10,241 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:53:10,241 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:53:10,241 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:53:10,241 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:53:10,242 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:53:10,242 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:53:10,242 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:53:10,244 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:53:23,259 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:53:23,260 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:53:23,260 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:53:23,261 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:53:23,261 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:53:23,262 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:53:23,415 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:53:23,416 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:53:23,416 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:53:23,417 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:53:28,991 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:53:29,109 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:53:29,109 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:53:29,110 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:53:29,130 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:53:29,130 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:53:29,131 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:53:29,137 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:53:29,290 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:53:29,316 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:53:29,317 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:53:30,170 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:53:30,170 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:53:31,723 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:53:38,601 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 19:56:26,264 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 19:56:26,264 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 19:56:26,266 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 19:56:26,266 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 19:56:26,268 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 19:56:26,268 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 19:56:26,272 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 19:56:26,273 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 19:56:26,274 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 19:56:26,274 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 19:56:26,274 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 19:56:26,275 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 19:56:26,275 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:56:26,275 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 19:56:26,276 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,276 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 19:56:26,276 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,277 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 19:56:26,277 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,277 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 19:56:26,278 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,278 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 19:56:26,278 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,278 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 19:56:26,279 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 19:56:26,280 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 19:56:26,280 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 19:56:26,281 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 19:56:26,281 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 19:56:26,281 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 19:56:26,288 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 19:56:26,289 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 19:56:26,289 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 19:56:26,290 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 19:56:26,295 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 19:56:28,722 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 19:56:28,723 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 19:56:28,724 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 19:56:28,725 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 19:56:28,729 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 19:56:28,730 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 19:56:28,731 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 19:56:28,731 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 19:56:28,732 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 19:56:28,732 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 19:56:28,732 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 19:56:28,743 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 19:56:28,744 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 19:56:28,745 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 19:56:28,746 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 19:56:28,746 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,747 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,747 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 19:56:28,747 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 19:56:28,748 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,748 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,748 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 19:56:28,749 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 19:56:28,750 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,750 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,750 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 19:56:28,750 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 19:56:28,751 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 19:56:28,751 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,751 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,751 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 19:56:28,752 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 19:56:28,752 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 19:56:28,752 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 19:56:28,752 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 19:56:28,753 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 19:56:28,754 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 19:56:28,754 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 19:56:28,754 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 19:56:28,754 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 19:56:28,755 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 19:56:28,755 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 19:56:28,756 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 19:56:42,052 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 19:56:42,052 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 19:56:42,053 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 19:56:42,053 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 19:56:42,054 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 19:56:42,055 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 19:56:42,232 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 19:56:42,232 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 19:56:42,232 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 19:56:42,233 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 19:56:47,267 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 19:56:47,475 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 19:56:47,476 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 19:56:47,476 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 19:56:47,495 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 19:56:47,495 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 19:56:47,496 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:56:47,655 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 19:56:47,812 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF60A43A545+20677]
	simdutf::get_active_implementation [0x00007FF60A396CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A68D75A+1807418]
	(No symbol) [0x00007FF60A1D72AC]
	(No symbol) [0x00007FF60A1D758B]
	(No symbol) [0x00007FF60A2185A7]
	(No symbol) [0x00007FF60A1F849F]
	(No symbol) [0x00007FF60A1CD6ED]
	(No symbol) [0x00007FF60A215D61]
	(No symbol) [0x00007FF60A1F81C3]
	(No symbol) [0x00007FF60A1CCC36]
	(No symbol) [0x00007FF60A1CC0C4]
	(No symbol) [0x00007FF60A1CCA63]
	(No symbol) [0x00007FF60A2B5BDD]
	(No symbol) [0x00007FF60A2C2042]
	(No symbol) [0x00007FF60A2BAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF60A5142AA+262026]
	simdutf::get_active_implementation [0x00007FF60A3A4421+546385]
	simdutf::get_active_implementation [0x00007FF60A39D6D4+518404]
	simdutf::get_active_implementation [0x00007FF60A39D819+518729]
	simdutf::get_active_implementation [0x00007FF60A38F3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 42, in scroll_into_view
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 19:56:47,818 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 19:56:47,819 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 19:56:48,760 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 19:56:48,761 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 19:56:50,284 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 19:56:57,099 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:40:09,080 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:40:09,096 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:40:09,098 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:40:09,098 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:40:09,100 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:40:09,100 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:40:09,112 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:40:09,113 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:40:09,114 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:40:09,116 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:40:09,116 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:40:09,116 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:40:09,117 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:40:09,117 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,118 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:40:09,118 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,118 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:40:09,119 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,119 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:40:09,119 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,119 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,120 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:40:09,121 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:40:09,122 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:40:09,122 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:40:09,122 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:40:09,135 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:40:09,136 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:40:09,137 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:40:09,138 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:40:09,199 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:40:11,580 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:40:11,581 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:40:11,584 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:40:11,584 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:40:11,589 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:40:11,590 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:40:11,591 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:40:11,591 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:40:11,592 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:40:11,592 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:40:11,592 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:40:11,746 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:40:11,770 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:40:11,781 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:40:11,783 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:40:11,783 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,783 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,784 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:40:11,785 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:40:11,785 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,785 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,786 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:40:11,786 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:40:11,787 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,787 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,787 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:40:11,788 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:40:11,789 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,789 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,789 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:40:11,789 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:40:11,790 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:40:11,790 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,790 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,790 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:40:11,791 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:40:11,791 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:40:11,791 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:40:11,791 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:40:11,795 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:40:11,797 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:40:11,798 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:40:11,799 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:40:11,799 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:40:11,799 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:40:11,800 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:40:11,800 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:40:11,800 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:40:11,800 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:40:11,801 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:40:11,801 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:40:11,801 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:40:11,802 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:40:11,802 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:40:11,802 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:40:11,803 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:40:25,209 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:40:25,294 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:40:25,294 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:40:25,295 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:40:25,295 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:40:25,295 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:40:25,444 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:40:25,445 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:40:25,446 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:40:25,446 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:40:29,878 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:40:30,032 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:40:30,032 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:40:30,033 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:40:30,057 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:40:30,058 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:40:30,058 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 20:40:30,219 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:40:30,373 - WafLogger - ERROR - An error occurred: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 190, in get_element
    raise Exception("cannot send data on the element with locator: " + locator + " locator_type: " + locator_type)
Exception: cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath
2025-04-02 20:40:30,379 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:40:30,380 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:40:31,269 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:40:31,270 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:40:33,439 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:40:40,444 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:42:00,744 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:42:00,745 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:42:00,746 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:42:00,746 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:42:00,749 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:42:00,749 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:42:00,753 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:42:00,753 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:42:00,757 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:42:00,758 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:42:00,758 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:42:00,759 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:42:00,759 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:42:00,759 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,759 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:42:00,760 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,760 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:42:00,760 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,760 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:42:00,761 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,761 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:42:00,761 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,761 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:42:00,762 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,763 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:42:00,763 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:42:00,763 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:42:00,763 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:42:00,764 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:42:00,764 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:42:00,764 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:42:00,774 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:42:00,775 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:42:00,775 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:42:00,775 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:42:00,783 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:42:03,156 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:42:03,156 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:42:03,158 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:42:03,158 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:42:03,162 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:42:03,162 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:42:03,163 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:42:03,163 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:42:03,163 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:42:03,164 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:42:03,164 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:42:03,175 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:42:03,175 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:42:03,176 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:42:03,177 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:42:03,178 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,179 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:42:03,180 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:42:03,180 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,180 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,181 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:42:03,181 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:42:03,181 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,182 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,182 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:42:03,182 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:42:03,182 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:42:03,183 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,183 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,183 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:42:03,183 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:42:03,184 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:42:03,184 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:42:03,184 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:42:03,186 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:42:03,186 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:42:03,186 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:42:03,186 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:42:03,187 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:42:03,187 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:42:03,187 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:42:03,188 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:42:03,188 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:42:03,188 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:42:03,188 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:42:03,189 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:42:03,189 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:42:03,189 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:42:03,189 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:42:03,190 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:42:03,190 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:42:16,152 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:42:16,153 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:42:16,153 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:42:16,153 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:42:16,154 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:42:16,154 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:42:16,317 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:42:16,318 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:42:16,318 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:42:16,319 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:42:21,985 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:42:22,151 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:42:22,151 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:42:22,152 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:42:22,172 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:42:22,172 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:42:22,172 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:42:22,257 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:42:22,407 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:42:22,410 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:42:22,410 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:42:23,446 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:42:23,446 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:42:25,087 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:42:31,936 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:45:06,195 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:45:06,195 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:45:06,196 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:45:06,197 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:45:06,199 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:45:06,199 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:45:06,202 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:45:06,203 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:45:06,205 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:45:06,206 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:45:06,206 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:45:06,207 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:45:06,207 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:45:06,207 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,207 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:45:06,208 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,210 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:45:06,211 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,211 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:45:06,211 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:45:06,211 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:45:06,212 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:45:06,212 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:45:06,212 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:45:06,212 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:45:06,221 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:45:06,223 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:45:06,223 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:45:06,223 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:45:06,228 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:45:08,677 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:45:08,678 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:45:08,680 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:45:08,682 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:45:08,686 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:45:08,687 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:45:08,687 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:45:08,688 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:45:08,688 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:45:08,688 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:45:08,688 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:45:08,700 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:45:08,702 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:45:08,704 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:45:08,705 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:45:08,705 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,705 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,705 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:45:08,706 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,707 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:45:08,708 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:45:08,708 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:45:08,708 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,708 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:45:08,709 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:45:08,711 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:45:08,712 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:45:08,712 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:45:08,712 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:45:08,713 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:45:08,714 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:45:08,714 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:45:08,714 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:45:08,714 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:45:08,714 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:45:08,715 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:45:08,715 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:45:08,715 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:45:22,133 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:45:22,134 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:45:22,134 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:45:22,135 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:45:22,135 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:45:22,135 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:45:22,283 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:45:22,284 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:45:22,285 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:45:22,285 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:45:27,535 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:45:27,667 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:45:27,668 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:45:27,668 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:45:27,694 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:45:27,695 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:45:27,695 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:45:27,705 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:45:27,852 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 213, in ge_click
    raise e
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:45:27,856 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:45:27,856 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:45:28,894 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:45:28,894 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:45:30,737 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:45:37,608 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:47:05,671 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:47:05,672 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:47:05,673 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:47:05,674 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:47:05,675 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:47:05,675 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:47:05,678 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:47:05,679 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:47:05,680 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:47:05,680 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:47:05,680 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:47:05,680 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,681 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,682 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:47:05,683 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:47:05,684 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:47:05,684 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:47:05,684 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:47:05,692 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:47:05,693 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:47:05,693 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:47:05,693 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:47:05,698 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:47:09,416 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:47:09,417 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:47:09,420 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:47:09,420 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:47:09,429 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:47:09,429 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:47:09,432 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:47:09,432 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:47:09,432 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:47:09,433 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:47:09,433 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:47:09,454 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:47:09,455 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:47:09,456 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:47:09,456 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:47:09,457 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,458 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:47:09,460 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:47:09,461 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:47:09,462 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:47:09,465 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:47:09,466 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:47:09,466 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:47:09,466 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:47:09,467 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:47:09,467 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:47:09,467 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:47:09,467 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:47:09,468 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:47:09,468 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:47:09,469 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:47:09,469 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:47:22,429 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:47:22,430 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:47:22,430 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:47:22,431 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:47:22,431 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:47:22,431 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:47:22,593 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:47:22,593 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:47:22,594 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:47:22,594 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:47:28,050 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:47:28,181 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:47:28,182 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:47:28,182 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:47:28,193 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:47:28,193 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:47:28,194 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:47:28,197 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:47:28,336 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:47:28,341 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:47:28,343 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:47:29,232 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:47:29,232 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:47:30,676 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:47:37,728 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:49:45,915 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:49:45,916 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:49:45,917 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:49:45,918 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:49:45,920 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:49:45,920 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:49:45,924 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:49:45,924 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:49:45,925 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:49:45,926 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:49:45,928 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:49:45,929 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:49:45,929 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:49:45,929 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,929 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:49:45,930 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,930 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:49:45,931 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:49:45,933 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,934 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:49:45,934 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:49:45,934 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:49:45,935 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:49:45,936 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:49:45,936 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:49:45,936 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:49:45,945 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:49:45,946 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:49:45,946 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:49:45,947 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:49:45,952 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:49:48,817 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:49:48,818 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:49:48,822 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:49:48,823 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:49:48,828 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:49:48,828 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:49:48,829 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:49:48,829 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:49:48,829 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:49:48,830 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:49:48,830 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:49:48,844 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:49:48,845 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:49:48,846 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:49:48,846 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:49:48,847 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,847 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,848 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:49:48,848 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:49:48,848 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,849 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,849 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:49:48,852 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:49:48,853 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,853 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,853 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:49:48,854 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:49:48,855 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,855 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,855 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:49:48,855 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:49:48,856 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:49:48,856 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,856 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,856 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:49:48,857 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:49:48,857 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:49:48,857 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:49:48,857 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:49:48,860 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:49:48,861 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:49:48,861 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:49:48,861 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:49:48,861 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:49:48,862 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:49:48,863 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:49:48,863 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:49:48,863 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:49:48,863 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:49:48,864 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:49:48,864 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:49:48,864 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:50:02,538 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:50:02,539 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:50:02,539 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:50:02,539 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:50:02,539 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:50:02,540 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:50:02,677 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:50:02,678 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:50:02,678 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:50:02,678 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:50:06,235 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:50:06,372 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:50:06,372 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:50:06,373 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:50:06,390 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:50:06,391 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 20:50:06,391 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:50:06,398 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:50:06,538 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:50:06,543 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:50:06,543 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:50:07,473 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:50:07,473 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:50:09,087 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:50:15,836 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:51:18,633 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:51:18,633 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:51:18,634 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:51:18,634 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:51:18,636 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:51:18,637 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:51:18,640 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:51:18,641 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:51:18,643 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:51:18,643 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:51:18,644 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,645 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:51:18,646 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,647 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:51:18,647 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,647 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:51:18,647 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:51:18,648 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:51:18,655 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:51:18,656 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:51:18,656 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:51:18,656 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:51:18,662 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:51:21,144 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:51:21,144 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:51:21,147 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:51:21,147 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:51:21,151 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:51:21,151 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:51:21,152 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:51:21,152 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:51:21,152 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:51:21,153 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:51:21,153 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:51:21,165 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:51:21,165 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:51:21,166 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:51:21,167 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:51:21,168 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,169 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:51:21,170 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:51:21,171 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:51:21,172 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:51:21,172 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:51:21,172 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:51:21,172 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:51:21,173 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:51:21,173 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:51:21,174 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:51:34,156 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:51:34,156 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:51:34,157 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:51:34,157 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:51:34,158 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:51:34,158 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:51:34,287 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:51:34,288 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:51:34,288 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:51:34,289 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:51:39,224 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:51:39,353 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:51:39,353 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:51:39,354 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:51:39,369 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 20:51:39,369 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:51:39,372 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:51:39,524 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:51:39,530 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:51:39,530 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:51:40,288 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:51:40,288 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:51:41,666 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:51:48,497 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 20:53:14,286 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 20:53:14,286 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 20:53:14,288 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 20:53:14,288 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 20:53:14,290 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 20:53:14,290 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 20:53:14,294 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 20:53:14,295 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 20:53:14,296 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 20:53:14,297 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 20:53:14,297 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 20:53:14,298 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 20:53:14,299 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:53:14,299 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,299 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 20:53:14,299 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,300 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 20:53:14,300 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,300 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 20:53:14,300 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,301 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 20:53:14,301 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,301 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 20:53:14,301 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,302 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 20:53:14,303 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 20:53:14,303 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 20:53:14,303 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 20:53:14,303 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 20:53:14,304 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 20:53:14,304 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 20:53:14,311 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 20:53:14,313 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 20:53:14,313 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 20:53:14,314 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 20:53:14,318 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 20:53:17,000 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 20:53:17,001 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 20:53:17,003 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 20:53:17,003 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 20:53:17,009 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 20:53:17,009 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 20:53:17,013 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 20:53:17,013 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 20:53:17,013 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 20:53:17,014 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 20:53:17,014 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 20:53:17,027 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 20:53:17,028 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 20:53:17,029 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 20:53:17,029 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 20:53:17,030 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,030 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,030 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 20:53:17,031 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 20:53:17,031 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,031 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,031 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 20:53:17,032 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 20:53:17,033 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,033 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,033 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 20:53:17,033 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 20:53:17,034 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 20:53:17,034 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,034 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,034 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 20:53:17,035 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 20:53:17,035 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 20:53:17,035 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 20:53:17,036 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 20:53:17,037 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 20:53:17,038 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 20:53:17,038 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 20:53:17,038 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 20:53:17,039 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 20:53:17,039 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 20:53:17,039 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 20:53:17,040 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 20:53:17,040 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 20:53:17,040 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 20:53:17,040 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 20:53:17,040 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 20:53:17,041 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 20:53:29,964 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 20:53:29,964 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 20:53:29,965 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 20:53:29,965 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 20:53:29,965 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 20:53:29,965 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 20:53:30,098 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 20:53:30,099 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 20:53:30,100 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 20:53:30,100 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 20:53:35,984 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 20:53:36,141 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 20:53:36,141 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 20:53:36,142 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 20:53:36,154 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:53:36,157 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 20:53:36,324 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 20:53:36,330 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 20:53:36,330 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 20:53:37,193 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 20:53:37,193 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 20:53:38,710 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 20:53:45,646 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 21:04:11,542 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 21:04:11,542 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 21:04:11,544 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 21:04:11,544 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 21:04:11,546 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 21:04:11,546 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 21:04:11,551 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 21:04:11,552 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 21:04:11,553 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 21:04:11,554 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 21:04:11,554 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:11,555 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,556 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 21:04:11,556 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,556 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 21:04:11,557 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,557 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:11,557 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,558 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 21:04:11,559 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,559 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 21:04:11,559 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:11,559 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 21:04:11,560 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 21:04:11,560 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 21:04:11,560 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 21:04:11,560 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 21:04:11,567 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 21:04:11,568 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 21:04:11,568 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 21:04:11,568 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 21:04:11,574 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 21:04:14,573 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 21:04:14,574 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 21:04:14,577 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 21:04:14,578 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 21:04:14,590 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 21:04:14,591 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 21:04:14,592 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 21:04:14,592 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 21:04:14,592 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 21:04:14,593 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 21:04:14,593 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 21:04:14,614 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 21:04:14,615 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 21:04:14,616 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 21:04:14,617 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 21:04:14,617 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,617 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,618 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 21:04:14,619 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 21:04:14,619 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,619 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,620 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 21:04:14,621 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 21:04:14,622 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 21:04:14,623 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 21:04:14,625 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 21:04:14,626 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 21:04:14,627 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 21:04:14,628 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 21:04:14,628 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 21:04:14,629 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 21:04:14,629 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 21:04:14,630 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 21:04:14,631 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 21:04:14,631 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 21:04:14,632 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 21:04:14,632 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 21:04:14,633 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 21:04:32,030 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 21:04:32,030 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 21:04:32,032 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 21:04:32,032 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 21:04:32,034 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 21:04:32,034 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 21:04:32,059 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 21:04:32,060 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 21:04:32,075 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 21:04:32,083 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 21:04:32,084 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 21:04:32,085 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 21:04:32,088 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:32,097 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,098 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:32,099 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,099 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 21:04:32,099 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,100 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 21:04:32,100 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,102 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:32,103 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,105 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:04:32,106 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,107 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 21:04:32,107 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,108 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 21:04:32,111 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,118 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 21:04:32,124 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:04:32,126 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 21:04:32,129 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 21:04:32,130 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 21:04:32,130 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 21:04:32,131 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 21:04:32,160 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 21:04:32,166 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 21:04:32,179 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 21:04:32,185 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 21:04:32,202 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 21:04:34,722 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 21:04:34,723 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 21:04:34,725 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 21:04:34,725 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 21:04:34,730 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 21:04:34,730 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 21:04:34,731 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 21:04:34,731 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 21:04:34,731 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 21:04:34,732 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 21:04:34,732 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 21:04:34,746 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 21:04:34,747 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 21:04:34,747 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 21:04:34,748 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 21:04:34,748 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,748 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,749 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 21:04:34,749 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 21:04:34,749 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,749 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,750 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 21:04:34,750 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 21:04:34,750 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,750 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,751 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 21:04:34,751 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 21:04:34,751 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,751 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,752 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 21:04:34,752 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 21:04:34,752 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 21:04:34,753 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,753 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,753 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 21:04:34,754 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 21:04:34,754 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 21:04:34,754 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 21:04:34,754 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 21:04:34,756 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 21:04:34,757 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 21:04:34,757 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 21:04:34,757 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 21:04:34,758 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 21:04:34,758 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 21:04:34,758 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 21:04:34,759 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 21:04:34,759 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 21:04:34,759 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 21:04:34,759 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 21:04:34,760 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 21:04:34,760 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 21:04:34,760 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 21:04:34,760 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 21:04:34,761 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 21:04:34,761 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 21:04:47,549 - WafLogger - ERROR - An error occurred: PyAutoGUI fail-safe triggered from mouse moving to a corner of the screen. To disable this fail-safe, set pyautogui.FAILSAFE to False. DISABLING FAIL-SAFE IS NOT RECOMMENDED. [keywords_manager.py:72]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "D:\allprojects\web_automation_htmltopdf\driver_manager.py", line 171, in launch_browser
    pag.press('esc')
  File "C:\Python312\Lib\site-packages\pyautogui\__init__.py", line 593, in wrapper
    failSafeCheck()
  File "C:\Python312\Lib\site-packages\pyautogui\__init__.py", line 1734, in failSafeCheck
    raise FailSafeException(
pyautogui.FailSafeException: PyAutoGUI fail-safe triggered from mouse moving to a corner of the screen. To disable this fail-safe, set pyautogui.FAILSAFE to False. DISABLING FAIL-SAFE IS NOT RECOMMENDED.
2025-04-02 21:04:47,589 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:73]
2025-04-02 21:04:47,770 - WafLogger - ERROR - An error occurred: PyAutoGUI fail-safe triggered from mouse moving to a corner of the screen. To disable this fail-safe, set pyautogui.FAILSAFE to False. DISABLING FAIL-SAFE IS NOT RECOMMENDED. [runner.py:206]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 204, in start_runner
    km.ge_open_browser(str(launch_browser))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 48, in ge_open_browser
    self.launch_browser(browser_name)
  File "D:\allprojects\web_automation_htmltopdf\driver_manager.py", line 171, in launch_browser
    pag.press('esc')
  File "C:\Python312\Lib\site-packages\pyautogui\__init__.py", line 593, in wrapper
    failSafeCheck()
  File "C:\Python312\Lib\site-packages\pyautogui\__init__.py", line 1734, in failSafeCheck
    raise FailSafeException(
pyautogui.FailSafeException: PyAutoGUI fail-safe triggered from mouse moving to a corner of the screen. To disable this fail-safe, set pyautogui.FAILSAFE to False. DISABLING FAIL-SAFE IS NOT RECOMMENDED.
2025-04-02 21:04:47,775 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 21:04:47,776 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 21:04:48,889 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 21:04:48,890 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 21:04:50,091 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 21:04:56,822 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-02 21:05:59,836 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-02 21:05:59,836 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-02 21:05:59,837 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-02 21:05:59,838 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-02 21:05:59,840 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-02 21:05:59,840 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-02 21:05:59,844 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-02 21:05:59,845 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-02 21:05:59,846 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-02 21:05:59,846 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-02 21:05:59,846 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-02 21:05:59,847 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-02 21:05:59,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:05:59,847 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,847 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-02 21:05:59,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-02 21:05:59,848 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,848 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-02 21:05:59,849 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,850 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-02 21:05:59,850 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,850 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-02 21:05:59,850 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,851 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-02 21:05:59,851 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-02 21:05:59,851 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-02 21:05:59,851 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-02 21:05:59,852 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-02 21:05:59,852 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-02 21:05:59,852 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-02 21:05:59,862 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-02 21:05:59,863 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-02 21:05:59,863 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-02 21:05:59,863 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-02 21:05:59,871 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-02 21:06:02,049 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-02 21:06:02,049 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-02 21:06:02,051 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-02 21:06:02,051 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-02 21:06:02,055 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-02 21:06:02,066 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-02 21:06:02,068 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-02 21:06:02,069 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-02 21:06:02,069 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-02 21:06:02,069 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-02 21:06:02,070 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-02 21:06:02,082 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-02 21:06:02,083 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-02 21:06:02,083 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-02 21:06:02,084 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-02 21:06:02,084 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,085 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,085 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-02 21:06:02,085 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-02 21:06:02,085 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,086 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,086 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-02 21:06:02,086 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-02 21:06:02,087 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,087 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,087 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-02 21:06:02,088 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-02 21:06:02,089 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-02 21:06:02,089 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,089 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,089 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-02 21:06:02,090 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-02 21:06:02,090 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-02 21:06:02,090 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-02 21:06:02,091 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-02 21:06:02,093 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-02 21:06:02,094 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-02 21:06:02,094 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-02 21:06:02,095 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-02 21:06:02,095 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-02 21:06:02,095 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-02 21:06:02,095 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-02 21:06:02,096 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-02 21:06:02,096 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-02 21:06:02,096 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-02 21:06:02,096 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-02 21:06:02,097 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-02 21:06:02,097 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-02 21:06:02,097 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-02 21:06:02,098 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-02 21:06:02,098 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-02 21:06:02,098 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-02 21:06:15,027 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-02 21:06:15,028 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-02 21:06:15,028 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-02 21:06:15,028 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-02 21:06:15,029 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:27]
2025-04-02 21:06:15,029 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-02 21:06:15,189 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-02 21:06:15,189 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-02 21:06:15,189 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-02 21:06:15,191 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:31]
2025-04-02 21:06:19,394 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-02 21:06:19,555 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-02 21:06:19,556 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-02 21:06:19,557 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-02 21:06:19,598 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:189]
2025-04-02 21:06:19,598 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:41]
2025-04-02 21:06:19,598 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 21:06:19,604 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-02 21:06:19,762 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 37, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 186, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF64DB9A545+20677]
	simdutf::get_active_implementation [0x00007FF64DAF6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DDED75A+1807418]
	(No symbol) [0x00007FF64D9372AC]
	(No symbol) [0x00007FF64D93758B]
	(No symbol) [0x00007FF64D9785A7]
	(No symbol) [0x00007FF64D95849F]
	(No symbol) [0x00007FF64D92D6ED]
	(No symbol) [0x00007FF64D975D61]
	(No symbol) [0x00007FF64D9581C3]
	(No symbol) [0x00007FF64D92CC36]
	(No symbol) [0x00007FF64D92C0C4]
	(No symbol) [0x00007FF64D92CA63]
	(No symbol) [0x00007FF64DA15BDD]
	(No symbol) [0x00007FF64DA22042]
	(No symbol) [0x00007FF64DA1AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF64DC742AA+262026]
	simdutf::get_active_implementation [0x00007FF64DB04421+546385]
	simdutf::get_active_implementation [0x00007FF64DAFD6D4+518404]
	simdutf::get_active_implementation [0x00007FF64DAFD819+518729]
	simdutf::get_active_implementation [0x00007FF64DAEF3C6+460278]
	BaseThreadInitThunk [0x00007FF89C2BE8D7+23]
	RtlUserThreadStart [0x00007FF89D05BF6C+44]

2025-04-02 21:06:19,768 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-02 21:06:19,768 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-02 21:06:20,836 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-02 21:06:20,837 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-02 21:06:22,378 - WafLogger - DEBUG - Closing Browser [driver_functions.py:23]
2025-04-02 21:06:29,143 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 09:56:24,082 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 09:56:24,090 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 09:56:24,092 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 09:56:24,092 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 09:56:24,097 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-03 09:56:24,097 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-03 09:56:24,157 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-03 09:56:24,160 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-03 09:56:24,162 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-03 09:56:24,163 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-03 09:56:24,163 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-03 09:56:24,165 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-03 09:56:24,165 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-03 09:56:24,166 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,166 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-03 09:56:24,166 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,167 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-03 09:56:24,167 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,167 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-03 09:56:24,168 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,168 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-03 09:56:24,175 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,176 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-03 09:56:24,176 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,176 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-03 09:56:24,177 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 09:56:24,178 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 09:56:24,178 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-03 09:56:24,178 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-03 09:56:24,179 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-03 09:56:24,179 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-03 09:56:24,200 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-03 09:56:24,201 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 09:56:24,204 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 09:56:24,204 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 09:56:24,415 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 09:56:27,049 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 09:56:27,050 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 09:56:27,053 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 09:56:27,054 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 09:56:27,315 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 09:56:27,315 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 09:56:27,318 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 09:56:27,318 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 09:56:27,318 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 09:56:27,363 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 09:56:27,364 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 09:56:27,412 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 09:56:27,591 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 09:56:27,597 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 09:56:27,599 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 09:56:27,600 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,600 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,601 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 09:56:27,602 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 09:56:27,604 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,605 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,606 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 09:56:27,606 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 09:56:27,606 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,606 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,607 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 09:56:27,607 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 09:56:27,607 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,609 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,609 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 09:56:27,609 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 09:56:27,609 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 09:56:27,610 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 09:56:27,612 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 09:56:27,612 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 09:56:27,614 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 09:56:27,615 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 09:56:27,618 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 09:56:27,619 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 09:56:27,621 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 09:56:27,621 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 09:56:27,622 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 09:56:27,622 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 09:56:27,623 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 09:56:27,623 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 09:56:27,623 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 09:56:27,623 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 09:56:27,623 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 09:56:27,625 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 09:56:27,625 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 09:56:27,625 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 09:56:27,625 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 09:56:47,068 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 09:56:47,069 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 09:56:47,069 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 09:56:47,070 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 09:56:47,070 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 09:56:47,070 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 09:56:47,364 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 09:56:47,364 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 09:56:47,364 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 09:56:47,365 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 09:56:51,661 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 09:56:51,854 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 09:56:51,854 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 09:56:51,855 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 09:56:51,893 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 09:56:51,894 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 09:56:51,894 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6DAFBA545+20677]
	simdutf::get_active_implementation [0x00007FF6DAF16CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB20D75A+1807418]
	(No symbol) [0x00007FF6DAD572AC]
	(No symbol) [0x00007FF6DAD5758B]
	(No symbol) [0x00007FF6DAD985A7]
	(No symbol) [0x00007FF6DAD7849F]
	(No symbol) [0x00007FF6DAD4D6ED]
	(No symbol) [0x00007FF6DAD95D61]
	(No symbol) [0x00007FF6DAD781C3]
	(No symbol) [0x00007FF6DAD4CC36]
	(No symbol) [0x00007FF6DAD4C0C4]
	(No symbol) [0x00007FF6DAD4CA63]
	(No symbol) [0x00007FF6DAE35BDD]
	(No symbol) [0x00007FF6DAE42042]
	(No symbol) [0x00007FF6DAE3AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB0942AA+262026]
	simdutf::get_active_implementation [0x00007FF6DAF24421+546385]
	simdutf::get_active_implementation [0x00007FF6DAF1D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6DAF1D819+518729]
	simdutf::get_active_implementation [0x00007FF6DAF0F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6DAFBA545+20677]
	simdutf::get_active_implementation [0x00007FF6DAF16CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB20D75A+1807418]
	(No symbol) [0x00007FF6DAD572AC]
	(No symbol) [0x00007FF6DAD5758B]
	(No symbol) [0x00007FF6DAD985A7]
	(No symbol) [0x00007FF6DAD7849F]
	(No symbol) [0x00007FF6DAD4D6ED]
	(No symbol) [0x00007FF6DAD95D61]
	(No symbol) [0x00007FF6DAD781C3]
	(No symbol) [0x00007FF6DAD4CC36]
	(No symbol) [0x00007FF6DAD4C0C4]
	(No symbol) [0x00007FF6DAD4CA63]
	(No symbol) [0x00007FF6DAE35BDD]
	(No symbol) [0x00007FF6DAE42042]
	(No symbol) [0x00007FF6DAE3AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB0942AA+262026]
	simdutf::get_active_implementation [0x00007FF6DAF24421+546385]
	simdutf::get_active_implementation [0x00007FF6DAF1D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6DAF1D819+518729]
	simdutf::get_active_implementation [0x00007FF6DAF0F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 09:56:52,037 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 09:56:52,205 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6DAFBA545+20677]
	simdutf::get_active_implementation [0x00007FF6DAF16CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB20D75A+1807418]
	(No symbol) [0x00007FF6DAD572AC]
	(No symbol) [0x00007FF6DAD5758B]
	(No symbol) [0x00007FF6DAD985A7]
	(No symbol) [0x00007FF6DAD7849F]
	(No symbol) [0x00007FF6DAD4D6ED]
	(No symbol) [0x00007FF6DAD95D61]
	(No symbol) [0x00007FF6DAD781C3]
	(No symbol) [0x00007FF6DAD4CC36]
	(No symbol) [0x00007FF6DAD4C0C4]
	(No symbol) [0x00007FF6DAD4CA63]
	(No symbol) [0x00007FF6DAE35BDD]
	(No symbol) [0x00007FF6DAE42042]
	(No symbol) [0x00007FF6DAE3AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6DB0942AA+262026]
	simdutf::get_active_implementation [0x00007FF6DAF24421+546385]
	simdutf::get_active_implementation [0x00007FF6DAF1D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6DAF1D819+518729]
	simdutf::get_active_implementation [0x00007FF6DAF0F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
2025-04-03 09:56:52,206 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 09:56:52,207 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 09:56:54,115 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 09:56:54,115 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 09:56:57,211 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 09:57:04,241 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 10:01:43,716 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:432]
2025-04-03 10:01:43,728 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:434]
2025-04-03 10:01:43,730 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:442]
2025-04-03 10:01:43,731 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:468]
2025-04-03 10:01:43,736 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:476]
2025-04-03 10:01:43,736 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:481]
2025-04-03 10:01:43,740 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:486]
2025-04-03 10:01:43,741 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:488]
2025-04-03 10:01:43,742 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:495]
2025-04-03 10:01:43,743 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:515]
2025-04-03 10:01:43,744 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:521]
2025-04-03 10:01:43,744 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:529]
2025-04-03 10:01:43,744 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:532]
2025-04-03 10:01:43,745 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,745 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:532]
2025-04-03 10:01:43,745 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,746 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:532]
2025-04-03 10:01:43,746 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,747 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:532]
2025-04-03 10:01:43,748 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,748 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:532]
2025-04-03 10:01:43,748 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,749 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:532]
2025-04-03 10:01:43,749 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,750 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:532]
2025-04-03 10:01:43,750 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,750 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:532]
2025-04-03 10:01:43,751 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,751 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:532]
2025-04-03 10:01:43,751 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:533]
2025-04-03 10:01:43,752 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:536]
2025-04-03 10:01:43,752 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:537]
2025-04-03 10:01:43,752 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:541]
2025-04-03 10:01:43,753 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:542]
2025-04-03 10:01:43,753 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:562]
2025-04-03 10:01:43,767 - WafLogger - DEBUG - Starting the execution recording. [runner.py:568]
2025-04-03 10:01:43,768 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:01:43,770 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:01:43,771 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:01:43,846 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:01:46,662 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:01:46,662 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:01:46,664 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:01:46,664 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:01:46,668 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:01:46,669 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:01:46,670 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:01:46,710 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:01:46,761 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:01:46,765 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:01:46,766 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:01:46,766 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,766 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,768 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:01:46,768 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:01:46,768 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,769 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,769 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:01:46,770 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:01:46,770 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,771 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,771 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:01:46,771 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:01:46,771 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,772 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,772 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:01:46,772 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:01:46,773 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:01:46,773 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,774 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,774 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:01:46,774 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:01:46,775 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:01:46,775 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:01:46,775 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:01:46,782 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:01:46,783 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:01:46,784 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:01:46,784 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:01:46,785 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:01:46,786 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:01:46,786 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:01:46,787 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:01:46,787 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:01:46,788 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:01:46,788 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:01:46,788 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:01:46,789 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:01:46,789 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:01:46,789 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:01:46,790 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:01:46,790 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:02:00,242 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:02:00,244 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:02:00,432 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:02:00,432 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:02:00,433 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:02:00,433 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:02:05,949 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:02:06,131 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:02:06,132 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:02:06,132 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:02:06,156 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:02:06,156 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:02:06,156 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6D66FA545+20677]
	simdutf::get_active_implementation [0x00007FF6D6656CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6D694D75A+1807418]
	(No symbol) [0x00007FF6D64972AC]
	(No symbol) [0x00007FF6D649758B]
	(No symbol) [0x00007FF6D64D85A7]
	(No symbol) [0x00007FF6D64B849F]
	(No symbol) [0x00007FF6D648D6ED]
	(No symbol) [0x00007FF6D64D5D61]
	(No symbol) [0x00007FF6D64B81C3]
	(No symbol) [0x00007FF6D648CC36]
	(No symbol) [0x00007FF6D648C0C4]
	(No symbol) [0x00007FF6D648CA63]
	(No symbol) [0x00007FF6D6575BDD]
	(No symbol) [0x00007FF6D6582042]
	(No symbol) [0x00007FF6D657AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6D67D42AA+262026]
	simdutf::get_active_implementation [0x00007FF6D6664421+546385]
	simdutf::get_active_implementation [0x00007FF6D665D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6D665D819+518729]
	simdutf::get_active_implementation [0x00007FF6D664F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
2025-04-03 10:02:06,157 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:02:06,298 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF6D66FA545+20677]
	simdutf::get_active_implementation [0x00007FF6D6656CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6D694D75A+1807418]
	(No symbol) [0x00007FF6D64972AC]
	(No symbol) [0x00007FF6D649758B]
	(No symbol) [0x00007FF6D64D85A7]
	(No symbol) [0x00007FF6D64B849F]
	(No symbol) [0x00007FF6D648D6ED]
	(No symbol) [0x00007FF6D64D5D61]
	(No symbol) [0x00007FF6D64B81C3]
	(No symbol) [0x00007FF6D648CC36]
	(No symbol) [0x00007FF6D648C0C4]
	(No symbol) [0x00007FF6D648CA63]
	(No symbol) [0x00007FF6D6575BDD]
	(No symbol) [0x00007FF6D6582042]
	(No symbol) [0x00007FF6D657AA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6D67D42AA+262026]
	simdutf::get_active_implementation [0x00007FF6D6664421+546385]
	simdutf::get_active_implementation [0x00007FF6D665D6D4+518404]
	simdutf::get_active_implementation [0x00007FF6D665D819+518729]
	simdutf::get_active_implementation [0x00007FF6D664F3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
2025-04-03 10:02:06,300 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:02:06,301 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:02:07,416 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:02:07,416 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:02:09,374 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:02:16,396 - WafLogger - DEBUG - Finished recording. [runner.py:423]
2025-04-03 10:06:35,554 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:06:35,565 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:06:35,566 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:06:35,567 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:06:35,569 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:06:35,569 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:06:35,571 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:06:35,571 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:06:35,573 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:06:35,573 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:06:35,573 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:06:35,574 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:06:35,575 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,576 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:06:35,577 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:06:35,586 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:06:35,587 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:06:35,588 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:06:35,588 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:06:35,709 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:06:37,861 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:06:37,861 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:06:37,863 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:06:37,864 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:06:37,881 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:06:37,882 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:06:37,883 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:06:37,884 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:06:37,884 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:06:37,912 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:06:37,912 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:06:37,952 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:06:37,961 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:06:37,964 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:06:37,965 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:06:37,965 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,966 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,966 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:06:37,966 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:06:37,967 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,967 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,967 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:06:37,968 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:06:37,968 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,968 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,968 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:06:37,969 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:06:37,969 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,969 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,969 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:06:37,970 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:06:37,970 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:06:37,970 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,971 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,971 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:06:37,971 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:06:37,972 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:06:37,972 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:06:37,972 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:06:37,975 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:06:37,976 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:06:37,976 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:06:37,976 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:06:37,977 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:06:37,977 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:06:37,977 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:06:37,977 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:06:37,978 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:06:37,978 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:06:37,978 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:06:37,978 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:06:37,980 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:06:37,980 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:06:37,980 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:06:37,981 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:06:37,981 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:06:51,764 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:06:51,764 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:06:51,764 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:06:51,765 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:06:51,765 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:06:51,765 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:06:51,985 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:06:51,985 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:06:51,986 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:06:51,986 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:06:56,792 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:06:56,960 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:06:56,960 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:06:56,961 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:06:56,988 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:06:56,989 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:06:56,989 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:06:57,156 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:06:57,298 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:06:57,303 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:06:57,304 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:06:59,044 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:06:59,045 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:07:01,693 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:07:08,540 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 10:11:06,050 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:11:06,051 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:11:06,053 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:11:06,053 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:11:06,055 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:11:06,055 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:11:06,059 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:11:06,060 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:11:06,060 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:11:06,061 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:11:06,061 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:11:06,062 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:11:06,062 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:11:06,062 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,062 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:11:06,063 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,063 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:11:06,063 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,063 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:11:06,064 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,065 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:11:06,065 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,065 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:11:06,065 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,066 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:11:06,066 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:11:06,066 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:11:06,066 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:11:06,067 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:11:06,067 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:11:06,067 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:11:06,074 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:11:06,075 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:11:06,076 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:11:06,076 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:11:06,081 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:11:08,621 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:11:08,621 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:11:08,624 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:11:08,624 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:11:08,630 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:11:08,630 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:11:08,631 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:11:08,631 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:11:08,631 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:11:08,632 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:11:08,632 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:11:08,645 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:11:08,645 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:11:08,646 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:11:08,646 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:11:08,646 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,646 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,647 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:11:08,647 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:11:08,647 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,647 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,648 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:11:08,648 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:11:08,648 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,648 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,649 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:11:08,649 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:11:08,649 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,649 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,650 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:11:08,650 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:11:08,650 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:11:08,650 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,651 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,651 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:11:08,651 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:11:08,652 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:11:08,652 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:11:08,652 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:11:08,654 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:11:08,655 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:11:08,656 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:11:08,656 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:11:08,657 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:11:08,658 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:11:08,658 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:11:08,658 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:11:08,658 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:11:08,658 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:11:08,659 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:11:08,659 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:11:08,659 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:11:21,581 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:11:21,582 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:11:21,582 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:11:21,582 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:11:21,583 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:11:21,583 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:11:21,716 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:11:21,717 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:11:21,717 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:11:21,717 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:11:25,392 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:11:25,544 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:11:25,545 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:11:25,548 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:11:25,594 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:11:25,594 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:11:25,594 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:11:25,749 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:11:25,924 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:11:25,951 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:11:25,951 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:11:26,801 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:11:26,801 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:11:28,364 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:11:35,170 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 10:13:30,325 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:13:30,326 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:13:30,327 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:13:30,327 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:13:30,328 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:13:30,329 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:13:30,333 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:13:30,333 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:13:30,334 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:13:30,335 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:13:30,335 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:13:30,336 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,337 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:13:30,337 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,337 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:13:30,337 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,338 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:13:30,339 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,339 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:13:30,339 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,339 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:13:30,340 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:13:30,340 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:13:30,340 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:13:30,340 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:13:30,341 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:13:30,341 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:13:30,349 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:13:30,350 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:13:30,350 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:13:30,351 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:13:30,356 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:13:33,152 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:13:33,153 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:13:33,155 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:13:33,155 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:13:33,160 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:13:33,160 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:13:33,161 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:13:33,161 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:13:33,161 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:13:33,162 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:13:33,162 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:13:33,174 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:13:33,174 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:13:33,175 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:13:33,176 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,177 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:13:33,178 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:13:33,179 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:13:33,179 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,179 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,180 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:13:33,180 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:13:33,180 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:13:33,181 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:13:33,181 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:13:33,182 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:13:33,183 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:13:33,184 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:13:33,184 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:13:46,153 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:13:46,154 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:13:46,154 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:13:46,154 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:13:46,155 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:13:46,155 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:13:46,286 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:13:46,287 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:13:46,287 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:13:46,287 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:13:51,099 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:13:51,244 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:13:51,244 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:13:51,245 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:13:51,264 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:13:51,265 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:13:51,265 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:13:51,470 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:13:51,588 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:13:51,597 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:13:51,597 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:13:52,387 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:13:52,387 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:13:54,056 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:14:00,922 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 10:15:33,062 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:15:33,062 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:15:33,064 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:15:33,064 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:15:33,065 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:15:33,065 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:15:33,068 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:15:33,068 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:15:33,070 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:15:33,070 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:15:33,071 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:15:33,072 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:15:33,073 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:15:33,074 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:15:33,074 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:15:33,074 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:15:33,082 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:15:33,083 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:15:33,084 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:15:33,084 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:15:33,089 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:15:35,658 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:15:35,658 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:15:35,661 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:15:35,661 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:15:35,665 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:15:35,665 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:15:35,666 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:15:35,679 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:15:35,679 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:15:35,680 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:15:35,680 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:15:35,680 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,681 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:15:35,682 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,683 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:15:35,684 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:15:35,684 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:15:35,684 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:15:35,684 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:15:35,685 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:15:35,686 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:15:35,686 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:15:35,686 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:15:35,686 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:15:35,687 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:15:35,688 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:15:35,688 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:15:35,688 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:15:35,689 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:15:35,689 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:15:35,689 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:15:48,686 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:15:48,687 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:15:48,687 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:15:48,687 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:15:48,688 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:15:48,688 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:15:48,834 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:15:48,835 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:15:48,835 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:15:48,836 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:15:53,916 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:15:54,055 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:15:54,055 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:15:54,055 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:15:54,071 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:15:54,071 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:15:54,072 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:15:54,076 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:15:54,212 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:15:54,216 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:15:54,216 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:15:55,029 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:15:55,030 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:15:56,432 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:16:03,305 - WafLogger - DEBUG - Finished recording. [runner.py:422]
2025-04-03 10:17:16,650 - WafLogger - DEBUG - Execution Started ----------------. [runner.py:431]
2025-04-03 10:17:16,650 - WafLogger - DEBUG - Parsing the input arguments. [runner.py:433]
2025-04-03 10:17:16,652 - WafLogger - DEBUG - Counting the number of input arguments. [runner.py:441]
2025-04-03 10:17:16,652 - WafLogger - DEBUG - Loading 'start.properties' file. [runner.py:467]
2025-04-03 10:17:16,653 - WafLogger - DEBUG - Checking if in 'start.properties' file option to delete results and recording folders is set to 'yes'. [runner.py:475]
2025-04-03 10:17:16,653 - WafLogger - DEBUG - Deleting the test_results and recordings folders. [runner.py:480]
2025-04-03 10:17:16,656 - WafLogger - DEBUG - Deleting the output.xlsx file. [runner.py:485]
2025-04-03 10:17:16,656 - WafLogger - DEBUG - Creating the test_results and recordings folders. [runner.py:487]
2025-04-03 10:17:16,657 - WafLogger - DEBUG - Starting analysis of the contents of the test_scripts folders. [runner.py:494]
2025-04-03 10:17:16,658 - WafLogger - DEBUG - Checking if test_scripts folder and chrome folder contains the same files. [runner.py:514]
2025-04-03 10:17:16,658 - WafLogger - DEBUG - Checking if test_scripts folder and edge folder contains the same files. [runner.py:520]
2025-04-03 10:17:16,658 - WafLogger - DEBUG - Gathering all files present in the test_scripts folder. [runner.py:528]
2025-04-03 10:17:16,658 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc002_testscript1.xlsx. [runner.py:531]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\tc003_testscript2.xlsx. [runner.py:531]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,659 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1 (2).xlsx. [runner.py:531]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\tc003_testscript1.xlsx. [runner.py:531]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\chrome\TS001_testscript1.xlsx. [runner.py:531]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\1.xlsx. [runner.py:531]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,660 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\tc001_testscript1 - Copy.xlsx. [runner.py:531]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Getting the file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx. [runner.py:531]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Checking if the file path contains 'testscript.xlsx' in the end. [runner.py:532]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - The file path D:\allprojects\web_automation_htmltopdf\test_scripts\edge\TS001_testscript.xlsx contains 'testscript.xlsx' in the end. [runner.py:535]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Checking if the file name starts with 'ts' (case insensitive). [runner.py:536]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - The file name TS001_testscript.xlsx starts with 'ts' (case insensitive). [runner.py:540]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - Checking if the file TS001_testscript.xlsx is present in chrome or edge folder. [runner.py:541]
2025-04-03 10:17:16,661 - WafLogger - DEBUG - The file TS001_testscript.xlsx is present in edge folder. Launching the execution of test script on edge browser. [runner.py:561]
2025-04-03 10:17:16,669 - WafLogger - DEBUG - Starting the execution recording. [runner.py:567]
2025-04-03 10:17:16,670 - WafLogger - DEBUG - Gathering screen size for recording. [runner.py:380]
2025-04-03 10:17:16,670 - WafLogger - DEBUG - Setting FPS for recording. [runner.py:387]
2025-04-03 10:17:16,670 - WafLogger - DEBUG - Gathering the output path and file name for recording. [runner.py:393]
2025-04-03 10:17:16,675 - WafLogger - DEBUG - Starting recording. [runner.py:402]
2025-04-03 10:17:19,101 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:32]
2025-04-03 10:17:19,102 - WafLogger - DEBUG - Loading 'start.properties' file [runner.py:36]
2025-04-03 10:17:19,105 - WafLogger - DEBUG - Loading 'start.properties' is successful [runner.py:39]
2025-04-03 10:17:19,105 - WafLogger - DEBUG - Loading 'object_repository.properties' file [runner.py:49]
2025-04-03 10:17:19,109 - WafLogger - DEBUG - Loading 'object_repository.properties' is successful. [runner.py:54]
2025-04-03 10:17:19,110 - WafLogger - DEBUG - Instantiating excel report manager [runner.py:60]
2025-04-03 10:17:19,111 - WafLogger - DEBUG - Checking if the test script excel file name ends with 'testscript.xlsx' [runner.py:63]
2025-04-03 10:17:19,112 - WafLogger - DEBUG - Test script excel file name ends with 'testscript.xlsx'. Proceeding execution. [runner.py:66]
2025-04-03 10:17:19,112 - WafLogger - DEBUG - Checking if the test script excel file is in correct excel format [runner.py:67]
2025-04-03 10:17:19,112 - WafLogger - DEBUG - Test script excel file is in correct excel format. Proceeding execution. [runner.py:69]
2025-04-03 10:17:19,112 - WafLogger - DEBUG - Reading the test script excel file into pandas dataframe. [runner.py:72]
2025-04-03 10:17:19,129 - WafLogger - DEBUG - Checking if the 'Keyword' column of test script excel file does not contain empty values. [runner.py:74]
2025-04-03 10:17:19,130 - WafLogger - DEBUG - Replacing all empty values in pandas data frame as ''. [runner.py:81]
2025-04-03 10:17:19,134 - WafLogger - DEBUG - Looping through the data frame to check the validity of its content. [runner.py:83]
2025-04-03 10:17:19,135 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:85]
2025-04-03 10:17:19,136 - WafLogger - DEBUG - Checking if the keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,136 - WafLogger - DEBUG - The keyword in row number 0 of 'Keyword' column 'tc_id' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,136 - WafLogger - DEBUG - Checking if a first keyword in the test script excel file is 'tc_id'. [runner.py:137]
2025-04-03 10:17:19,136 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:85]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - Checking if the keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - The keyword in row number 1 of 'Keyword' column 'tc_desc' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - Checking if a second keyword in the test script excel file is 'tc_desc'. [runner.py:142]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:85]
2025-04-03 10:17:19,137 - WafLogger - DEBUG - Checking if the keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,138 - WafLogger - DEBUG - The keyword in row number 2 of 'Keyword' column 'step' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,138 - WafLogger - DEBUG - Checking if a third keyword in the test script excel file is 'step'. [runner.py:147]
2025-04-03 10:17:19,138 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:85]
2025-04-03 10:17:19,138 - WafLogger - DEBUG - Checking if the keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - The keyword in row number 3 of 'Keyword' column 'open_browser' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - Checking if a valid browser name is given. [runner.py:103]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - Checking if a fourth keyword in the test script excel file is 'open_browser'. [runner.py:152]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:85]
2025-04-03 10:17:19,139 - WafLogger - DEBUG - Checking if the keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - The keyword in row number 4 of 'Keyword' column 'enter_url' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - Checking if a fifth keyword in the test script excel file is 'enter_url'. [runner.py:157]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:85]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - Checking if the keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:87]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - The keyword in row number 5 of 'Keyword' column 'click' is a valid keyword. [runner.py:91]
2025-04-03 10:17:19,140 - WafLogger - DEBUG - Instantiating the keyword manager. [runner.py:162]
2025-04-03 10:17:19,142 - WafLogger - DEBUG - Looping through the data frame to execute the test script. [runner.py:172]
2025-04-03 10:17:19,143 - WafLogger - DEBUG - Reading Row Number 0 [runner.py:174]
2025-04-03 10:17:19,144 - WafLogger - DEBUG - Passing the keyword 'tc_id' and input 'TC001' to the keyword manager. [runner.py:177]
2025-04-03 10:17:19,144 - WafLogger - DEBUG - Setting the test report of the PDF report [keywords_manager.py:29]
2025-04-03 10:17:19,144 - WafLogger - DEBUG - Reading Row Number 1 [runner.py:174]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Passing the keyword 'tc_desc' and input 'To verify if "Save as Draft" button saves the notification as draft during creation of a new notification.
1.adldofo
2. fldldfodo' to the keyword manager. [runner.py:181]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Setting the test description in the PDF report [keywords_manager.py:34]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Reading Row Number 2 [runner.py:174]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Passing the keyword 'step' and input 'WhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstepWhatisthisstep' to the keyword manager. [runner.py:185]
2025-04-03 10:17:19,145 - WafLogger - DEBUG - Passing the keyword 'step' and input 'Step is stepd foe flsof lldfoe ' to the keyword manager. [runner.py:186]
2025-04-03 10:17:19,146 - WafLogger - DEBUG - Populating the test details table in the PDF report [keywords_manager.py:38]
2025-04-03 10:17:19,146 - WafLogger - INFO - Step is instantiated. [pdf_report_manager.py:34]
2025-04-03 10:17:19,146 - WafLogger - DEBUG - Reading Row Number 3 [runner.py:174]
2025-04-03 10:17:19,147 - WafLogger - DEBUG - Checking if 'launch_browser' paramater is empty. [runner.py:195]
2025-04-03 10:17:19,147 - WafLogger - DEBUG - The 'launch_browser' paramater is available. Using it. [runner.py:202]
2025-04-03 10:17:19,147 - WafLogger - DEBUG - Passing the keyword 'open_browser' and input 'edge' to the keyword manager. [runner.py:203]
2025-04-03 10:17:19,147 - WafLogger - DEBUG - Launching edge ....... [keywords_manager.py:47]
2025-04-03 10:17:32,106 - WafLogger - DEBUG - Capturing the OS where the browser is running. [keywords_manager.py:49]
2025-04-03 10:17:32,107 - WafLogger - DEBUG - Populating the OS details in the PDF report as Windows [keywords_manager.py:56]
2025-04-03 10:17:32,107 - WafLogger - DEBUG - Populating the browser details in the PDF report as edge [keywords_manager.py:65]
2025-04-03 10:17:32,108 - WafLogger - DEBUG - Returning Browser Version. [keywords_manager.py:79]
2025-04-03 10:17:32,108 - WafLogger - DEBUG - Capturing Browser Version [driver_functions.py:26]
2025-04-03 10:17:32,110 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:69]
2025-04-03 10:17:32,260 - WafLogger - DEBUG - Reading Row Number 4 [runner.py:174]
2025-04-03 10:17:32,261 - WafLogger - DEBUG - Passing the keyword 'enter_url' and input 'https://www.google.com' to the keyword manager. [runner.py:249]
2025-04-03 10:17:32,261 - WafLogger - DEBUG - Opening URL [keywords_manager.py:146]
2025-04-03 10:17:32,261 - WafLogger - DEBUG - Opening URL https://www.google.com [driver_functions.py:30]
2025-04-03 10:17:44,871 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:151]
2025-04-03 10:17:45,036 - WafLogger - DEBUG - Reading Row Number 5 [runner.py:174]
2025-04-03 10:17:45,037 - WafLogger - DEBUG - Passing the keyword 'click' and input 'login_uname_textbox_xpath' to the keyword manager. [runner.py:345]
2025-04-03 10:17:45,038 - WafLogger - DEBUG - Passing the keyword 'click' and input 'Email Text Box' to the keyword manager. [runner.py:346]
2025-04-03 10:17:45,057 - WafLogger - ERROR - Element not found with locator: //*[@id="root"]/div/section/div/form/div/input and locator_type: xpath [driver_functions.py:188]
2025-04-03 10:17:45,059 - WafLogger - ERROR - cannot send data on the element with locator: //*[@id="root"]/div/section/div/form/div/input locator_type: xpath [driver_functions.py:40]
2025-04-03 10:17:45,059 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [keywords_manager.py:210]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:17:45,077 - WafLogger - DEBUG - Populating the step result details along with screenshot in the PDF report. [keywords_manager.py:211]
2025-04-03 10:17:45,202 - WafLogger - ERROR - An error occurred: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]
 [runner.py:350]
Traceback (most recent call last):
  File "D:\allprojects\web_automation_htmltopdf\runner.py", line 348, in start_runner
    km.ge_click(str(configs.get(row["Input2"]).data), "xpath",str(row["Input1"]))
  File "D:\allprojects\web_automation_htmltopdf\keywords_manager.py", line 203, in ge_click
    self.scroll_into_view(locator, locator_type)
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 36, in scroll_into_view
    element = self.get_element(locator, locator_type)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\allprojects\web_automation_htmltopdf\driver_functions.py", line 185, in get_element
    element = self.driver.find_element(by_type, locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 742, in find_element
    return self.execute(Command.FIND_ELEMENT, {"using": by, "value": value})["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 348, in execute
    self.error_handler.check_response(response)
  File "C:\Python312\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 229, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="root"]/div/section/div/form/div/input"}
  (Session info: MicrosoftEdge=134.0.3124.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
	GetHandleVerifier [0x00007FF77296A545+20677]
	simdutf::get_active_implementation [0x00007FF7728C6CF0+491296]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772BBD75A+1807418]
	(No symbol) [0x00007FF7727072AC]
	(No symbol) [0x00007FF77270758B]
	(No symbol) [0x00007FF7727485A7]
	(No symbol) [0x00007FF77272849F]
	(No symbol) [0x00007FF7726FD6ED]
	(No symbol) [0x00007FF772745D61]
	(No symbol) [0x00007FF7727281C3]
	(No symbol) [0x00007FF7726FCC36]
	(No symbol) [0x00007FF7726FC0C4]
	(No symbol) [0x00007FF7726FCA63]
	(No symbol) [0x00007FF7727E5BDD]
	(No symbol) [0x00007FF7727F2042]
	(No symbol) [0x00007FF7727EAA03]
	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF772A442AA+262026]
	simdutf::get_active_implementation [0x00007FF7728D4421+546385]
	simdutf::get_active_implementation [0x00007FF7728CD6D4+518404]
	simdutf::get_active_implementation [0x00007FF7728CD819+518729]
	simdutf::get_active_implementation [0x00007FF7728BF3C6+460278]
	BaseThreadInitThunk [0x00007FFCF358E8D7+23]
	RtlUserThreadStart [0x00007FFCF46FBF6C+44]

2025-04-03 10:17:45,212 - WafLogger - DEBUG - Gathering test summary results. [runner.py:365]
2025-04-03 10:17:45,212 - WafLogger - DEBUG - Adding row to test summary results excel file. [runner.py:367]
2025-04-03 10:17:46,041 - WafLogger - DEBUG - Closing the test and creating the test result pdf file. [runner.py:370]
2025-04-03 10:17:46,041 - WafLogger - DEBUG - Started creating pdf report and closing the browser [keywords_manager.py:24]
2025-04-03 10:17:47,619 - WafLogger - DEBUG - Closing Browser [driver_functions.py:22]
2025-04-03 10:17:54,428 - WafLogger - DEBUG - Finished recording. [runner.py:422]
